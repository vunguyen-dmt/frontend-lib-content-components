{"version":3,"file":"api.test.js","names":["utils","_interopRequireWildcard","require","api","mockApi","urls","_utils2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","jest","mock","camelizeMap","camelized","requireActual","camelize","camelizeKeys","list","map","block","fn","mockName","blockAncestor","blockStudioView","courseAssets","videoTranscripts","allowThumbnailUpload","thumbnailUpload","checkTranscriptsForImport","courseDetailsUrl","courseAdvanceSettings","replaceTranscript","videoFeatures","courseVideos","mockImplementation","_ref","studioEndpointUrl","learningContextId","post","deleteObject","apiMethods","blockId","title","describe","beforeEach","clearAllMocks","it","fetchBlockById","expect","toHaveBeenCalledWith","fetchByUnitId","fetchStudioView","fetchAssets","fetchCourseDetails","fetchVideos","fetchAdvancedSettings","test","content","normalizeContent","blockType","toEqual","category","courseKey","data","has_changes","id","metadata","display_name","videoSource","fallbackVideos","allowVideoDownloads","allowVideoSharing","level","thumbnail","transcripts","allowTranscriptDownloads","duration","startTime","stopTime","showTranscriptByDefault","handout","licenseType","licenseDetails","html5Sources","edxVideoId","youtubeId","license","spyOn","mockReturnValue","download_video","public_access","edx_video_id","html5_sources","youtube_id_1_0","download_track","track","show_captions","start_time","end_time","restoreAllMocks","toThrow","saveBlock","asset","photo","mockFormdata","FormData","append","uploadAsset","files","file_name","content_type","uploadVideo","date","time","imageData","some","dateAdded","loadImage","Date","getTime","ids","testData","other","oldLoadImage","out","loadImages","videoId","uploadThumbnail","language","youTubeId","getJSON","parameters","encodeURIComponent","importTranscript","transcript","uploadTranscript","mockDeleteJSON","lang","deleteTranscript","mockJSON","getTranscript","youtubeUrl","afterEach","processVideoIds","videoUrl","isEdxVideo","testURLs","url","parseYoutubeId","badURL","processLicense","attribution","noncommercial","noDerivatives","shareAlike","envTemp","process","env","resetModules","REACT_APP_DEVGALLERY","checkMockApi","emptyMock","args","fetchVideoFeatures"],"sources":["../../../../../src/editors/data/services/cms/api.test.js"],"sourcesContent":["/* eslint-disable no-import-assign */\nimport * as utils from '../../../utils';\nimport * as api from './api';\nimport * as mockApi from './mockApi';\nimport * as urls from './urls';\nimport { get, post, deleteObject } from './utils';\n\njest.mock('../../../utils', () => {\n  const camelizeMap = (obj) => ({ ...obj, camelized: true });\n  return {\n    ...jest.requireActual('../../../utils'),\n    camelize: camelizeMap,\n    camelizeKeys: (list) => list.map(camelizeMap),\n  };\n});\n\njest.mock('./urls', () => ({\n  block: jest.fn().mockName('urls.block'),\n  blockAncestor: jest.fn().mockName('urls.blockAncestor'),\n  blockStudioView: jest.fn().mockName('urls.StudioView'),\n  courseAssets: jest.fn().mockName('urls.courseAssets'),\n  videoTranscripts: jest.fn().mockName('urls.videoTranscripts'),\n  allowThumbnailUpload: jest.fn().mockName('urls.allowThumbnailUpload'),\n  thumbnailUpload: jest.fn().mockName('urls.thumbnailUpload'),\n  checkTranscriptsForImport: jest.fn().mockName('urls.checkTranscriptsForImport'),\n  courseDetailsUrl: jest.fn().mockName('urls.courseDetailsUrl'),\n  courseAdvanceSettings: jest.fn().mockName('urls.courseAdvanceSettings'),\n  replaceTranscript: jest.fn().mockName('urls.replaceTranscript'),\n  videoFeatures: jest.fn().mockName('urls.videoFeatures'),\n  courseVideos: jest.fn()\n    .mockName('urls.courseVideos')\n    .mockImplementation(\n      ({ studioEndpointUrl, learningContextId }) => `${studioEndpointUrl}/some_video_upload_url/${learningContextId}`,\n    ),\n}));\n\njest.mock('./utils', () => ({\n  get: jest.fn().mockName('get'),\n  post: jest.fn().mockName('post'),\n  deleteObject: jest.fn().mockName('deleteObject'),\n}));\n\nconst { camelize } = utils;\n\nconst { apiMethods } = api;\n\nconst blockId = 'coursev1:2uX@4345432';\nconst learningContextId = 'demo2uX';\nconst studioEndpointUrl = 'hortus.coa';\nconst title = 'remember this needs to go into metadata to save';\n\ndescribe('cms api', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n  describe('apiMethods', () => {\n    describe('fetchBlockId', () => {\n      it('should call get with url.blocks', () => {\n        apiMethods.fetchBlockById({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.block({ blockId, studioEndpointUrl }));\n      });\n    });\n\n    describe('fetchByUnitId', () => {\n      it('should call get with url.blockAncestor', () => {\n        apiMethods.fetchByUnitId({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.blockAncestor({ studioEndpointUrl, blockId }));\n      });\n    });\n\n    describe('fetchStudioView', () => {\n      it('should call get with url.blockStudioView', () => {\n        apiMethods.fetchStudioView({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.blockStudioView({ studioEndpointUrl, blockId }));\n      });\n    });\n\n    describe('fetchAssets', () => {\n      it('should call get with url.courseAssets', () => {\n        apiMethods.fetchAssets({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseAssets({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('fetchCourseDetails', () => {\n      it('should call get with url.courseDetailsUrl', () => {\n        apiMethods.fetchCourseDetails({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseDetailsUrl({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('fetchVideos', () => {\n      it('should call get with url.courseVideos', () => {\n        apiMethods.fetchVideos({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseVideos({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('fetchAdvancedSettings', () => {\n      it('should call get with url.courseAdvanceSettings', () => {\n        apiMethods.fetchAdvancedSettings({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseAdvanceSettings({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('normalizeContent', () => {\n      test('return value for blockType: html', () => {\n        const content = 'Im baby palo santo ugh celiac fashion axe. La croix lo-fi venmo whatever. Beard man braid migas single-origin coffee forage ramps.';\n        expect(apiMethods.normalizeContent({\n          blockId,\n          blockType: 'html',\n          content,\n          learningContextId,\n          title,\n        })).toEqual({\n          category: 'html',\n          courseKey: learningContextId,\n          data: content,\n          has_changes: true,\n          id: blockId,\n          metadata: { display_name: title },\n        });\n      });\n      test('return value for blockType: video', () => {\n        const content = {\n          videoSource: 'viDeOSouRCE',\n          fallbackVideos: 'FalLBacKVidEOs',\n          allowVideoDownloads: 'alLOwViDeodownLOads',\n          allowVideoSharing: {\n            level: 'sOMeStRInG',\n            value: 'alloWviDeOshArinG',\n          },\n          thumbnail: 'THUmbNaIL',\n          transcripts: 'traNScRiPts',\n          allowTranscriptDownloads: 'aLloWTRaNScriPtdoWnlOADS',\n          duration: {\n            startTime: '00:00:00',\n            stopTime: '00:00:00',\n          },\n          showTranscriptByDefault: 'ShOWtrANscriPTBYDeFAulT',\n          handout: 'HAnDOuT',\n          licenseType: 'LiCeNsETYpe',\n          licenseDetails: 'liCENSeDetAIls',\n        };\n        const html5Sources = 'hTML5souRCES';\n        const edxVideoId = 'eDXviDEOid';\n        const youtubeId = 'yOUtUBeid';\n        const license = 'LiCEnsE';\n        jest.spyOn(api, 'processVideoIds').mockReturnValue({\n          html5Sources,\n          edxVideoId,\n          youtubeId,\n        });\n        jest.spyOn(api, 'processLicense').mockReturnValue(license);\n        expect(apiMethods.normalizeContent({\n          blockId,\n          blockType: 'video',\n          content,\n          learningContextId,\n          title,\n        })).toEqual({\n          category: 'video',\n          courseKey: learningContextId,\n          display_name: title,\n          id: blockId,\n          metadata: {\n            display_name: title,\n            download_video: content.allowVideoDownloads,\n            public_access: content.allowVideoSharing.value,\n            edx_video_id: edxVideoId,\n            html5_sources: html5Sources,\n            youtube_id_1_0: youtubeId,\n            thumbnail: content.thumbnail,\n            download_track: content.allowTranscriptDownloads,\n            track: '',\n            show_captions: content.showTranscriptByDefault,\n            handout: content.handout,\n            start_time: content.duration.startTime,\n            end_time: content.duration.stopTime,\n            license,\n          },\n        });\n        jest.restoreAllMocks();\n      });\n      test('throw error for invalid blockType', () => {\n        expect(() => { apiMethods.normalizeContent({ blockType: 'somethingINVALID' }); })\n          .toThrow(TypeError);\n      });\n    });\n\n    describe('saveBlock', () => {\n      const content = 'Im baby palo santo ugh celiac fashion axe. La croix lo-fi venmo whatever. Beard man braid migas single-origin coffee forage ramps.';\n      it('should call post with urls.block and normalizeContent', () => {\n        apiMethods.saveBlock({\n          blockId,\n          blockType: 'html',\n          content,\n          learningContextId,\n          studioEndpointUrl,\n          title,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.block({ studioEndpointUrl }),\n          apiMethods.normalizeContent({\n            blockType: 'html',\n            content,\n            blockId,\n            learningContextId,\n            title,\n          }),\n        );\n      });\n    });\n\n    describe('uploadAsset', () => {\n      const asset = { photo: 'dAta' };\n      it('should call post with urls.courseAssets and imgdata', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', asset);\n        apiMethods.uploadAsset({\n          learningContextId,\n          studioEndpointUrl,\n          asset,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.courseAssets({ studioEndpointUrl, learningContextId }),\n          mockFormdata,\n        );\n      });\n    });\n\n    describe('uploadVideo', () => {\n      it('should call post with urls.courseVideos and data', () => {\n        const data = { files: [{ file_name: 'video.mp4', content_type: 'mp4' }] };\n\n        apiMethods.uploadVideo({ data, studioEndpointUrl, learningContextId });\n\n        expect(urls.courseVideos).toHaveBeenCalledWith({ studioEndpointUrl, learningContextId });\n        expect(post).toHaveBeenCalledWith(\n          urls.courseVideos({ studioEndpointUrl, learningContextId }),\n          data,\n        );\n      });\n    });\n  });\n  describe('loadImage', () => {\n    it('loads incoming image data, replacing the dateAdded with a date field', () => {\n      const [date, time] = ['Jan 20, 2022', '9:30 PM'];\n      const imageData = { some: 'image data', dateAdded: `${date} at ${time}` };\n      expect(api.loadImage(imageData)).toEqual({\n        ...imageData,\n        dateAdded: new Date(`${date} ${time}`).getTime(),\n      });\n    });\n  });\n  describe('loadImages', () => {\n    it('loads a list of images into an object by id, using loadImage to translate', () => {\n      const ids = ['id0', 'Id1', 'ID2', 'iD3'];\n      const testData = [\n        { id: ids[0], some: 'data' },\n        { id: ids[1], other: 'data' },\n        { id: ids[2], some: 'DATA' },\n        { id: ids[3], other: 'DATA' },\n      ];\n      const oldLoadImage = api.loadImage;\n      api.loadImage = (imageData) => ({ loadImage: imageData });\n      const out = api.loadImages(testData);\n      expect(out).toEqual({\n        [ids[0]]: api.loadImage(camelize(testData[0])),\n        [ids[1]]: api.loadImage(camelize(testData[1])),\n        [ids[2]]: api.loadImage(camelize(testData[2])),\n        [ids[3]]: api.loadImage(camelize(testData[3])),\n      });\n      api.loadImage = oldLoadImage;\n    });\n  });\n  describe('uploadThumbnail', () => {\n    describe('uploadThumbnail', () => {\n      const thumbnail = 'dAta';\n      const videoId = 'sOmeVIDeoiD';\n      it('should call post with urls.thumbnailUpload and thumbnail data', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', thumbnail);\n        apiMethods.uploadThumbnail({\n          studioEndpointUrl,\n          learningContextId,\n          videoId,\n          thumbnail,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.thumbnailUpload({ studioEndpointUrl, learningContextId, videoId }),\n          mockFormdata,\n        );\n      });\n    });\n  });\n  describe('videoTranscripts', () => {\n    const language = 'la';\n    const videoId = 'sOmeVIDeoiD';\n    const youTubeId = 'SOMeyoutUBeid';\n    describe('checkTranscriptsForImport', () => {\n      const getJSON = `{\"locator\":\"${blockId}\",\"videos\":[{\"mode\":\"youtube\",\"video\":\"${youTubeId}\",\"type\":\"youtube\"},{\"mode\":\"edx_video_id\",\"type\":\"edx_video_id\",\"video\":\"${videoId}\"}]}`;\n      it('should call get with url.checkTranscriptsForImport', () => {\n        apiMethods.checkTranscriptsForImport({\n          studioEndpointUrl,\n          blockId,\n          videoId,\n          youTubeId,\n        });\n        expect(get).toHaveBeenCalledWith(urls.checkTranscriptsForImport({\n          studioEndpointUrl,\n          parameters: encodeURIComponent(getJSON),\n        }));\n      });\n    });\n    describe('importTranscript', () => {\n      const getJSON = `{\"locator\":\"${blockId}\",\"videos\":[{\"mode\":\"youtube\",\"video\":\"${youTubeId}\",\"type\":\"youtube\"}]}`;\n      it('should call get with url.replaceTranscript', () => {\n        apiMethods.importTranscript({ studioEndpointUrl, blockId, youTubeId });\n        expect(get).toHaveBeenCalledWith(urls.replaceTranscript({\n          studioEndpointUrl,\n          parameters: encodeURIComponent(getJSON),\n        }));\n      });\n    });\n    describe('uploadTranscript', () => {\n      const transcript = { transcript: 'dAta' };\n      it('should call post with urls.videoTranscripts and transcript data', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', transcript);\n        mockFormdata.append('edx_video_id', videoId);\n        mockFormdata.append('language_code', language);\n        mockFormdata.append('new_language_code', language);\n        apiMethods.uploadTranscript({\n          blockId,\n          studioEndpointUrl,\n          transcript,\n          videoId,\n          language,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.videoTranscripts({ studioEndpointUrl, blockId }),\n          mockFormdata,\n        );\n      });\n    });\n    describe('transcript delete', () => {\n      it('should call deleteObject with urls.videoTranscripts and transcript data', () => {\n        const mockDeleteJSON = { data: { lang: language, edx_video_id: videoId } };\n        apiMethods.deleteTranscript({\n          blockId,\n          studioEndpointUrl,\n          videoId,\n          language,\n        });\n        expect(deleteObject).toHaveBeenCalledWith(\n          urls.videoTranscripts({ studioEndpointUrl, blockId }),\n          mockDeleteJSON,\n        );\n      });\n    });\n    describe('transcript get', () => {\n      it('should call get with urls.videoTranscripts and transcript data', () => {\n        const mockJSON = { data: { lang: language, edx_video_id: videoId } };\n        apiMethods.getTranscript({\n          blockId,\n          studioEndpointUrl,\n          videoId,\n          language,\n        });\n        expect(get).toHaveBeenCalledWith(\n          `${urls.videoTranscripts({ studioEndpointUrl, blockId })}?language_code=${language}`,\n          mockJSON,\n        );\n      });\n    });\n  });\n  describe('processVideoIds', () => {\n    const edxVideoId = 'eDXviDEoid';\n    const youtubeId = 'yOuTuBeUrL';\n    const youtubeUrl = `https://youtu.be/${youtubeId}`;\n    const html5Sources = [\n      'sOuRce1',\n      'sourCE2',\n    ];\n    afterEach(() => {\n      jest.restoreAllMocks();\n    });\n    describe('if there is a video id', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(true);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(youtubeId);\n      });\n      it('returns edxVideoId when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: '',\n          fallbackVideos: [],\n          videoId: edxVideoId,\n        })).toEqual({\n          edxVideoId,\n          html5Sources: [],\n          youtubeId: '',\n        });\n      });\n      it('returns edxVideoId and html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: html5Sources,\n          videoId: edxVideoId,\n        })).toEqual({\n          edxVideoId,\n          html5Sources,\n          youtubeId,\n        });\n      });\n    });\n    describe('if there is a youtube url', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(false);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(youtubeId);\n      });\n      it('returns youtubeId when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: [],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources: [],\n          youtubeId,\n        });\n      });\n      it('returns youtubeId and html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: html5Sources,\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources,\n          youtubeId,\n        });\n      });\n    });\n    describe('if the videoSource is an html5 source', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(false);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(null);\n      });\n      it('returns html5Sources when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: html5Sources[0],\n          fallbackVideos: [],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources: [html5Sources[0]],\n          youtubeId: '',\n        });\n      });\n      it('returns html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: html5Sources[0],\n          fallbackVideos: [html5Sources[1]],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources,\n          youtubeId: '',\n        });\n      });\n    });\n  });\n  describe('isEdxVideo', () => {\n    it('returns true if id is in uuid4 format', () => {\n      const id = 'c2afd8c8-3329-4dfc-95be-4ee6d986c3e5';\n      expect(api.isEdxVideo(id)).toEqual(true);\n    });\n    it('returns false if id is not in uuid4 format', () => {\n      const id = 'someB-ad-Id';\n      expect(api.isEdxVideo(id)).toEqual(false);\n    });\n  });\n  describe('parseYoutubeId', () => {\n    it('returns the youtube id in an url', () => {\n      const id = '3_yD_cEKoCk';\n      const testURLs = [\n        'https://www.youtube.com/watch?v=3_yD_cEKoCk&feature=featured',\n        'https://www.youtube.com/watch?v=3_yD_cEKoCk',\n        'http://www.youtube.com/watch?v=3_yD_cEKoCk',\n        '//www.youtube.com/watch?v=3_yD_cEKoCk',\n        'www.youtube.com/watch?v=3_yD_cEKoCk',\n        'https://youtube.com/watch?v=3_yD_cEKoCk',\n        'http://youtube.com/watch?v=3_yD_cEKoCk',\n        '//youtube.com/watch?v=3_yD_cEKoCk',\n        'youtube.com/watch?v=3_yD_cEKoCk',\n        'https://m.youtube.com/watch?v=3_yD_cEKoCk',\n        'http://m.youtube.com/watch?v=3_yD_cEKoCk',\n        '//m.youtube.com/watch?v=3_yD_cEKoCk',\n        'm.youtube.com/watch?v=3_yD_cEKoCk',\n        'https://www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'http://www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        '//www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'https://www.youtube.com/embed/3_yD_cEKoCk?autoplay=1',\n        'https://www.youtube.com/embed/3_yD_cEKoCk',\n        'http://www.youtube.com/embed/3_yD_cEKoCk',\n        '//www.youtube.com/embed/3_yD_cEKoCk',\n        'www.youtube.com/embed/3_yD_cEKoCk',\n        'https://youtube.com/embed/3_yD_cEKoCk',\n        'http://youtube.com/embed/3_yD_cEKoCk',\n        '//youtube.com/embed/3_yD_cEKoCk',\n        'youtube.com/embed/3_yD_cEKoCk',\n        'https://youtu.be/3_yD_cEKoCk?t=120',\n        'https://youtu.be/3_yD_cEKoCk',\n        'http://youtu.be/3_yD_cEKoCk',\n        '//youtu.be/3_yD_cEKoCk',\n        'youtu.be/3_yD_cEKoCk',\n      ];\n      testURLs.forEach((url) => {\n        expect(api.parseYoutubeId(url)).toEqual(id);\n      });\n    });\n    it('returns null if the url is not a youtube url', () => {\n      const badURL = 'https://someothersite.com/3_yD_cEKoCk';\n      expect(api.parseYoutubeId(badURL)).toEqual(null);\n    });\n  });\n  describe('processLicense', () => {\n    it('returns empty string when licenseType is empty or not a valid licnese type', () => {\n      expect(api.processLicense('', {})).toEqual('');\n      expect(api.processLicense('LiCeNsETYpe', {})).toEqual('');\n    });\n    it('returns empty string when licenseType equals creative commons', () => {\n      const licenseType = 'creative-commons';\n      const licenseDetails = {\n        attribution: true,\n        noncommercial: false,\n        noDerivatives: true,\n        shareAlike: false,\n      };\n      expect(api.processLicense(licenseType, licenseDetails)).toEqual('creative-commons: ver=4.0 BY ND');\n    });\n    it('returns empty string when licenseType equals creative commons', () => {\n      const licenseType = 'all-rights-reserved';\n      const licenseDetails = {};\n      expect(api.processLicense(licenseType, licenseDetails)).toEqual('all-rights-reserved');\n    });\n  });\n  describe('checkMockApi', () => {\n    const envTemp = process.env;\n    beforeEach(() => {\n      jest.resetModules();\n      process.env = { ...envTemp };\n    });\n    afterEach(() => {\n      process.env = envTemp;\n    });\n    describe('if REACT_APP_DEVGALLERY is true', () => {\n      it('should return the mockApi version of a call when it exists', () => {\n        process.env.REACT_APP_DEVGALLERY = true;\n        expect(api.checkMockApi('fetchBlockById')).toEqual(mockApi.fetchBlockById);\n      });\n      it('should return an empty mock when the call does not exist', () => {\n        process.env.REACT_APP_DEVGALLERY = true;\n        expect(api.checkMockApi('someRAnDomThINg')).toEqual(mockApi.emptyMock);\n      });\n    });\n    describe('if REACT_APP_DEVGALLERY is not true', () => {\n      it('should return the appropriate call', () => {\n        expect(api.checkMockApi('fetchBlockById')).toEqual(apiMethods.fetchBlockById);\n      });\n    });\n  });\n  describe('fetchVideoFeatures', () => {\n    it('should call get with url.videoFeatures', () => {\n      const args = { studioEndpointUrl, learningContextId };\n      apiMethods.fetchVideoFeatures({ ...args });\n      expect(get).toHaveBeenCalledWith(urls.videoFeatures({ ...args }));\n    });\n  });\n});\n"],"mappings":"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"}