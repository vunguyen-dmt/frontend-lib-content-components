{"version":3,"file":"embedIframePlugin.test.js","names":["_embedIframePlugin","_interopRequireDefault","require","obj","__esModule","default","editorMock","windowManager","open","jest","fn","insertContent","ui","registry","addButton","describe","pluginConfig","title","body","type","tabs","items","name","label","multiline","autofocus","required","text","value","checked","buttons","primary","beforeEach","clearAllMocks","test","tinyMCEEmbedIframePlugin","mock","calls","onAction","expect","toHaveBeenCalled","toHaveBeenCalledWith","objectContaining","onSubmit","any","Function","onChange","generalTab","advancedTab","onChangeFunction","apiMock","getData","sizeType","redial","field","generalTabExpected","filter","item","expectedTabs","expectedBody","dataMock","source","close","onSubmitFunction","longDescriptionURL","border","scrollbar","stringContaining","size","width","height"],"sources":["../../../../../src/editors/sharedComponents/TinyMceWidget/customTinyMcePlugins/embedIframePlugin.test.js"],"sourcesContent":["import tinyMCEEmbedIframePlugin from './embedIframePlugin';\n\nconst editorMock = {\n  windowManager: {\n    open: jest.fn(),\n  },\n  insertContent: jest.fn(),\n  ui: {\n    registry: {\n      addButton: jest.fn(),\n    },\n  },\n};\n\ndescribe('TinyMCE Embed IFrame Plugin', () => {\n  const pluginConfig = {\n    title: 'Insert iframe',\n    body: {\n      type: 'tabpanel',\n      tabs: [\n        {\n          title: 'General',\n          items: [\n            {\n              type: 'input',\n              name: 'source',\n              label: 'Source URL',\n              multiline: false,\n              autofocus: true,\n              required: true,\n            },\n            {\n              type: 'selectbox',\n              name: 'sizeType',\n              label: 'Size',\n              items: [\n                { text: 'Inline Value', value: 'inline' },\n                { text: 'Big embed', value: 'big' },\n                { text: 'Small embed', value: 'small' },\n              ],\n            },\n            {\n              type: 'sizeinput',\n              name: 'size',\n              label: 'Dimensions',\n            },\n          ],\n        },\n        {\n          title: 'Advanced',\n          items: [\n            {\n              type: 'input',\n              name: 'name',\n              label: 'Name',\n              value: '',\n            },\n            {\n              type: 'input',\n              name: 'title',\n              label: 'Title',\n              value: '',\n            },\n            {\n              type: 'input',\n              name: 'longDescriptionURL',\n              label: 'Long description URL',\n              value: '',\n            },\n            {\n              type: 'checkbox',\n              name: 'border',\n              label: 'Show iframe border',\n              text: 'Border',\n              checked: false,\n            },\n            {\n              type: 'checkbox',\n              name: 'scrollbar',\n              label: 'Enable scrollbar',\n              text: 'Scrollbar',\n              checked: false,\n            },\n          ],\n        },\n      ],\n    },\n    buttons: [\n      {\n        type: 'cancel',\n        name: 'cancel',\n        text: 'Cancel',\n      },\n      {\n        type: 'submit',\n        name: 'save',\n        text: 'Save',\n        primary: true,\n      },\n    ],\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  test('opens insert iframe modal on button action', () => {\n    // Invoke the plugin\n    tinyMCEEmbedIframePlugin(editorMock);\n\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n    expect(editorMock.windowManager.open).toHaveBeenCalled();\n  });\n\n  test('opens insert iframe modal on button action validate onSubmit and OnChange function', () => {\n    tinyMCEEmbedIframePlugin(editorMock);\n\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n    expect(editorMock.windowManager.open).toHaveBeenCalledWith(\n      expect.objectContaining({\n        onSubmit: expect.any(Function),\n        onChange: expect.any(Function),\n      }),\n    );\n  });\n\n  test('opens insert iframe modal on button action validate title', () => {\n    tinyMCEEmbedIframePlugin(editorMock);\n\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n    expect(editorMock.windowManager.open).toHaveBeenCalled();\n    expect(editorMock.windowManager.open).toHaveBeenCalledWith(\n      expect.objectContaining({\n        title: pluginConfig.title,\n      }),\n    );\n  });\n\n  test('opens insert iframe modal on button action validate buttons', () => {\n    tinyMCEEmbedIframePlugin(editorMock);\n\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n    expect(editorMock.windowManager.open).toHaveBeenCalled();\n    expect(editorMock.windowManager.open).toHaveBeenCalledWith(\n      expect.objectContaining({\n        buttons: pluginConfig.buttons,\n      }),\n    );\n  });\n\n  test('opens insert iframe modal on button action validate tabs', () => {\n    tinyMCEEmbedIframePlugin(editorMock);\n\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n    const [generalTab, advancedTab] = pluginConfig.body.tabs;\n\n    expect(editorMock.windowManager.open).toHaveBeenCalled();\n    expect(editorMock.windowManager.open).toHaveBeenCalledWith(\n      expect.objectContaining({\n        body: { type: 'tabpanel', tabs: [generalTab, advancedTab] },\n      }),\n    );\n  });\n  test('tests onChange function in plugin', () => {\n    tinyMCEEmbedIframePlugin(editorMock);\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n    // Access the onChange function from the opened configuration\n    const onChangeFunction = editorMock.windowManager.open.mock.calls[0][0].onChange;\n\n    // Mock API and field for onChange\n    const apiMock = {\n      getData: jest.fn(() => ({ sizeType: 'big' })),\n      redial: jest.fn(),\n    };\n    const field = {\n      name: 'sizeType',\n    };\n\n    // Simulate calling the onChange function\n    onChangeFunction(apiMock, field);\n\n    expect(apiMock.getData).toHaveBeenCalled();\n    expect(apiMock.redial).toHaveBeenCalled();\n  });\n\n  test('modifies generalTab items when sizeType is not inline', () => {\n    tinyMCEEmbedIframePlugin(editorMock);\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n    const onChangeFunction = editorMock.windowManager.open.mock.calls[0][0].onChange;\n\n    const apiMock = {\n      getData: jest.fn(() => ({ sizeType: 'big' })),\n      redial: jest.fn(),\n    };\n    const field = {\n      name: 'sizeType',\n    };\n\n    onChangeFunction(apiMock, field);\n\n    const [generalTab, advancedTab] = pluginConfig.body.tabs;\n    const generalTabExpected = generalTab.items.filter(\n      (item) => item.type !== 'sizeinput',\n    );\n\n    const expectedTabs = [\n      { title: generalTab.title, items: generalTabExpected, type: generalTab.type },\n      advancedTab,\n    ];\n\n    const expectedBody = {\n      type: pluginConfig.body.type,\n      tabs: expectedTabs,\n    };\n\n    expect(apiMock.redial).toHaveBeenCalledWith(expect.objectContaining({\n      body: expectedBody,\n    }));\n  });\n\n  test('adds sizeinput to generalTab items when sizeType is inline', () => {\n    tinyMCEEmbedIframePlugin(editorMock);\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n    const onChangeFunction = editorMock.windowManager.open.mock.calls[0][0].onChange;\n\n    const apiMock = {\n      getData: jest.fn(() => ({ sizeType: 'inline' })),\n      redial: jest.fn(),\n    };\n    const field = {\n      name: 'sizeType',\n    };\n\n    onChangeFunction(apiMock, field);\n\n    const [generalTab, advancedTab] = pluginConfig.body.tabs;\n\n    expect(apiMock.redial).toHaveBeenCalledWith(\n      expect.objectContaining({\n        body: { type: 'tabpanel', tabs: [generalTab, advancedTab] },\n      }),\n    );\n  });\n\n  test('tests onSubmit function in plugin', () => {\n    const dataMock = {\n      source: 'https://www.example.com',\n      sizeType: 'big',\n    };\n    const apiMock = {\n      getData: jest.fn(() => dataMock),\n      close: jest.fn(),\n    };\n\n    tinyMCEEmbedIframePlugin(editorMock);\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n    const onSubmitFunction = editorMock.windowManager.open.mock.calls[0][0].onSubmit;\n    onSubmitFunction(apiMock);\n\n    expect(apiMock.getData).toHaveBeenCalled();\n    expect(editorMock.insertContent).toHaveBeenCalled();\n    expect(apiMock.close).toHaveBeenCalled();\n  });\n\n  test('tests onSubmit function in plugin advanced properties', () => {\n    const dataMock = {\n      source: 'https://www.example.com',\n      sizeType: 'big',\n      name: 'iframeName',\n      title: 'iframeTitle',\n      longDescriptionURL: 'https://example.com/description',\n      border: true,\n      scrollbar: true,\n    };\n    const apiMock = {\n      getData: jest.fn(() => dataMock),\n      close: jest.fn(),\n    };\n\n    tinyMCEEmbedIframePlugin(editorMock);\n    editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n    const onSubmitFunction = editorMock.windowManager.open.mock.calls[0][0].onSubmit;\n    onSubmitFunction(apiMock);\n\n    expect(apiMock.getData).toHaveBeenCalled();\n\n    expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('width=\"800px\"'));\n    expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('height=\"800px\"'));\n    expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining(`name=\"${dataMock.name}\"`));\n    expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining(`title=\"${dataMock.title}\"`));\n    expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining(`longdesc=\"${dataMock.longDescriptionURL}\"`));\n    expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('scrolling=\"yes\"'));\n\n    expect(apiMock.close).toHaveBeenCalled();\n  });\n\n  describe('tests onSubmit function in plugin sizeType', () => {\n    test('tests onSubmit function in plugin with sizeType big', () => {\n      const dataMock = {\n        source: 'https://www.example.com',\n        sizeType: 'big',\n      };\n\n      const apiMock = {\n        getData: jest.fn(() => dataMock),\n        close: jest.fn(),\n      };\n\n      tinyMCEEmbedIframePlugin(editorMock);\n      editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n      const onSubmitFunction = editorMock.windowManager.open.mock.calls[0][0].onSubmit;\n      onSubmitFunction(apiMock);\n\n      expect(apiMock.getData).toHaveBeenCalled();\n\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('width=\"800px\"'));\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('height=\"800px\"'));\n\n      expect(apiMock.close).toHaveBeenCalled();\n    });\n\n    test('tests onSubmit function in plugin with sizeType small', () => {\n      const dataMock = {\n        source: 'https://www.example.com',\n        sizeType: 'small',\n      };\n\n      const apiMock = {\n        getData: jest.fn(() => dataMock),\n        close: jest.fn(),\n      };\n\n      tinyMCEEmbedIframePlugin(editorMock);\n      editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n      const onSubmitFunction = editorMock.windowManager.open.mock.calls[0][0].onSubmit;\n      onSubmitFunction(apiMock);\n\n      expect(apiMock.getData).toHaveBeenCalled();\n\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('width=\"100px\"'));\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('height=\"100px\"'));\n      expect(apiMock.close).toHaveBeenCalled();\n    });\n\n    test('tests onSubmit function in plugin with custom sizeType', () => {\n      const dataMock = {\n        source: 'https://www.example.com',\n        sizeType: 'inline',\n        size: {\n          width: '500px',\n          height: '700px',\n        },\n      };\n\n      const apiMock = {\n        getData: jest.fn(() => dataMock),\n        close: jest.fn(),\n      };\n\n      tinyMCEEmbedIframePlugin(editorMock);\n      editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n      const onSubmitFunction = editorMock.windowManager.open.mock.calls[0][0].onSubmit;\n      onSubmitFunction(apiMock);\n\n      expect(apiMock.getData).toHaveBeenCalled();\n\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('width=\"500px\"'));\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('height=\"700px\"'));\n      expect(apiMock.close).toHaveBeenCalled();\n    });\n\n    test('tests onSubmit function in plugin with custom sizeType invalid values', () => {\n      const dataMock = {\n        source: 'https://www.example.com',\n        sizeType: 'inline',\n        size: {\n          width: 'test',\n          height: 'test',\n        },\n      };\n\n      const apiMock = {\n        getData: jest.fn(() => dataMock),\n        close: jest.fn(),\n      };\n\n      tinyMCEEmbedIframePlugin(editorMock);\n      editorMock.ui.registry.addButton.mock.calls[0][1].onAction();\n\n      const onSubmitFunction = editorMock.windowManager.open.mock.calls[0][0].onSubmit;\n      onSubmitFunction(apiMock);\n\n      expect(apiMock.getData).toHaveBeenCalled();\n\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('width=\"300px\"'));\n      expect(editorMock.insertContent).toHaveBeenCalledWith(expect.stringContaining('height=\"300px\"'));\n      expect(apiMock.close).toHaveBeenCalled();\n    });\n  });\n});\n"],"mappings":"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"}