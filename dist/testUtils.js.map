{"version":3,"file":"testUtils.js","names":["_react","_interopRequireDefault","require","_utils","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","formatMessage","msg","values","message","defaultMessage","replace","exports","mockNestedComponent","name","contents","fn","nestedName","mockNestedComponents","mapping","entries","reduce","_ref","MockUseState","constructor","hooks","oldState","setState","stateVals","mock","bind","restore","mockVal","testGetter","StrictDict","state","jest","val","mockReturnValueOnce","test","testValue","useState","spyOn","react","mockImplementationOnce","expect","toEqual"],"sources":["../src/testUtils.js"],"sourcesContent":["/* istanbul ignore file */\nimport react from 'react';\nimport { StrictDict } from './editors/utils';\n/**\n * Mocked formatMessage provided by react-intl\n */\nexport const formatMessage = (msg, values) => {\n  let message = msg.defaultMessage;\n  if (values === undefined) {\n    return message;\n  }\n  Object.keys(values).forEach((key) => {\n    // eslint-disable-next-line\n    message = message.replace(`{${key}}`, values[key]);\n  });\n  return message;\n};\n\n/**\n * Mock a single component, or a nested component so that its children render nicely\n * in snapshots.\n * @param {string} name - parent component name\n * @param {obj} contents - object of child components with intended component\n *   render name.\n * @return {func} - mock component with nested children.\n *\n * usage:\n *   mockNestedComponent('Card', { Body: 'Card.Body', Form: { Control: { Feedback: 'Form.Control.Feedback' }}... });\n *   mockNestedComponent('IconButton', 'IconButton');\n */\nexport const mockNestedComponent = (name, contents) => {\n  if (typeof contents !== 'object') {\n    return contents;\n  }\n  const fn = () => name;\n  Object.defineProperty(fn, 'name', { value: name });\n  Object.keys(contents).forEach((nestedName) => {\n    const value = contents[nestedName];\n    fn[nestedName] = typeof value !== 'object'\n      ? value\n      : mockNestedComponent(`${name}.${nestedName}`, value);\n  });\n  return fn;\n};\n\n/**\n * Mock a module of components.  nested components will be rendered nicely in snapshots.\n * @param {obj} mapping - component module mock config.\n * @return {obj} - module of flat and nested components that will render nicely in snapshots.\n * usage:\n *   mockNestedComponents({\n *     Card: { Body: 'Card.Body' },\n *     IconButton: 'IconButton',\n *   })\n */\nexport const mockNestedComponents = (mapping) => Object.entries(mapping).reduce(\n  (obj, [name, value]) => ({\n    ...obj,\n    [name]: mockNestedComponent(name, value),\n  }),\n  {},\n);\n\n/**\n * Mock utility for working with useState in a hooks module.\n * Expects/requires an object containing the state object in order to ensure\n * the mock behavior works appropriately.\n *\n * Expected format:\n *   hooks = { state: { <key>: (val) => React.createRef(val), ... } }\n *\n * Returns a utility for mocking useState and providing access to specific state values\n * and setState methods, as well as allowing per-test configuration of useState value returns.\n *\n * Example usage:\n *   // hooks.js\n *   import * as module from './hooks';\n *   const state = {\n *     isOpen: (val) => React.useState(val),\n *     hasDoors: (val) => React.useState(val),\n *     selected: (val) => React.useState(val),\n *   };\n *   ...\n *   export const exampleHook = () => {\n *     const [isOpen, setIsOpen] = module.state.isOpen(false);\n *     if (!isOpen) { return null; }\n *     return { isOpen, setIsOpen };\n *   }\n *   ...\n *\n *   // hooks.test.js\n *   import * as hooks from './hooks';\n *   const state = new MockUseState(hooks)\n *   ...\n *   describe('state hooks', () => {\n *     state.testGetter(state.keys.isOpen);\n *     state.testGetter(state.keys.hasDoors);\n *     state.testGetter(state.keys.selected);\n *   });\n *   describe('exampleHook', () => {\n *     beforeEach(() => { state.mock(); });\n *     it('returns null if isOpen is default value', () => {\n *       expect(hooks.exampleHook()).toEqual(null);\n *     });\n *     it('returns isOpen and setIsOpen if isOpen is not null', () => {\n *       state.mockVal(state.keys.isOpen, true);\n *       expect(hooks.exampleHook()).toEqual({\n *         isOpen: true,\n *         setIsOpen: state.setState[state.keys.isOpen],\n *       });\n *     });\n *     afterEach(() => { state.restore(); });\n *   });\n *\n * @param {obj} hooks - hooks module containing a 'state' object\n */\nexport class MockUseState {\n  constructor(hooks) {\n    this.hooks = hooks;\n    this.oldState = null;\n    this.setState = {};\n    this.stateVals = {};\n\n    this.mock = this.mock.bind(this);\n    this.restore = this.restore.bind(this);\n    this.mockVal = this.mockVal.bind(this);\n    this.testGetter = this.testGetter.bind(this);\n  }\n\n  /**\n   * @return {object} - StrictDict of state object keys\n   */\n  get keys() {\n    return StrictDict(Object.keys(this.hooks.state).reduce(\n      (obj, key) => ({ ...obj, [key]: key }),\n      {},\n    ));\n  }\n\n  /**\n   * Replace the hook module's state object with a mocked version, initialized to default values.\n   */\n  mock() {\n    this.oldState = this.hooks.state;\n    Object.keys(this.keys).forEach(key => {\n      this.hooks.state[key] = jest.fn(val => {\n        this.stateVals[key] = val;\n        return [val, this.setState[key]];\n      });\n    });\n    this.setState = Object.keys(this.keys).reduce(\n      (obj, key) => ({\n        ...obj,\n        [key]: jest.fn(val => {\n          this.hooks.state[key] = val;\n        }),\n      }),\n      {},\n    );\n  }\n\n  /**\n   * Restore the hook module's state object to the actual code.\n   */\n  restore() {\n    this.hooks.state = this.oldState;\n  }\n\n  /**\n   * Mock the state getter associated with a single key to return a specific value one time.\n   * @param {string} key - state key (from this.keys)\n   * @param {any} val - new value to be returned by the useState call.\n   */\n  mockVal(key, val) {\n    this.hooks.state[key].mockReturnValueOnce([val, this.setState[key]]);\n  }\n\n  testGetter(key) {\n    test(`${key} state getter should return useState passthrough`, () => {\n      const testValue = 'some value';\n      const useState = (val) => ({ useState: val });\n      jest.spyOn(react, 'useState').mockImplementationOnce(useState);\n      expect(this.hooks.state[key](testValue)).toEqual(useState(testValue));\n    });\n  }\n}\n"],"mappings":"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"}