{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_propTypes","_i18n","_SettingsOption","_messages","_hooks","_GroupFeedbackRow","_Button","_jsxRuntime","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","GroupFeedbackCard","_ref","groupFeedbacks","updateSettings","answers","intl","summary","handleAdd","groupFeedbackCardHooks","jsxs","title","formatMessage","messages","groupFeedbackSettingTitle","message","values","none","hasExpandableTextArea","children","jsx","className","FormattedMessage","groupFeedbackInputLabel","map","groupFeedback","id","groupFeedbackRowHooks","variant","onClick","size","addGroupFeedbackButtonText","exports","propTypes","intlShape","isRequired","PropTypes","arrayOf","shape","number","feedback","string","correct","bool","selectedFeedback","unselectedFeedback","func","_default","injectIntl"],"sources":["../../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/GroupFeedback/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport SettingsOption from '../../SettingsOption';\nimport messages from './messages';\nimport { groupFeedbackCardHooks, groupFeedbackRowHooks } from './hooks';\nimport GroupFeedbackRow from './GroupFeedbackRow';\nimport Button from '../../../../../../../sharedComponents/Button';\n\nexport const GroupFeedbackCard = ({\n  groupFeedbacks,\n  updateSettings,\n  answers,\n  // inject\n  intl,\n}) => {\n  const { summary, handleAdd } = groupFeedbackCardHooks(groupFeedbacks, updateSettings, answers);\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.groupFeedbackSettingTitle)}\n      summary={intl.formatMessage(summary.message, { ...summary.values })}\n      none={!groupFeedbacks.length}\n      hasExpandableTextArea\n    >\n      <div className=\"pb-3\">\n        <FormattedMessage {...messages.groupFeedbackInputLabel} />\n      </div>\n      {groupFeedbacks.map((groupFeedback) => (\n        <GroupFeedbackRow\n          key={groupFeedback.id}\n          id={groupFeedback.id}\n          value={groupFeedback}\n          answers={answers}\n          {...groupFeedbackRowHooks({ id: groupFeedback.id, groupFeedbacks, updateSettings })}\n        />\n      ))}\n      <Button\n        className=\"m-0 p-0 font-weight-bold\"\n        variant=\"add\"\n        onClick={handleAdd}\n        size=\"sm\"\n      >\n        <FormattedMessage {...messages.addGroupFeedbackButtonText} />\n      </Button>\n    </SettingsOption>\n  );\n};\n\nGroupFeedbackCard.propTypes = {\n  intl: intlShape.isRequired,\n  groupFeedbacks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    feedback: PropTypes.string.isRequired,\n    answers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  })).isRequired,\n  answers: PropTypes.arrayOf(PropTypes.shape({\n    correct: PropTypes.bool,\n    id: PropTypes.string,\n    selectedFeedback: PropTypes.string,\n    title: PropTypes.string,\n    unselectedFeedback: PropTypes.string,\n  })).isRequired,\n  updateSettings: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(GroupFeedbackCard);\n"],"mappings":"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"}