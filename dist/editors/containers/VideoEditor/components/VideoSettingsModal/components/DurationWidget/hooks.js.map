{"version":3,"file":"hooks.js","names":["_react","require","_messages","_interopRequireDefault","_module","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","durationMatcher","durationWidget","_ref","duration","updateField","setDuration","val","initialState","module","durationString","unsavedDuration","setUnsavedDuration","useState","useEffect","onBlur","index","e","updateDuration","inputString","onChange","onDurationChange","onKeyDown","onDurationKeyDown","getTotalLabel","_ref2","subtitle","intl","stopTime","startTime","formatMessage","messages","fullVideoLength","startsAt","durationStringFromValue","total","custom","exports","seconds","Math","floor","minutes","hours","zeroPad","num","padStart","map","join","_ref3","newDurationString","newValue","valueFromDuration","match","trim","caretPos","document","activeElement","selectionStart","newDuration","event","blur","slice","matches","v","unshift","x","parseInt","_default"],"sources":["../../../../../../../../src/editors/containers/VideoEditor/components/VideoSettingsModal/components/DurationWidget/hooks.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport messages from '../messages';\n\nimport * as module from './hooks';\n\nconst durationMatcher = /^(\\d{0,2}):?(\\d{0,2})?:?(\\d{0,2})?$/i;\n\nexport const durationWidget = ({ duration, updateField }) => {\n  const setDuration = (val) => updateField({ duration: val });\n  const initialState = module.durationString(duration);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [unsavedDuration, setUnsavedDuration] = useState(initialState);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(() => {\n    setUnsavedDuration(module.durationString(duration));\n  }, [duration]);\n\n  return {\n    unsavedDuration,\n    onBlur: (index) => (\n      (e) => module.updateDuration({\n        duration,\n        setDuration,\n        unsavedDuration,\n        setUnsavedDuration,\n        index,\n        inputString: e.target.value,\n      })\n    ),\n    onChange: (index) => (\n      (e) => setUnsavedDuration(module.onDurationChange(unsavedDuration, index, e.target.value))\n    ),\n    onKeyDown: (index) => (\n      (e) => setUnsavedDuration(module.onDurationKeyDown(unsavedDuration, index, e))\n    ),\n    getTotalLabel: ({ durationString, subtitle, intl }) => {\n      if (!durationString.stopTime) {\n        if (!durationString.startTime) {\n          return intl.formatMessage(messages.fullVideoLength);\n        }\n        if (subtitle) {\n          return intl.formatMessage(\n            messages.startsAt,\n            { startTime: module.durationStringFromValue(durationString.startTime) },\n          );\n        }\n        return null;\n      }\n      const total = durationString.stopTime - (durationString.startTime || 0);\n      return intl.formatMessage(\n        subtitle ? messages.custom : messages.total,\n        { total: module.durationStringFromValue(total) },\n      );\n    },\n  };\n};\n\n/**\n * durationString(duration)\n * Returns the display value for embedded start and stop times\n * @param {object} duration - object containing startTime and stopTime millisecond values\n * @return {object} - start and stop time from incoming object mapped to duration strings.\n */\nexport const durationString = (duration) => ({\n  startTime: module.durationStringFromValue(duration.startTime),\n  stopTime: module.durationStringFromValue(duration.stopTime),\n});\n\n/**\n * durationStringFromValue(value)\n * Returns a duration string in 'hh:mm:ss' format from the given ms value\n * @param {number} value - duration (in milliseconds)\n * @return {string} - duration in 'hh:mm:ss' format\n */\nexport const durationStringFromValue = (value) => {\n  // return 'why';\n  if (!value || typeof value !== 'number' || value <= 0) {\n    return '00:00:00';\n  }\n  const seconds = Math.floor((value / 1000) % 60);\n  const minutes = Math.floor((value / 60000) % 60);\n  const hours = Math.floor((value / 3600000) % 60);\n  const zeroPad = (num) => String(num).padStart(2, '0');\n  return [hours, minutes, seconds].map(zeroPad).join(':');\n};\n\n/**\n * updateDuration({ duration, unsavedDuration, setUnsavedDuration, setDuration })\n * Returns a memoized callback based on inputs that updates unsavedDuration value and form value\n * if the new string is valid (duration stores a number, unsavedDuration stores a string).\n * If the duration string is invalid, resets the unsavedDuration value to the latest good value.\n * @param {object} duration - redux-stored durations in milliseconds\n * @param {object} unsavedDuration - hook-stored duration in 'hh:mm:ss' format\n * @param {func} setDuration - set form value\n * @param {func} setUnsavedDuration - set unsavedDuration object\n * @param {string} index - startTime or stopTime\n * @param {string} inputString - string value of user input for either the start or stop time fields\n * @return {func} - callback to update duration unsavedDurationly and in redux\n *   updateDuration(args)(index, durationString)\n */\nexport const updateDuration = ({\n  duration,\n  unsavedDuration,\n  setDuration,\n  setUnsavedDuration,\n  index,\n  inputString,\n}) => {\n  let newDurationString = inputString;\n  let newValue = module.valueFromDuration(newDurationString);\n  // maxTime is 23:59:59 or 86399 seconds\n  if (newValue > 86399000) {\n    newValue = 86399000;\n  }\n  // stopTime must be at least 1 second, if not zero\n  if (index === 'stopTime' && newValue > 0 && newValue < 1000) {\n    newValue = 1000;\n  }\n  // stopTime must be at least 1 second after startTime, except 0 means no custom stopTime\n  if (index === 'stopTime' && newValue > 0 && newValue < (duration.startTime + 1000)) {\n    newValue = duration.startTime + 1000;\n  }\n  // startTime must be at least 1 second before stopTime, except when stopTime is less than a second\n  // (stopTime should only be less than a second if it's zero, but we're being paranoid)\n  if (index === 'startTime' && duration.stopTime >= 1000 && newValue > (duration.stopTime - 1000)) {\n    newValue = duration.stopTime - 1000;\n  }\n  newDurationString = module.durationStringFromValue(newValue);\n  setUnsavedDuration({ ...unsavedDuration, [index]: newDurationString });\n  setDuration({ ...duration, [index]: newValue });\n};\n\n/**\n * onDurationChange(duration)\n * Returns a new duration value based on onChange event\n * @param {object} duration - object containing startTime and stopTime millisecond values\n * @param {string} index - 'startTime or 'stopTime'\n * @param {string} val - duration in 'hh:mm:ss' format\n * @return {object} duration - object containing startTime and stopTime millisecond values\n */\nexport const onDurationChange = (duration, index, val) => {\n  const match = val.trim().match(durationMatcher);\n  if (!match) {\n    return duration;\n  }\n\n  const caretPos = document.activeElement.selectionStart;\n  let newDuration = val;\n  if (caretPos === newDuration.length && (newDuration.length === 2 || newDuration.length === 5)) {\n    newDuration += ':';\n  }\n\n  return {\n    ...duration,\n    [index]: newDuration,\n  };\n};\n\n/**\n * onDurationKeyDown(duration)\n * Returns a new duration value based on onKeyDown event\n * @param {object} duration - object containing startTime and stopTime millisecond values\n * @param {string} index - 'startTime or 'stopTime'\n * @param {Event} event - event from onKeyDown\n * @return {object} duration - object containing startTime and stopTime millisecond values\n */\nexport const onDurationKeyDown = (duration, index, event) => {\n  const caretPos = document.activeElement.selectionStart;\n  let newDuration = duration[index];\n\n  switch (event.key) {\n    case 'Enter':\n      document.activeElement.blur();\n      break;\n    case 'Backspace':\n      if (caretPos === newDuration.length && newDuration.slice(-1) === ':') {\n        newDuration = newDuration.slice(0, -1);\n      }\n      break;\n    default:\n      break;\n  }\n\n  return {\n    ...duration,\n    [index]: newDuration,\n  };\n};\n\n/**\n * valueFromDuration(duration)\n * Returns a millisecond duration value from the given 'hh:mm:ss' format string\n * @param {string} duration - duration in 'hh:mm:ss' format\n * @return {number} - duration in milliseconds. Returns null if duration is invalid.\n */\nexport const valueFromDuration = (duration) => {\n  let matches = duration.trim().match(durationMatcher);\n  if (!matches) {\n    return 0;\n  }\n  matches = matches.slice(1).filter(v => v !== undefined);\n  if (matches.length < 3) {\n    for (let i = 0; i <= 3 - matches.length; i++) {\n      matches.unshift(0);\n    }\n  }\n  const [hours, minutes, seconds] = matches.map(x => parseInt(x, 10) || 0);\n  return ((hours * 60 + minutes) * 60 + seconds) * 1000;\n};\n\nexport default {\n  durationWidget,\n  durationString,\n  durationStringFromValue,\n  updateDuration,\n  onDurationChange,\n  onDurationKeyDown,\n  valueFromDuration,\n};\n"],"mappings":"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"}