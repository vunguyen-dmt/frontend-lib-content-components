{"version":3,"file":"ReactStateOLXParser.test.js","names":["_OLXParser","require","_olxTestData","_editorTestData","_ReactStateOLXParser","_interopRequireDefault","obj","__esModule","default","describe","test","olxparser","OLXParser","checkboxesOLXWithFeedbackAndHintsOLX","rawOLX","problem","getParsedOLXData","stateParser","ReactStateOLXParser","editorObject","checkboxesWithFeedbackAndHints","buildOLX","expect","replace","toBe","dropdownOLXWithFeedbackAndHintsOLX","dropdownWithFeedbackAndHints","toEqual","textInputWithFeedbackAndHintsOLX","textInputWithFeedbackAndHints","multipleChoiceWithFeedbackAndHintsOLX","multipleChoiceWithFeedbackAndHints","numericInputWithFeedbackAndHintsOLX","numericInputWithFeedbackAndHints","numericInputWithAnswerRangeOLX","numericInputWithAnswerRange","textInputWithFeedbackAndHintsOLXWithMultipleAnswers","textInputWithFeedbackAndHintsWithMultipleAnswers","numberParseTestOLX","numberParseTest"],"sources":["../../../../../src/editors/containers/ProblemEditor/data/ReactStateOLXParser.test.js"],"sourcesContent":["import { OLXParser } from './OLXParser';\nimport {\n  checkboxesOLXWithFeedbackAndHintsOLX,\n  dropdownOLXWithFeedbackAndHintsOLX,\n  numericInputWithFeedbackAndHintsOLX,\n  numericInputWithAnswerRangeOLX,\n  textInputWithFeedbackAndHintsOLX,\n  multipleChoiceWithFeedbackAndHintsOLX,\n  textInputWithFeedbackAndHintsOLXWithMultipleAnswers,\n  numberParseTestOLX,\n} from './mockData/olxTestData';\nimport {\n  checkboxesWithFeedbackAndHints,\n  dropdownWithFeedbackAndHints,\n  textInputWithFeedbackAndHints,\n  multipleChoiceWithFeedbackAndHints,\n  numericInputWithFeedbackAndHints,\n  numericInputWithAnswerRange,\n  textInputWithFeedbackAndHintsWithMultipleAnswers,\n  numberParseTest,\n} from './mockData/editorTestData';\nimport ReactStateOLXParser from './ReactStateOLXParser';\n\ndescribe('Check React State OLXParser problem', () => {\n  test('for checkbox with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(checkboxesOLXWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: checkboxesWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toBe(checkboxesOLXWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test dropdown with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(dropdownOLXWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: dropdownWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(dropdownOLXWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test string response with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(textInputWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: textInputWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(textInputWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test multiple choice with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(multipleChoiceWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: multipleChoiceWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(multipleChoiceWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test numerical response with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(numericInputWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: numericInputWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(numericInputWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n\n  test('Test numerical response with isAnswerRange true', () => {\n    const olxparser = new OLXParser(numericInputWithAnswerRangeOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: numericInputWithAnswerRange,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(numericInputWithAnswerRangeOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test string response with feedback and hints, multiple answers', () => {\n    const olxparser = new OLXParser(textInputWithFeedbackAndHintsOLXWithMultipleAnswers.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: textInputWithFeedbackAndHintsWithMultipleAnswers,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(textInputWithFeedbackAndHintsOLXWithMultipleAnswers.buildOLX.replace(/\\s/g, ''));\n  });\n  describe('encode/decode', () => {\n    test('does not change hex values to dec and does not remove leading 0s', () => {\n      const olxparser = new OLXParser(numberParseTestOLX.rawOLX);\n      const problem = olxparser.getParsedOLXData();\n      const stateParser = new ReactStateOLXParser({\n        problem,\n        editorObject: numberParseTest,\n      });\n      const buildOLX = stateParser.buildOLX();\n      expect(buildOLX.replace(/\\s/g, '')).toEqual(numberParseTestOLX.buildOLX.replace(/\\s/g, ''));\n    });\n  });\n});\n"],"mappings":"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"}