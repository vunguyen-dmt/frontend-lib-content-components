{"version":3,"file":"hooks.test.js","names":["_testUtils","require","_tinyMCE","_interopRequireDefault","_utils","_pluginConfig","_module","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","jest","mock","requireActual","createRef","fn","val","ref","useRef","current","useEffect","useCallback","cb","prereqs","state","MockUseState","module","moduleKeys","keyStore","hook","output","editorImageWidth","editorImageHeight","mockNode","src","alt","width","height","initialContentHeight","initialContentWidth","mockNodeWithInitialContentDimensions","mockEditorWithSelection","selection","getNode","mockImage","displayName","contentType","dateAdded","url","externalUrl","portableUrl","thumbnail","locked","staticFullUrl","id","mockAssets","mockEditorContentHtml","mockImagesRef","describe","beforeEach","clearAllMocks","testGetter","isImageModalOpen","isSourceCodeModalOpen","imageSelection","afterEach","restore","it","matchingImages","tinyMceHTML","expect","detectImageMatchingError","toBe","test","addButton","addIcon","addToggleButton","openImgModal","openSourceCodeModal","setImage","updateContent","editorType","lmsEndpointUrl","editor","ui","registry","on","mockOpenModalWithImage","args","openModalWithSelectedImage","expectedSettingsAction","toggleCodeFormatting","any","Function","toggleLabelFormatting","setupCodeFormatting","spyOn","mockImplementationOnce","setupCustomBehavior","calls","toEqual","tinyMCE","textToSpeechIcon","buttons","imageUploadButton","icon","tooltip","onAction","editImageSettings","code","text","codeBlock","onSetup","not","toHaveBeenCalled","getContent","content","parseContentForLabels","toHaveBeenCalledWith","setContent","imageUrls","replaceStaticwithAsset","editorValue","assets","setAssetToStaticUrl","props","editorContentHtml","studioEndpointUrl","images","isLibrary","evt","setEditorRef","initializeEditor","editorConfig","pluginProps","init","plugins","pluginConfig","imagetools_toolbar","imageToolbar","toolbar","config","quickbars_insert_toolbar","quickbarsInsertToolbar","quickbars_selection_toolbar","quickbarsSelectionToolbar","placeholder","onInit","initialValue","setup","setSelection","fetchImageUrls","emptyAssets","sOmEaSsET","emptyFilterAssets","filterAssets","FilteredAssets","hookKey","imgModalToggle","isImgOpen","stateVals","setState","closeImgModal","editorRef","focus","sourceCodeModalToggle","isSourceCodeOpen","closeSourceCodeModal","altText","selectedImage","clearSelection","toMatch","imageMatchRegex","match","matchImageStringsByIdentifiers","b","undefined","imagesRef","addImagesAndDimensionsToRef","getImageResizeHandler","toHaveBeenCalledTimes","objectContaining","unchangedImg","result","foundMatch","updateImageDimensions","imageToHaveBeenUpdated","find","img","imageToHaveBeenUnchanged","toBeFalsy"],"sources":["../../../../src/editors/sharedComponents/TinyMceWidget/hooks.test.js"],"sourcesContent":["import { MockUseState } from '../../../testUtils';\n\nimport tinyMCE from '../../data/constants/tinyMCE';\nimport { keyStore } from '../../utils';\nimport pluginConfig from './pluginConfig';\nimport * as module from './hooks';\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  createRef: jest.fn(val => ({ ref: val })),\n  useRef: jest.fn(val => ({ current: val })),\n  useEffect: jest.fn(),\n  useCallback: (cb, prereqs) => ({ cb, prereqs }),\n}));\n\nconst state = new MockUseState(module);\nconst moduleKeys = keyStore(module);\n\nlet hook;\nlet output;\n\nconst editorImageWidth = 2022;\nconst editorImageHeight = 1619;\n\nconst mockNode = {\n  src: 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block/DALL_E_2023-03-10.png',\n  alt: 'aLt tExt',\n  width: editorImageWidth,\n  height: editorImageHeight,\n};\n\nconst initialContentHeight = 150;\nconst initialContentWidth = 100;\nconst mockNodeWithInitialContentDimensions = { ...mockNode, width: initialContentWidth, height: initialContentHeight };\nconst mockEditorWithSelection = { selection: { getNode: () => mockNode } };\n\nconst mockImage = {\n  displayName: 'DALLÂ·E 2023-03-10.png',\n  contentType: 'image/png',\n  dateAdded: 1682009100000,\n  url: '/asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  externalUrl: 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  portableUrl: '/static/DALL_E_2023-03-10.png',\n  thumbnail: '/asset-v1:TestX+Test01+Test0101+type@thumbnail+block@DALL_E_2023-03-10.jpg',\n  locked: false,\n  staticFullUrl: '/assets/courseware/v1/af2bf9ac70804e54c534107160a8e51e/asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  id: 'asset-v1:TestX+Test01+Test0101+type@asset+block@DALL_E_2023-03-10.png',\n  width: initialContentWidth,\n  height: initialContentHeight,\n};\n\nconst mockAssets = {\n  [mockImage.id]: mockImage,\n};\n\nconst mockEditorContentHtml = `\n  <p>\n    <img\n      src=\"/assets/courseware/v1/7b41573468a356ca8dc975158e388386/asset-v1:TestX+Test01+Test0101+type@asset+block/DALL_E_2023-03-10.png\"\n      alt=\"\"\n      width=\"${initialContentWidth}\"\n      height=\"${initialContentHeight}\">\n    </img>\n  </p>\n`;\n\nconst mockImagesRef = { current: [mockImage] };\n\ndescribe('TinyMceEditor hooks', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockImagesRef.current = [mockImage];\n  });\n  describe('state hooks', () => {\n    state.testGetter(state.keys.isImageModalOpen);\n    state.testGetter(state.keys.isSourceCodeModalOpen);\n    state.testGetter(state.keys.imageSelection);\n  });\n\n  describe('non-state hooks', () => {\n    beforeEach(() => { state.mock(); });\n    afterEach(() => { state.restore(); });\n\n    describe('detectImageMatchingError', () => {\n      it('should detect an error if the matchingImages array is empty', () => {\n        const matchingImages = [];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should detect an error if the matchingImages array has more than one element', () => {\n        const matchingImages = [mockImage, mockImage];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should detect an error if the image id does not match the tinyMceHTML src', () => {\n        const matchingImages = [{ ...mockImage, id: 'some-other-id' }];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should detect an error if the image id matches the tinyMceHTML src, but width and height do not match', () => {\n        const matchingImages = [{ ...mockImage, width: 100, height: 100 }];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(true);\n      });\n      it('should not detect any errors if id matches src, and width and height match', () => {\n        const matchingImages = [{ ...mockImage, width: mockNode.width, height: mockNode.height }];\n        const tinyMceHTML = mockNode;\n        expect(module.detectImageMatchingError({ matchingImages, tinyMceHTML })).toBe(false);\n      });\n    });\n\n    describe('setupCustomBehavior', () => {\n      test('It calls addButton and addToggleButton in the editor, but openModal is not called', () => {\n        const addButton = jest.fn();\n        const addIcon = jest.fn();\n        const addToggleButton = jest.fn();\n        const openImgModal = jest.fn();\n        const openSourceCodeModal = jest.fn();\n        const setImage = jest.fn();\n        const updateContent = jest.fn();\n        const editorType = 'expandable';\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        const editor = {\n          ui: { registry: { addButton, addToggleButton, addIcon } },\n          on: jest.fn(),\n        };\n        const mockOpenModalWithImage = args => ({ openModalWithSelectedImage: args });\n        const expectedSettingsAction = mockOpenModalWithImage({ editor, setImage, openImgModal });\n        const toggleCodeFormatting = expect.any(Function);\n        const toggleLabelFormatting = expect.any(Function);\n        const setupCodeFormatting = expect.any(Function);\n        jest.spyOn(module, moduleKeys.openModalWithSelectedImage)\n          .mockImplementationOnce(mockOpenModalWithImage);\n\n        output = module.setupCustomBehavior({\n          editorType,\n          updateContent,\n          openImgModal,\n          openSourceCodeModal,\n          setImage,\n          lmsEndpointUrl,\n        })(editor);\n        expect(addIcon.mock.calls).toEqual([['textToSpeech', tinyMCE.textToSpeechIcon]]);\n        expect(addButton.mock.calls).toEqual([\n          [tinyMCE.buttons.imageUploadButton, { icon: 'image', tooltip: 'Add Image', onAction: openImgModal }],\n          [tinyMCE.buttons.editImageSettings, { icon: 'image', tooltip: 'Edit Image Settings', onAction: expectedSettingsAction }],\n          [tinyMCE.buttons.code, { text: 'HTML', tooltip: 'Source code', onAction: openSourceCodeModal }],\n          ['customLabelButton', {\n            icon: 'textToSpeech',\n            text: 'Label',\n            tooltip: 'Apply a \"Question\" label to specific text, recognized by screen readers. Recommended to improve accessibility.',\n            onAction: toggleLabelFormatting,\n          }],\n        ]);\n        expect(addToggleButton.mock.calls).toEqual([\n          [tinyMCE.buttons.codeBlock, {\n            icon: 'sourcecode', tooltip: 'Code Block', onAction: toggleCodeFormatting, onSetup: setupCodeFormatting,\n          }],\n        ]);\n        expect(openImgModal).not.toHaveBeenCalled();\n        expect(editor.on).toHaveBeenCalled();\n      });\n    });\n\n    describe('parseContentForLabels', () => {\n      test('it calls getContent and updateQuestion for some content', () => {\n        const editor = { getContent: jest.fn(() => '<p><label>Some question label</label></p><p>some content <label>around a label</label> followed by more text</p><img src=\"/static/soMEImagEURl1.jpeg\"/>') };\n        const updateContent = jest.fn();\n        const content = '<p><label>Some question label</label></p><p>some content </p><p><label>around a label</label></p><p> followed by more text</p><img src=\"/static/soMEImagEURl1.jpeg\"/>';\n        module.parseContentForLabels({ editor, updateContent });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(updateContent).toHaveBeenCalledWith(content);\n      });\n      test('it calls getContent and updateQuestion for empty content', () => {\n        const editor = { getContent: jest.fn(() => '') };\n        const updateContent = jest.fn();\n        const content = '';\n        module.parseContentForLabels({ editor, updateContent });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(updateContent).toHaveBeenCalledWith(content);\n      });\n    });\n\n    describe('replaceStaticwithAsset', () => {\n      test('it calls getContent and setContent for text editor', () => {\n        const editor = { getContent: jest.fn(() => '<img src=\"/static/soMEImagEURl1.jpeg\"/>'), setContent: jest.fn() };\n        const imageUrls = [{ staticFullUrl: '/assets/soMEImagEURl1.jpeg', displayName: 'soMEImagEURl1.jpeg' }];\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        module.replaceStaticwithAsset({ editor, imageUrls, lmsEndpointUrl });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(editor.setContent).toHaveBeenCalled();\n      });\n      test('it calls getContent and updateContent for expandable editor', () => {\n        const editor = { getContent: jest.fn(() => '<img src=\"/static/soMEImagEURl1.jpeg\"/>') };\n        const imageUrls = [{ staticFullUrl: '/assets/soMEImagEURl1.jpeg', displayName: 'soMEImagEURl1.jpeg' }];\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        const editorType = 'expandable';\n        const updateContent = jest.fn();\n        module.replaceStaticwithAsset({\n          editor,\n          imageUrls,\n          editorType,\n          lmsEndpointUrl,\n          updateContent,\n        });\n        expect(editor.getContent).toHaveBeenCalled();\n        expect(updateContent).toHaveBeenCalled();\n      });\n    });\n    describe('setAssetToStaticUrl', () => {\n      it('returns content with updated img links', () => {\n        const editorValue = '<img src=\"/asset@asset-block/soME_ImagE_URl1\"/> <a href=\"/asset@soMEImagEURl\">testing link</a>';\n        const assets = [\n          { portableUrl: '/static/soMEImagEURl', displayName: 'soMEImagEURl' },\n          { portableUrl: '/static/soME_ImagE_URl1', displayName: 'soME ImagE URl1' },\n        ];\n        const lmsEndpointUrl = 'sOmEvaLue.cOm';\n        const content = module.setAssetToStaticUrl({ editorValue, assets, lmsEndpointUrl });\n        expect(content).toEqual('<img src=\"/static/soME_ImagE_URl1\"/> <a href=\"/static/soMEImagEURl\">testing link</a>');\n      });\n    });\n\n    describe('editorConfig', () => {\n      const props = {\n        editorContentHtml: null,\n        editorType: 'text',\n        lmsEndpointUrl: 'sOmEuRl.cOm',\n        studioEndpointUrl: 'sOmEoThEruRl.cOm',\n        images: mockImagesRef,\n        isLibrary: false,\n      };\n      const evt = 'fakeEvent';\n      const editor = 'myEditor';\n      const setupCustomBehavior = args => ({ setupCustomBehavior: args });\n\n      beforeEach(() => {\n        props.setEditorRef = jest.fn();\n        props.openImgModal = jest.fn();\n        props.openSourceCodeModal = jest.fn();\n        props.initializeEditor = jest.fn();\n        props.updateContent = jest.fn();\n        jest.spyOn(module, moduleKeys.setupCustomBehavior)\n          .mockImplementationOnce(setupCustomBehavior);\n        output = module.editorConfig(props);\n      });\n\n      describe('text editor plugins and toolbar', () => {\n        test('It configures plugins and toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: props.isLibrary,\n            editorType: props.editorType,\n          };\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n          // Commented out as we investigate whether this is only needed for image proxy\n          // expect(output.init.imagetools_cors_hosts).toMatchObject([props.lmsEndpointUrl]);\n        });\n      });\n      describe('text editor plugins and toolbar for content library', () => {\n        test('It configures plugins and toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: true,\n            editorType: props.editorType,\n          };\n          output = module.editorConfig({ ...props, isLibrary: true });\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          expect(output.init.quickbars_insert_toolbar).toEqual(pluginConfig(pluginProps).quickbarsInsertToolbar);\n          expect(output.init.quickbars_selection_toolbar).toEqual(pluginConfig(pluginProps).quickbarsSelectionToolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n        });\n      });\n      describe('problem editor question plugins and toolbar', () => {\n        test('It configures plugins and toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: props.isLibrary,\n            editorType: 'question',\n            placeholder: 'soMEtExT',\n          };\n          output = module.editorConfig({\n            ...props,\n            editorType: 'question',\n            placeholder: 'soMEtExT',\n          });\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          expect(output.init.quickbars_insert_toolbar).toEqual(pluginConfig(pluginProps).quickbarsInsertToolbar);\n          expect(output.init.quickbars_selection_toolbar).toEqual(pluginConfig(pluginProps).quickbarsSelectionToolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n        });\n      });\n\n      describe('expandable text area plugins and toolbar', () => {\n        test('It configures plugins, toolbars, and quick toolbars correctly', () => {\n          const pluginProps = {\n            isLibrary: props.isLibrary,\n            editorType: 'expandable',\n            placeholder: 'soMEtExT',\n          };\n          output = module.editorConfig({\n            ...props,\n            editorType: 'expandable',\n            placeholder: 'soMEtExT',\n          });\n          expect(output.init.plugins).toEqual(pluginConfig(pluginProps).plugins);\n          expect(output.init.imagetools_toolbar).toEqual(pluginConfig(pluginProps).imageToolbar);\n          expect(output.init.toolbar).toEqual(pluginConfig(pluginProps).toolbar);\n          expect(output.init.quickbars_insert_toolbar).toEqual(pluginConfig(pluginProps).quickbarsInsertToolbar);\n          expect(output.init.quickbars_selection_toolbar).toEqual(pluginConfig(pluginProps).quickbarsSelectionToolbar);\n          Object.keys(pluginConfig(pluginProps).config).forEach(key => {\n            expect(output.init[key]).toEqual(pluginConfig(pluginProps).config[key]);\n          });\n        });\n      });\n      test('It creates an onInit which calls initializeEditor and setEditorRef', () => {\n        output.onInit(evt, editor);\n        expect(props.setEditorRef).toHaveBeenCalledWith(editor);\n        expect(props.initializeEditor).toHaveBeenCalled();\n      });\n      test('It sets the blockvalue to be empty string by default', () => {\n        expect(output.initialValue).toBe('');\n      });\n      test('It sets the blockvalue to be the blockvalue if nonempty', () => {\n        const editorContentHtml = 'SomE hTML content';\n        output = module.editorConfig({ ...props, editorContentHtml });\n        expect(output.initialValue).toBe(editorContentHtml);\n      });\n\n      it('calls setupCustomBehavior on setup', () => {\n        expect(output.init.setup).toEqual(\n          setupCustomBehavior({\n            editorType: props.editorType,\n            updateContent: props.updateContent,\n            openImgModal: props.openImgModal,\n            openSourceCodeModal: props.openSourceCodeModal,\n            setImage: props.setSelection,\n            imageUrls: module.fetchImageUrls(props.images),\n            images: mockImagesRef,\n            lmsEndpointUrl: props.lmsEndpointUrl,\n          }),\n        );\n      });\n    });\n\n    describe('filterAssets', () => {\n      const emptyAssets = {};\n      const assets = { sOmEaSsET: { contentType: 'image/' } };\n      test('returns an empty array', () => {\n        const emptyFilterAssets = module.filterAssets({ assets: emptyAssets });\n        expect(emptyFilterAssets).toEqual([]);\n      });\n      test('returns filtered array of images', () => {\n        const FilteredAssets = module.filterAssets({ assets });\n        expect(FilteredAssets).toEqual([{ contentType: 'image/' }]);\n      });\n    });\n\n    describe('imgModalToggle', () => {\n      const hookKey = state.keys.isImageModalOpen;\n      beforeEach(() => {\n        hook = module.imgModalToggle();\n      });\n      test('isOpen: state value', () => {\n        expect(hook.isImgOpen).toEqual(state.stateVals[hookKey]);\n      });\n      test('openModal: calls setter with true', () => {\n        hook.openImgModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(true);\n      });\n      test('closeModal: calls setter with false', () => {\n        hook.closeImgModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(false);\n      });\n    });\n\n    describe('sourceCodeModalToggle', () => {\n      const editorRef = { current: { focus: jest.fn() } };\n      const hookKey = state.keys.isSourceCodeModalOpen;\n      beforeEach(() => {\n        hook = module.sourceCodeModalToggle(editorRef);\n      });\n      test('isOpen: state value', () => {\n        expect(hook.isSourceCodeOpen).toEqual(state.stateVals[hookKey]);\n      });\n      test('openModal: calls setter with true', () => {\n        hook.openSourceCodeModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(true);\n      });\n      test('closeModal: calls setter with false', () => {\n        hook.closeSourceCodeModal();\n        expect(state.setState[hookKey]).toHaveBeenCalledWith(false);\n      });\n    });\n\n    describe('openModalWithSelectedImage', () => {\n      const setImage = jest.fn();\n      const openImgModal = jest.fn();\n      let editor;\n\n      beforeEach(() => {\n        editor = { selection: { getNode: () => mockNodeWithInitialContentDimensions } };\n        module.openModalWithSelectedImage({\n          editor, images: mockImagesRef, openImgModal, setImage,\n        })();\n      });\n\n      afterEach(() => {\n        jest.clearAllMocks();\n      });\n\n      test('updates React state for selected image to be value stored in editor, adding dimensions from images ref', () => {\n        expect(setImage).toHaveBeenCalledWith({\n          externalUrl: mockNode.src,\n          altText: mockNode.alt,\n          width: mockImage.width,\n          height: mockImage.height,\n        });\n      });\n\n      test('opens image setting modal', () => {\n        expect(openImgModal).toHaveBeenCalled();\n      });\n\n      describe('when images cannot be successfully matched', () => {\n        beforeEach(() => {\n          editor = { selection: { getNode: () => mockNode } };\n          module.openModalWithSelectedImage({\n            editor, images: mockImagesRef, openImgModal, setImage,\n          })();\n        });\n\n        afterEach(() => {\n          jest.clearAllMocks();\n        });\n\n        test('updates React state for selected image to be value stored in editor, setting dimensions to null', () => {\n          expect(setImage).toHaveBeenCalledWith({\n            externalUrl: mockNode.src,\n            altText: mockNode.alt,\n            width: null,\n            height: null,\n          });\n        });\n      });\n    });\n\n    describe('selectedImage hooks', () => {\n      const val = { a: 'VaLUe' };\n      beforeEach(() => {\n        hook = module.selectedImage(val);\n      });\n      test('selection: state value', () => {\n        expect(hook.selection).toEqual(state.stateVals[state.keys.imageSelection]);\n      });\n      test('setSelection: setter for value', () => {\n        expect(hook.setSelection).toEqual(state.setState[state.keys.imageSelection]);\n      });\n      test('clearSelection: calls setter with null', () => {\n        expect(hook.setSelection).not.toHaveBeenCalled();\n        hook.clearSelection();\n        expect(hook.setSelection).toHaveBeenCalledWith(null);\n      });\n    });\n    describe('imageMatchRegex', () => {\n      it('should match a valid image url using \"@\" separators', () => {\n        expect(\n          'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@image-name.png',\n        ).toMatch(module.imageMatchRegex);\n      });\n      it('should match a url including the keywords \"asset-v1\", \"type\", \"block\" in that order', () => {\n        expect(\n          'https://some.completely/made.up///url-with.?!keywords/asset-v1:Some-asset-key?type=some.type.key!block@image-name.png',\n        ).toMatch(module.imageMatchRegex);\n      });\n      it('should not match a url excluding the keyword \"asset-v1\"', () => {\n        expect(\n          'https://some.completely/made.up///url-with.?!keywords/Some-asset-key?type=some.type.key!block@image-name.png',\n        ).not.toMatch(module.imageMatchRegex);\n      });\n      it('should match an identifier including the keywords \"asset-v1\", \"type\", \"block\" using \"/\" separators', () => {\n        expect(\n          'asset-v1:TestX+Test01+Test0101+type/asset+block/image-name.png',\n        ).toMatch(module.imageMatchRegex);\n      });\n      it('should capture values for the keys \"asset-v1\", \"type\", \"block\"', () => {\n        const match = 'asset-v1:TestX+Test01+Test0101+type/asset+block/image-name.png'.match(module.imageMatchRegex);\n        expect(match[1]).toBe('TestX+Test01+Test0101');\n        expect(match[2]).toBe('asset');\n        expect(match[3]).toBe('image-name.png');\n      });\n    });\n\n    describe('matchImageStringsByIdentifiers', () => {\n      it('should be true for an image url and identifier that have the same values for asset-v1, type, and block', () => {\n        const url = 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@image-name.png';\n        const id = 'asset-v1:TestX+Test01+Test0101+type/asset+block/image-name.png';\n        expect(module.matchImageStringsByIdentifiers(url, id)).toBe(true);\n      });\n      it('should be false for an image url and identifier that have different values for block', () => {\n        const url = 'http://localhost:18000/asset-v1:TestX+Test01+Test0101+type@asset+block@image-name.png';\n        const id = 'asset-v1:TestX+Test01+Test0101+type/asset+block/different-image-name.png';\n        expect(module.matchImageStringsByIdentifiers(url, id)).toBe(false);\n      });\n      it('should return null if it doesnt receive two strings as input', () => {\n        expect(module.matchImageStringsByIdentifiers(['a'], { b: 'c ' })).toBe(null);\n      });\n      it('should return undefined if the strings dont match the regex at all', () => {\n        expect(module.matchImageStringsByIdentifiers('wrong-url', 'blub')).toBe(undefined);\n      });\n    });\n\n    describe('addImagesAndDimensionsToRef', () => {\n      it('should add images to ref', () => {\n        const imagesRef = { current: null };\n        const assets = { ...mockAssets, height: undefined, width: undefined };\n        module.addImagesAndDimensionsToRef(\n          {\n            imagesRef,\n            assets,\n            editorContentHtml: mockEditorContentHtml,\n          },\n        );\n        expect(imagesRef.current).toEqual([mockImage]);\n        expect(imagesRef.current[0].width).toBe(initialContentWidth);\n        expect(imagesRef.current[0].height).toBe(initialContentHeight);\n      });\n    });\n\n    describe('getImageResizeHandler', () => {\n      const setImage = jest.fn();\n\n      it('sets image ref and state to new width', () => {\n        expect(mockImagesRef.current[0].width).toBe(initialContentWidth);\n        module.getImageResizeHandler({ editor: mockEditorWithSelection, imagesRef: mockImagesRef, setImage })();\n\n        expect(setImage).toHaveBeenCalledTimes(1);\n        expect(setImage).toHaveBeenCalledWith(expect.objectContaining({ width: editorImageWidth }));\n        expect(mockImagesRef.current[0].width).not.toBe(initialContentWidth);\n        expect(mockImagesRef.current[0].width).toBe(editorImageWidth);\n      });\n    });\n\n    describe('updateImageDimensions', () => {\n      const unchangedImg = {\n        id: 'asset-v1:TestX+Test01+Test0101+type@asset+block@unchanged-image.png',\n        width: 3,\n        height: 5,\n      };\n      const images = [\n        mockImage,\n        unchangedImg,\n      ];\n\n      it('updates dimensions of correct image in images array', () => {\n        const { result, foundMatch } = module.updateImageDimensions({\n          images, url: mockNode.src, width: 123, height: 321,\n        });\n        const imageToHaveBeenUpdated = result.find(img => img.id === mockImage.id);\n        const imageToHaveBeenUnchanged = result.find(img => img.id === unchangedImg.id);\n\n        expect(imageToHaveBeenUpdated.width).toBe(123);\n        expect(imageToHaveBeenUpdated.height).toBe(321);\n        expect(imageToHaveBeenUnchanged.width).toBe(3);\n        expect(imageToHaveBeenUnchanged.height).toBe(5);\n\n        expect(foundMatch).toBe(true);\n      });\n\n      it('does not update images if id is not found', () => {\n        const { result, foundMatch } = module.updateImageDimensions({\n          images, url: 'not_found', width: 123, height: 321,\n        });\n        expect(result.find(img => img.width === 123 || img.height === 321)).toBeFalsy();\n        expect(foundMatch).toBe(false);\n      });\n    });\n  });\n});\n"],"mappings":"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"}