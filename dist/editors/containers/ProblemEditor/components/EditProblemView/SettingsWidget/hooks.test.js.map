{"version":3,"file":"hooks.test.js","names":["_react","require","_testUtils","_messages","_interopRequireDefault","_utils","hooks","_interopRequireWildcard","_problem","editHooks","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","jest","mock","updateState","fn","useEffect","useState","val","state","newVal","defineMessages","m","actions","problem","updateSettings","args","updateField","updateAnswer","MockUseState","moduleKeys","keyStore","describe","output","beforeEach","afterEach","restore","mockClear","showAdvancedSettingsCards","test","expect","isAdvancedCardsVisible","toBeFalsy","showAdvancedCards","setState","showAdvanced","toHaveBeenCalledWith","showFullCard","isCardCollapsibleOpen","toggleCardCollapse","cardCollapsed","hints","hintsCardHooks","summary","not","toHaveBeenCalled","cb","prereqs","calls","toStrictEqual","message","messages","noHintSummary","values","id","hintSummary","count","hint1","hint2","handleAdd","modifiedHint","hintsRowHooks","handleChange","handleDelete","resetCardHooks","setResetTrue","showResetButton","setResetFalse","scoring","weight","attempts","unlimited","number","defaultValue","nilScoring","scoringCardHooks","stateVals","attemptDisplayValue","toEqual","nonNilScoring","handleUnlimitedChange","checked","handleMaxAttemptChange","handleOnChange","handleWeightChange","parseFloat","showAnswer","on","afterAttempts","useAnswerSettings","handleShowAnswerChange","handleAttemptsChange","parseInt","timerCardHooks","timeBetween","typeRowProps","problemType","ProblemTypeKeys","MULTISELECT","typeKey","DROPDOWN","blockTitle","ProblemTypes","title","setBlockTitle","correctAnswerCount","answers","correct","fetchEditorContent","a","b","c","clearAllMocks","spyOn","mockImplementationOnce","typeRowHooks","onClick","toHaveBeenNthCalledWith","oneAnswerTypeRowProps","NUMERIC","TEXTINPUT","switchToAdvancedEditor","setConfirmOpen","window","scrollTo","confirmSwitchToAdvancedEditor"],"sources":["../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/hooks.test.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { MockUseState } from '../../../../../../testUtils';\nimport messages from './messages';\nimport { keyStore } from '../../../../../utils';\nimport * as hooks from './hooks';\nimport { ProblemTypeKeys, ProblemTypes } from '../../../../../data/constants/problem';\nimport * as editHooks from '../hooks';\n\njest.mock('react', () => {\n  const updateState = jest.fn();\n  return {\n    updateState,\n    useEffect: jest.fn(),\n    useState: jest.fn(val => ([{ state: val }, (newVal) => updateState({ val, newVal })])),\n  };\n});\n\njest.mock('@edx/frontend-platform/i18n', () => ({\n  defineMessages: m => m,\n}));\n\njest.mock('../../../../../data/redux', () => ({\n  actions: {\n    problem: {\n      updateSettings: (args) => ({ updateSettings: args }),\n      updateField: (args) => ({ updateField: args }),\n      updateAnswer: (args) => ({ updateAnswer: args }),\n    },\n  },\n}));\n\nconst state = new MockUseState(hooks);\nconst moduleKeys = keyStore(editHooks);\n\ndescribe('Problem settings hooks', () => {\n  let output;\n  let updateSettings;\n  beforeEach(() => {\n    updateSettings = jest.fn();\n    state.mock();\n  });\n  afterEach(() => {\n    state.restore();\n    useEffect.mockClear();\n  });\n  describe('Show advanced settings', () => {\n    beforeEach(() => {\n      output = hooks.showAdvancedSettingsCards();\n    });\n    test('test default state is false', () => {\n      expect(output.isAdvancedCardsVisible).toBeFalsy();\n    });\n    test('test showAdvancedCards sets state to true', () => {\n      output.showAdvancedCards();\n      expect(state.setState[state.keys.showAdvanced]).toHaveBeenCalledWith(true);\n    });\n  });\n  describe('Show full card', () => {\n    beforeEach(() => {\n      output = hooks.showFullCard();\n    });\n    test('test default state is false', () => {\n      expect(output.isCardCollapsibleOpen).toBeFalsy();\n    });\n    test('test toggleCardCollapse to true', () => {\n      output.toggleCardCollapse();\n      expect(state.setState[state.keys.cardCollapsed]).toHaveBeenCalledWith(true);\n    });\n    test('test toggleCardCollapse to true', () => {\n      output = hooks.showFullCard(true);\n      output.toggleCardCollapse();\n      expect(state.setState[state.keys.cardCollapsed]).toHaveBeenCalledWith(true);\n    });\n  });\n\n  describe('Hint card hooks', () => {\n    test('test useEffect triggers set hints summary no hint', () => {\n      const hints = [];\n      hooks.hintsCardHooks(hints, updateSettings);\n      expect(state.setState[state.keys.summary]).not.toHaveBeenCalled();\n      const [cb, prereqs] = useEffect.mock.calls[0];\n      expect(prereqs).toStrictEqual([[]]);\n      cb();\n      expect(state.setState[state.keys.summary])\n        .toHaveBeenCalledWith({ message: messages.noHintSummary, values: {} });\n    });\n    test('test useEffect triggers set hints summary', () => {\n      const hints = [{ id: 1, value: 'hint1' }];\n      output = hooks.hintsCardHooks(hints, updateSettings);\n      expect(state.setState[state.keys.summary]).not.toHaveBeenCalled();\n      const [cb, prereqs] = useEffect.mock.calls[0];\n      expect(prereqs).toStrictEqual([[{ id: 1, value: 'hint1' }]]);\n      cb();\n      expect(state.setState[state.keys.summary])\n        .toHaveBeenCalledWith({\n          message: messages.hintSummary,\n          values: { hint: hints[0].value, count: (hints.length - 1) },\n        });\n    });\n    test('test handleAdd triggers updateSettings', () => {\n      const hint1 = { id: 1, value: 'hint1' };\n      const hint2 = { id: 2, value: '' };\n      const hints = [hint1];\n      output = hooks.hintsCardHooks(hints, updateSettings);\n      output.handleAdd();\n      expect(updateSettings).toHaveBeenCalledWith({ hints: [hint1, hint2] });\n    });\n  });\n  describe('Hint rows hooks', () => {\n    const hint1 = { id: 1, value: 'hint1' };\n    const hint2 = { id: 2, value: '' };\n    const value = 'modifiedHint';\n    const modifiedHint = { id: 2, value };\n    const hints = [hint1, hint2];\n    beforeEach(() => {\n      output = hooks.hintsRowHooks(2, hints, updateSettings);\n    });\n    test('test handleChange', () => {\n      output.handleChange(value);\n      expect(updateSettings).toHaveBeenCalledWith({ hints: [hint1, modifiedHint] });\n    });\n    test('test handleDelete', () => {\n      output.handleDelete();\n      expect(updateSettings).toHaveBeenCalledWith({ hints: [hint1] });\n    });\n  });\n\n  describe('Reset card hooks', () => {\n    beforeEach(() => {\n      output = hooks.resetCardHooks(updateSettings);\n    });\n    test('test setResetTrue', () => {\n      output.setResetTrue();\n      expect(updateSettings).toHaveBeenCalledWith({ showResetButton: true });\n    });\n    test('test setResetFalse', () => {\n      output.setResetFalse();\n      expect(updateSettings).toHaveBeenCalledWith({ showResetButton: false });\n    });\n  });\n\n  describe('Scoring card hooks', () => {\n    const scoring = {\n      weight: 1.5,\n      attempts: {\n        unlimited: false,\n        number: 5,\n      },\n    };\n    const defaultValue = 1;\n    test('test scoringCardHooks initializes display value when attempts.number is null', () => {\n      const nilScoring = { ...scoring, attempts: { unlimited: false, number: null } };\n      output = hooks.scoringCardHooks(nilScoring, updateSettings, defaultValue);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual(`${defaultValue} (Default)`);\n    });\n    test('test scoringCardHooks initializes display value when attempts.number is blank', () => {\n      const nilScoring = { ...scoring, attempts: { unlimited: false, number: '' } };\n      output = hooks.scoringCardHooks(nilScoring, updateSettings, defaultValue);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual(`${defaultValue} (Default)`);\n    });\n    test('test scoringCardHooks initializes display value when attempts.number is not null', () => {\n      const nonNilScoring = { ...scoring, attempts: { unlimited: false, number: 2 } };\n      output = hooks.scoringCardHooks(nonNilScoring, updateSettings, defaultValue);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual(2);\n    });\n    test('test scoringCardHooks initializes display value when attempts.number and defaultValue is null', () => {\n      const nonNilScoring = { ...scoring, attempts: { unlimited: false, number: null } };\n      output = hooks.scoringCardHooks(nonNilScoring, updateSettings, null);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual('');\n    });\n    beforeEach(() => {\n      output = hooks.scoringCardHooks(scoring, updateSettings, defaultValue);\n    });\n    test('test handleUnlimitedChange sets attempts.unlimited to true when checked', () => {\n      output.handleUnlimitedChange({ target: { checked: true } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('');\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: true } } });\n    });\n    test('test handleUnlimitedChange sets attempts.unlimited to false when unchecked', () => {\n      output.handleUnlimitedChange({ target: { checked: false } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange', () => {\n      const value = 6;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: value, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to zero', () => {\n      const value = 0;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: value, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to null value when default max_attempts is present', () => {\n      const value = null;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to null when default value is inputted', () => {\n      const value = '1 (Default)';\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to non-numeric value', () => {\n      const value = 'abc';\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to empty value', () => {\n      const value = '';\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(`${defaultValue} (Default)`);\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to negative value', () => {\n      const value = -1;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: 0, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to empty value with no default', () => {\n      const value = '';\n      output = hooks.scoringCardHooks(scoring, updateSettings, null);\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('');\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: true } } });\n    });\n    test('test handleOnChange', () => {\n      const value = 6;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(value);\n    });\n    test('test handleOnChange set attempts to zero', () => {\n      const value = 0;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(value);\n    });\n    test('test handleOnChange set attempts to default value from empty string', () => {\n      const value = '';\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('');\n    });\n    test('test handleOnChange set attempts to default value', () => {\n      const value = 1;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('1 (Default)');\n    });\n    test('test handleOnChange set attempts to non-numeric value', () => {\n      const value = '';\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(value);\n    });\n    test('test handleOnChange set attempts to negative value', () => {\n      const value = -1;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(0);\n    });\n    test('test handleWeightChange', () => {\n      const value = 2;\n      output.handleWeightChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ scoring: { ...scoring, weight: parseFloat(value) } });\n    });\n  });\n\n  describe('Show answer card hooks', () => {\n    const showAnswer = {\n      on: 'after_attempts',\n      afterAttempts: 5,\n    };\n    beforeEach(() => {\n      output = hooks.useAnswerSettings(showAnswer, updateSettings);\n    });\n    test('test handleShowAnswerChange', () => {\n      const value = 'always';\n      output.handleShowAnswerChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ showAnswer: { ...showAnswer, on: value } });\n    });\n    test('test handleAttemptsChange', () => {\n      const value = 3;\n      output.handleAttemptsChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ showAnswer: { ...showAnswer, afterAttempts: parseInt(value) } });\n    });\n  });\n\n  describe('Timer card hooks', () => {\n    test('test handleChange', () => {\n      output = hooks.timerCardHooks(updateSettings);\n      const value = 5;\n      output.handleChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ timeBetween: value });\n    });\n  });\n\n  describe('Type row hooks', () => {\n    const typeRowProps = {\n      problemType: ProblemTypeKeys.MULTISELECT,\n      typeKey: ProblemTypeKeys.DROPDOWN,\n      blockTitle: ProblemTypes[ProblemTypeKeys.MULTISELECT].title,\n      setBlockTitle: jest.fn(),\n      updateField: jest.fn(),\n      updateAnswer: jest.fn(),\n      correctAnswerCount: 2,\n      answers: [\n        { correct: true, id: 'a', title: '<p>testA</p>' },\n        { correct: true, id: 'b', title: '<p>testB</p>' },\n        { correct: false, id: 'c', title: '<p>testC</p>' },\n      ],\n    };\n    const fetchEditorContent = () => ({\n      answers: {\n        a: 'testA',\n        b: 'testB',\n        c: 'testC',\n      },\n    });\n    beforeEach(() => {\n      jest.clearAllMocks();\n      jest.spyOn(editHooks, moduleKeys.fetchEditorContent)\n        .mockImplementationOnce(fetchEditorContent);\n    });\n    test('test onClick Multi-select to Dropdown', () => {\n      output = hooks.typeRowHooks(typeRowProps);\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.DROPDOWN].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...typeRowProps.answers[0], correct: false, title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...typeRowProps.answers[1], correct: false, title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...typeRowProps.answers[2], correct: false, title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.DROPDOWN });\n    });\n\n    test('test onClick Multi-select to Dropdown with one correct answer', () => {\n      const oneAnswerTypeRowProps = {\n        ...typeRowProps,\n        correctAnswerCount: 1,\n        answers: [\n          { correct: true, id: 'a', title: '<p>testA</p>' },\n          { correct: false, id: 'b', title: '<p>testB</p>' },\n          { correct: false, id: 'c', title: '<p>testC</p>' },\n        ],\n      };\n      output = hooks.typeRowHooks(oneAnswerTypeRowProps);\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.DROPDOWN].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...oneAnswerTypeRowProps.answers[0], title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...oneAnswerTypeRowProps.answers[1], title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...oneAnswerTypeRowProps.answers[2], title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.DROPDOWN });\n    });\n    test('test onClick Multi-select to Numeric', () => {\n      output = hooks.typeRowHooks({\n        ...typeRowProps,\n        typeKey: ProblemTypeKeys.NUMERIC,\n      });\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.NUMERIC].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...typeRowProps.answers[0], correct: true, title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...typeRowProps.answers[1], correct: true, title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...typeRowProps.answers[2], correct: true, title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.NUMERIC });\n    });\n\n    test('test onClick Multi-select to Text Input', () => {\n      output = hooks.typeRowHooks({\n        ...typeRowProps,\n        typeKey: ProblemTypeKeys.TEXTINPUT,\n      });\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.TEXTINPUT].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...typeRowProps.answers[0], title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...typeRowProps.answers[1], title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...typeRowProps.answers[2], title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.TEXTINPUT });\n    });\n  });\n  test('test confirmSwitchToAdvancedEditor hook', () => {\n    const switchToAdvancedEditor = jest.fn();\n    const setConfirmOpen = jest.fn();\n    window.scrollTo = jest.fn();\n    hooks.confirmSwitchToAdvancedEditor({\n      switchToAdvancedEditor,\n      setConfirmOpen,\n    });\n    expect(switchToAdvancedEditor).toHaveBeenCalled();\n    expect(setConfirmOpen).toHaveBeenCalledWith(false);\n    expect(window.scrollTo).toHaveBeenCalled();\n  });\n});\n"],"mappings":"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"}