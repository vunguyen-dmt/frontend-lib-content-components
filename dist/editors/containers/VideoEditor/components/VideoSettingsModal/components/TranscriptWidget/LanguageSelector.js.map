{"version":3,"file":"LanguageSelector.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_icons","_reactRedux","_i18n","_redux","_video","_FileInput","_messages","_module","_interopRequireWildcard","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","hooks","exports","onSelectLanguage","_ref","dispatch","languageBeforeChange","triggerupload","setLocalLang","_ref2","newLang","thunkActions","video","updateTranscriptLanguage","newLanguageCode","addFileCallback","_ref3","localLang","file","uploadTranscript","filename","name","language","LanguageSelector","_ref4","index","openLanguages","intl","React","useState","input","fileInput","onAddFile","useDispatch","onLanguageChange","module","click","getTitle","videoTranscriptLanguages","jsxs","ActionRow","children","jsx","Spacer","Icon","className","src","Check","formatMessage","messages","languageSelectPlaceholder","Fragment","Dropdown","Toggle","iconAs","Button","languageSelectLabel","block","id","variant","Menu","entries","map","_ref5","lang","text","Item","some","row","includes","onClick","FileInput","acceptedFiles","defaultProps","propTypes","PropTypes","arrayOf","string","number","isRequired","intlShape","mapStateToProps","state","selectors","mapDispatchToProps","_default","injectIntl","connect"],"sources":["../../../../../../../../src/editors/containers/VideoEditor/components/VideoSettingsModal/components/TranscriptWidget/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionRow,\n  Dropdown,\n  Button,\n  Icon,\n} from '@edx/paragon';\n\nimport { Check } from '@edx/paragon/icons';\nimport { connect, useDispatch } from 'react-redux';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { thunkActions, selectors } from '../../../../../../data/redux';\nimport { videoTranscriptLanguages } from '../../../../../../data/constants/video';\nimport { FileInput, fileInput } from '../../../../../../sharedComponents/FileInput';\nimport messages from './messages';\nimport * as module from './LanguageSelector';\n\nexport const hooks = {\n  onSelectLanguage: ({\n    dispatch, languageBeforeChange, triggerupload, setLocalLang,\n  }) => ({ newLang }) => {\n    // IF Language is unset, set language and begin upload prompt.\n    setLocalLang(newLang);\n    if (languageBeforeChange === '') {\n      triggerupload();\n      return;\n    }\n    // Else: update language\n    dispatch(\n      thunkActions.video.updateTranscriptLanguage({\n        newLanguageCode: newLang, languageBeforeChange,\n      }),\n    );\n  },\n\n  addFileCallback: ({ dispatch, localLang }) => (file) => {\n    dispatch(thunkActions.video.uploadTranscript({\n      file,\n      filename: file.name,\n      language: localLang,\n    }));\n  },\n\n};\n\nexport const LanguageSelector = ({\n  index, // For a unique id for the form control\n  language,\n  // Redux\n  openLanguages, // Only allow those languages not already associated with a transcript to be selected\n  // intl\n  intl,\n\n}) => {\n  const [localLang, setLocalLang] = React.useState(language);\n  const input = fileInput({ onAddFile: hooks.addFileCallback({ dispatch: useDispatch(), localLang }) });\n  const onLanguageChange = module.hooks.onSelectLanguage({\n    dispatch: useDispatch(), languageBeforeChange: localLang, setLocalLang, triggerupload: input.click,\n  });\n\n  const getTitle = () => {\n    if (Object.prototype.hasOwnProperty.call(videoTranscriptLanguages, language)) {\n      return (\n        <ActionRow>\n          {videoTranscriptLanguages[language]}\n          <ActionRow.Spacer />\n          <Icon className=\"text-primary-500\" src={Check} />\n        </ActionRow>\n\n      );\n    }\n    return (\n      <ActionRow>\n        {intl.formatMessage(messages.languageSelectPlaceholder)}\n        <ActionRow.Spacer />\n      </ActionRow>\n    );\n  };\n\n  return (\n    <>\n\n      <Dropdown\n        className=\"w-100 mb-2\"\n      >\n        <Dropdown.Toggle\n          iconAs={Button}\n          aria-label={intl.formatMessage(messages.languageSelectLabel)}\n          block\n          id={`selectLanguage-form-${index}`}\n          className=\"w-100\"\n          variant=\"outline-primary\"\n        >\n          {getTitle()}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {Object.entries(videoTranscriptLanguages).map(([lang, text]) => {\n            if (language === lang) {\n              return (<Dropdown.Item>{text}<Icon className=\"text-primary-500\" src={Check} /></Dropdown.Item>);\n            }\n            if (openLanguages.some(row => row.includes(lang))) {\n              return (<Dropdown.Item onClick={() => onLanguageChange({ newLang: lang })}>{text}</Dropdown.Item>);\n            }\n            return (<Dropdown.Item className=\"disabled\">{text}</Dropdown.Item>);\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n      <FileInput fileInput={input} acceptedFiles=\".srt\" />\n    </>\n  );\n};\n\nLanguageSelector.defaultProps = {\n  openLanguages: [],\n};\n\nLanguageSelector.propTypes = {\n  openLanguages: PropTypes.arrayOf(PropTypes.string),\n  index: PropTypes.number.isRequired,\n  language: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  openLanguages: selectors.video.openLanguages(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(LanguageSelector));\n"],"mappings":"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"}