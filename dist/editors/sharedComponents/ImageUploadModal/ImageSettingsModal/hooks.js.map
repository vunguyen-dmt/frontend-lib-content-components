{"version":3,"file":"hooks.js","names":["_react","_interopRequireDefault","require","_utils","_module","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","state","exports","altText","val","React","useState","dimensions","showAltTextDismissibleError","showAltTextSubmissionError","isDecorative","isLocked","local","lockAspectRatio","dimKeys","StrictDict","height","width","findGcd","a","b","gcd","some","v","isInteger","checkEqual","d1","d2","getValidDimensions","_ref","out","changed","other","Math","round","reduceDimensions","module","dimensionLockHooks","setLockAspectRatio","setIsLocked","initializeLock","_ref2","w","h","lock","unlock","dimensionHooks","altTextHook","setDimensions","setLocal","setAll","_ref3","setIsDecorative","setValue","setHeight","match","heightPercent","parseInt","setWidth","widthPercent","onImgLoad","selection","_ref4","img","imageDims","naturalHeight","naturalWidth","updateDimensions","altTextHooks","savedText","setShowAltTextDismissibleError","setShowAltTextSubmissionError","validateAltText","newVal","newDecorative","decorative","error","show","dismiss","validation","onInputChange","handleValue","e","onCheckboxChange","checked","checkFormValidation","_ref5","onAltTextFail","onSaveClick","_ref6","saveToEditor","_default"],"sources":["../../../../../src/editors/sharedComponents/ImageUploadModal/ImageSettingsModal/hooks.js"],"sourcesContent":["import React from 'react';\n\nimport { StrictDict } from '../../../utils';\nimport * as module from './hooks';\n\n// Simple wrappers for useState to allow easy mocking for tests.\nexport const state = {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  altText: (val) => React.useState(val),\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  dimensions: (val) => React.useState(val),\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  showAltTextDismissibleError: (val) => React.useState(val),\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  showAltTextSubmissionError: (val) => React.useState(val),\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  isDecorative: (val) => React.useState(val),\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  isLocked: (val) => React.useState(val),\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  local: (val) => React.useState(val),\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  lockAspectRatio: (val) => React.useState(val),\n};\n\nexport const dimKeys = StrictDict({\n  height: 'height',\n  width: 'width',\n});\n\n/**\n * findGcd(numerator, denominator)\n * Find the greatest common denominator of a ratio or fraction, which may be 1.\n * @param {number} numerator - ratio numerator\n * @param {number} denominator - ratio denominator\n * @return {number} - ratio greatest common denominator\n */\nexport const findGcd = (a, b) => {\n  const gcd = b ? findGcd(b, a % b) : a;\n\n  if (gcd === 1 || [a, b].some(v => !Number.isInteger(v / gcd))) {\n    return 1;\n  }\n\n  return gcd;\n};\n\nconst checkEqual = (d1, d2) => (d1.height === d2.height && d1.width === d2.width);\n\n/**\n * getValidDimensions({ dimensions, local, locked })\n * Find valid ending dimensions based on start state, request, and lock state\n * @param {obj} dimensions - current stored dimensions\n * @param {obj} local - local (active) dimensions in the inputs\n * @param {obj} locked - locked dimensions\n * @return {obj} - output dimensions after move ({ height, width })\n */\nexport const getValidDimensions = ({\n  dimensions,\n  local,\n  isLocked,\n  lockAspectRatio,\n}) => {\n  // if lock is not active, just return new dimensions.\n  // If lock is active, but dimensions have not changed, also just return new dimensions.\n  if (!isLocked || checkEqual(local, dimensions)) {\n    return local;\n  }\n\n  const out = {};\n\n  // changed key is value of local height if that has changed, otherwise width.\n  const keys = (local.height !== dimensions.height)\n    ? { changed: dimKeys.height, other: dimKeys.width }\n    : { changed: dimKeys.width, other: dimKeys.height };\n\n  out[keys.changed] = local[keys.changed];\n  out[keys.other] = Math.round((local[keys.changed] * lockAspectRatio[keys.other]) / lockAspectRatio[keys.changed]);\n\n  return out;\n};\n\n/**\n * reduceDimensions(width, height)\n * reduces both values by dividing by their greates common denominator (which can simply be 1).\n * @return {Array} [width, height]\n */\nexport const reduceDimensions = (width, height) => {\n  const gcd = module.findGcd(width, height);\n\n  return [width / gcd, height / gcd];\n};\n\n/**\n * dimensionLockHooks({ dimensions })\n * Returns a set of hooks pertaining to the dimension locks.\n * Locks the dimensions initially, on lock initialization.\n * @param {obj} dimensions - current stored dimensions\n * @return {obj} - dimension lock hooks\n *   {func} initializeLock - enable the lock mechanism\n *   {bool} isLocked - are dimensions locked?\n *   {obj} lockAspectRatio - image dimensions ({ height, width })\n *   {func} lock - lock the dimensions\n *   {func} unlock - unlock the dimensions\n */\nexport const dimensionLockHooks = () => {\n  const [lockAspectRatio, setLockAspectRatio] = module.state.lockAspectRatio(null);\n  const [isLocked, setIsLocked] = module.state.isLocked(true);\n\n  const initializeLock = ({ width, height }) => {\n    // width and height are treated as a fraction and reduced.\n    const [w, h] = reduceDimensions(width, height);\n\n    setLockAspectRatio({ width: w, height: h });\n  };\n\n  return {\n    initializeLock,\n    isLocked,\n    lock: () => setIsLocked(true),\n    lockAspectRatio,\n    unlock: () => setIsLocked(false),\n  };\n};\n\n/**\n * dimensionHooks()\n * Returns an object of dimension-focused react hooks.\n * @return {obj} - dimension hooks\n *   {func} onImgLoad - initializes image dimension fields\n *     @param {object} selection - selected image object with possible override dimensions.\n *     @return {callback} - image load event callback that loads dimensions.\n *   {object} locked - current locked state\n *   {func} lock - lock current dimensions\n *   {func} unlock - unlock dimensions\n *   {object} value - current dimension values\n *   {func} setHeight - set height\n *     @param {string} - new height string\n *   {func} setWidth - set width\n *     @param {string} - new width string\n *   {func} updateDimensions - set dimensions based on state\n *   {obj} errorProps - props for user feedback error\n *     {bool} isError - true if dimensions are blank\n *     {func} setError - sets isError to true\n *     {func} dismissError - sets isError to false\n *     {bool} isHeightValid - true if height field is ready to save\n *     {func} setHeightValid - sets isHeightValid to true\n *     {func} setHeightNotValid - sets isHeightValid to false\n *     {bool} isWidthValid - true if width field is ready to save\n *     {func} setWidthValid - sets isWidthValid to true\n *     {func} setWidthNotValid - sets isWidthValid to false\n */\nexport const dimensionHooks = (altTextHook) => {\n  const [dimensions, setDimensions] = module.state.dimensions(null);\n  const [local, setLocal] = module.state.local(null);\n\n  const setAll = ({ height, width, altText }) => {\n    if (altText === '' || altText) {\n      if (altText === '') {\n        altTextHook.setIsDecorative(true);\n      }\n      altTextHook.setValue(altText);\n    }\n    setDimensions({ height, width });\n    setLocal({ height, width });\n  };\n\n  const setHeight = (height) => {\n    if (height.match(/[0-9]+[%]{1}/)) {\n      const heightPercent = height.match(/[0-9]+[%]{1}/)[0];\n      setLocal({ ...local, height: heightPercent });\n    } else if (height.match(/[0-9]/)) {\n      setLocal({ ...local, height: parseInt(height, 10) });\n    }\n  };\n\n  const setWidth = (width) => {\n    if (width.match(/[0-9]+[%]{1}/)) {\n      const widthPercent = width.match(/[0-9]+[%]{1}/)[0];\n      setLocal({ ...local, width: widthPercent });\n    } else if (width.match(/[0-9]/)) {\n      setLocal({ ...local, width: parseInt(width, 10) });\n    }\n  };\n\n  const {\n    initializeLock,\n    isLocked,\n    lock,\n    lockAspectRatio,\n    unlock,\n  } = module.dimensionLockHooks({ dimensions });\n\n  return {\n    onImgLoad: (selection) => ({ target: img }) => {\n      const imageDims = { height: img.naturalHeight, width: img.naturalWidth };\n      setAll(selection.height ? selection : imageDims);\n      initializeLock(selection.height ? selection : imageDims);\n    },\n    isLocked,\n    lock,\n    unlock,\n    value: local,\n    setHeight,\n    setWidth,\n    updateDimensions: () => setAll(module.getValidDimensions({\n      dimensions,\n      local,\n      isLocked,\n      lockAspectRatio,\n    })),\n  };\n};\n\n/**\n * altTextHooks(savedText)\n * Returns a set of react hooks focused around alt text\n * @return {obj} - alt text hooks\n *   {string} value - alt text value\n *   {func} setValue - set alt test value\n *     @param {string} - new alt text\n *   {bool} isDecorative - is the image decorative?\n *   {func} setIsDecorative - set isDecorative field\n *   {obj} error - error at top of page\n *     {bool} show - is error being displayed?\n *     {func} set - set show to true\n *     {func} dismiss - set show to false\n *   {obj} validation - local alt text error\n *     {bool} show - is validation error being displayed?\n *     {func} set - set validation to true\n *     {func} dismiss - set validation to false\n */\nexport const altTextHooks = (savedText) => {\n  const [value, setValue] = module.state.altText(savedText || '');\n  const [isDecorative, setIsDecorative] = module.state.isDecorative(false);\n  const [showAltTextDismissibleError, setShowAltTextDismissibleError] = module.state.showAltTextDismissibleError(false);\n  const [showAltTextSubmissionError, setShowAltTextSubmissionError] = module.state.showAltTextSubmissionError(false);\n\n  const validateAltText = (newVal, newDecorative) => {\n    if (showAltTextSubmissionError) {\n      if (newVal || newDecorative) {\n        setShowAltTextSubmissionError(false);\n      }\n    }\n  };\n\n  return {\n    value,\n    setValue: (val) => {\n      setValue(val);\n      validateAltText(val, null);\n    },\n    isDecorative,\n    setIsDecorative: (decorative) => {\n      setIsDecorative(decorative);\n      validateAltText(null, decorative);\n    },\n    error: {\n      show: showAltTextDismissibleError,\n      set: () => setShowAltTextDismissibleError(true),\n      dismiss: () => setShowAltTextDismissibleError(false),\n    },\n    validation: {\n      show: showAltTextSubmissionError,\n      set: () => setShowAltTextSubmissionError(true),\n      dismiss: () => setShowAltTextSubmissionError(false),\n    },\n  };\n};\n\n/**\n * onInputChange(handleValue)\n * Simple event handler forwarding the event target value to a given callback\n * @param {func} handleValue - event value handler\n * @return {func} - evt callback that will call handleValue with the event target value.\n */\nexport const onInputChange = (handleValue) => (e) => handleValue(e.target.value);\n\n/**\n * onCheckboxChange(handleValue)\n * Simple event handler forwarding the event target checked prop to a given callback\n * @param {func} handleValue - event value handler\n * @return {func} - evt callback that will call handleValue with the event target checked prop.\n */\nexport const onCheckboxChange = (handleValue) => (e) => handleValue(e.target.checked);\n\n/**\n * checkFormValidation({ altText, isDecorative, onAltTextFail })\n * Handle saving the image context to the text editor\n * @param {string} altText - image alt text\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} onAltTextFail - called if alt text validation fails\n */\nexport const checkFormValidation = ({\n  altText,\n  isDecorative,\n  onAltTextFail,\n}) => {\n  if (!isDecorative && altText === '') {\n    onAltTextFail();\n    return false;\n  }\n  return true;\n};\n\n/**\n * onSave({ altText, dimensions, isDecorative, saveToEditor })\n * Handle saving the image context to the text editor\n * @param {string} altText - image alt text\n * @param {object} dimensions - image dimensions ({ width, height })\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} saveToEditor - save method for submitting image settings.\n */\nexport const onSaveClick = ({\n  altText,\n  dimensions,\n  isDecorative,\n  saveToEditor,\n}) => () => {\n  if (module.checkFormValidation({\n    altText: altText.value,\n    isDecorative,\n    onAltTextFail: () => {\n      altText.error.set();\n      altText.validation.set();\n    },\n  })) {\n    altText.error.dismiss();\n    altText.validation.dismiss();\n    saveToEditor({\n      altText: altText.value,\n      dimensions,\n      isDecorative,\n    });\n  }\n};\n\nexport default {\n  altText: altTextHooks,\n  dimensions: dimensionHooks,\n  onCheckboxChange,\n  onInputChange,\n  onSaveClick,\n  checkFormValidation,\n};\n"],"mappings":"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"}