{"version":3,"file":"testUtils.js","names":["_react","_interopRequireDefault","require","_utils","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","formatMessage","msg","values","message","defaultMessage","undefined","replace","exports","mockNestedComponent","name","contents","fn","nestedName","mockNestedComponents","mapping","entries","reduce","_ref","MockUseState","constructor","hooks","oldState","setState","stateVals","mock","bind","restore","mockVal","testGetter","StrictDict","state","jest","val","mockReturnValueOnce","test","testValue","useState","spyOn","react","mockImplementationOnce","expect","toEqual"],"sources":["../src/testUtils.js"],"sourcesContent":["/* istanbul ignore file */\nimport react from 'react';\nimport { StrictDict } from './editors/utils';\n/**\n * Mocked formatMessage provided by react-intl\n */\nexport const formatMessage = (msg, values) => {\n  let message = msg.defaultMessage;\n  if (values === undefined) {\n    return message;\n  }\n  Object.keys(values).forEach((key) => {\n    // eslint-disable-next-line\n    message = message.replace(`{${key}}`, values[key]);\n  });\n  return message;\n};\n\n/**\n * Mock a single component, or a nested component so that its children render nicely\n * in snapshots.\n * @param {string} name - parent component name\n * @param {obj} contents - object of child components with intended component\n *   render name.\n * @return {func} - mock component with nested children.\n *\n * usage:\n *   mockNestedComponent('Card', { Body: 'Card.Body', Form: { Control: { Feedback: 'Form.Control.Feedback' }}... });\n *   mockNestedComponent('IconButton', 'IconButton');\n */\nexport const mockNestedComponent = (name, contents) => {\n  if (typeof contents !== 'object') {\n    return contents;\n  }\n  const fn = () => name;\n  Object.defineProperty(fn, 'name', { value: name });\n  Object.keys(contents).forEach((nestedName) => {\n    const value = contents[nestedName];\n    fn[nestedName] = typeof value !== 'object'\n      ? value\n      : mockNestedComponent(`${name}.${nestedName}`, value);\n  });\n  return fn;\n};\n\n/**\n * Mock a module of components.  nested components will be rendered nicely in snapshots.\n * @param {obj} mapping - component module mock config.\n * @return {obj} - module of flat and nested components that will render nicely in snapshots.\n * usage:\n *   mockNestedComponents({\n *     Card: { Body: 'Card.Body' },\n *     IconButton: 'IconButton',\n *   })\n */\nexport const mockNestedComponents = (mapping) => Object.entries(mapping).reduce(\n  (obj, [name, value]) => ({\n    ...obj,\n    [name]: mockNestedComponent(name, value),\n  }),\n  {},\n);\n\n/**\n * Mock utility for working with useState in a hooks module.\n * Expects/requires an object containing the state object in order to ensure\n * the mock behavior works appropriately.\n *\n * Expected format:\n *   hooks = { state: { <key>: (val) => React.createRef(val), ... } }\n *\n * Returns a utility for mocking useState and providing access to specific state values\n * and setState methods, as well as allowing per-test configuration of useState value returns.\n *\n * Example usage:\n *   // hooks.js\n *   import * as module from './hooks';\n *   const state = {\n *     isOpen: (val) => React.useState(val),\n *     hasDoors: (val) => React.useState(val),\n *     selected: (val) => React.useState(val),\n *   };\n *   ...\n *   export const exampleHook = () => {\n *     const [isOpen, setIsOpen] = module.state.isOpen(false);\n *     if (!isOpen) { return null; }\n *     return { isOpen, setIsOpen };\n *   }\n *   ...\n *\n *   // hooks.test.js\n *   import * as hooks from './hooks';\n *   const state = new MockUseState(hooks)\n *   ...\n *   describe('state hooks', () => {\n *     state.testGetter(state.keys.isOpen);\n *     state.testGetter(state.keys.hasDoors);\n *     state.testGetter(state.keys.selected);\n *   });\n *   describe('exampleHook', () => {\n *     beforeEach(() => { state.mock(); });\n *     it('returns null if isOpen is default value', () => {\n *       expect(hooks.exampleHook()).toEqual(null);\n *     });\n *     it('returns isOpen and setIsOpen if isOpen is not null', () => {\n *       state.mockVal(state.keys.isOpen, true);\n *       expect(hooks.exampleHook()).toEqual({\n *         isOpen: true,\n *         setIsOpen: state.setState[state.keys.isOpen],\n *       });\n *     });\n *     afterEach(() => { state.restore(); });\n *   });\n *\n * @param {obj} hooks - hooks module containing a 'state' object\n */\nexport class MockUseState {\n  constructor(hooks) {\n    this.hooks = hooks;\n    this.oldState = null;\n    this.setState = {};\n    this.stateVals = {};\n\n    this.mock = this.mock.bind(this);\n    this.restore = this.restore.bind(this);\n    this.mockVal = this.mockVal.bind(this);\n    this.testGetter = this.testGetter.bind(this);\n  }\n\n  /**\n   * @return {object} - StrictDict of state object keys\n   */\n  get keys() {\n    return StrictDict(Object.keys(this.hooks.state).reduce(\n      (obj, key) => ({ ...obj, [key]: key }),\n      {},\n    ));\n  }\n\n  /**\n   * Replace the hook module's state object with a mocked version, initialized to default values.\n   */\n  mock() {\n    this.oldState = this.hooks.state;\n    Object.keys(this.keys).forEach(key => {\n      this.hooks.state[key] = jest.fn(val => {\n        this.stateVals[key] = val;\n        return [val, this.setState[key]];\n      });\n    });\n    this.setState = Object.keys(this.keys).reduce(\n      (obj, key) => ({\n        ...obj,\n        [key]: jest.fn(val => {\n          this.hooks.state[key] = val;\n        }),\n      }),\n      {},\n    );\n  }\n\n  /**\n   * Restore the hook module's state object to the actual code.\n   */\n  restore() {\n    this.hooks.state = this.oldState;\n  }\n\n  /**\n   * Mock the state getter associated with a single key to return a specific value one time.\n   * @param {string} key - state key (from this.keys)\n   * @param {any} val - new value to be returned by the useState call.\n   */\n  mockVal(key, val) {\n    this.hooks.state[key].mockReturnValueOnce([val, this.setState[key]]);\n  }\n\n  testGetter(key) {\n    test(`${key} state getter should return useState passthrough`, () => {\n      const testValue = 'some value';\n      const useState = (val) => ({ useState: val });\n      jest.spyOn(react, 'useState').mockImplementationOnce(useState);\n      expect(this.hooks.state[key](testValue)).toEqual(useState(testValue));\n    });\n  }\n}\n"],"mappings":"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"}