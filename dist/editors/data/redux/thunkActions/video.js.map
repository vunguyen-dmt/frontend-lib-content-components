{"version":3,"file":"video.js","names":["_","require","_utils","requests","_interopRequireWildcard","_module","_hooks","_api","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","loadVideoData","selectedVideoId","selectedVideoUrl","dispatch","getState","state","blockValueData","app","blockValue","data","rawVideoData","metadata","courseData","courseDetails","rawVideos","values","selectors","videos","selectedVideo","find","video","edx_video_id","thumbnail","course_video_image_url","duration","transcriptsFromSelected","transcripts","selectedVideoTranscriptUrls","transcript_urls","studioView","html","videoId","videoUrl","fallbackVideos","module","determineVideoSources","edxVideoId","youtubeId","youtube_id_1_0","html5Sources","html5_sources","videoSourceUrl","licenseType","licenseOptions","parseLicense","licenseData","level","parseTranscripts","transcriptsData","courseLicenseType","courseLicenseDetails","license","allowVideoSharing","parseVideoSharingSetting","courseSetting","video_sharing_options","blockSetting","public_access","actions","load","videoSource","allowVideoDownloads","download_video","videoSharingLearnMoreLink","video_sharing_doc_url","videoSharingEnabledForCourse","video_sharing_enabled","allowTranscriptDownloads","download_track","showTranscriptByDefault","show_captions","startTime","valueFromDuration","start_time","stopTime","end_time","total","handout","licenseDetails","attribution","by","noncommercial","nc","noDerivatives","nd","shareAlike","sa","fetchVideoFeatures","onSuccess","response","updateField","allowThumbnailUpload","videoSharingEnabledForAll","videoSharingEnabled","youTubeId","parseYoutubeId","checkTranscriptsForImport","command","allowTranscriptImport","exports","_ref","youtubeUrl","Array","isArray","slice","_ref2","value","_ref3","cleanedStr","replace","startString","endString","transcriptsJson","substring","indexOf","length","transcriptsObj","JSON","parse","keys","error","SyntaxError","console","message","_ref4","metadataArr","split","forEach","arr","parsedStr","includes","colonIndex","lastIndexOf","trim","optionStr","options","version","defaultVersion","option","toLowerCase","saveVideoData","videoSettings","uploadThumbnail","_ref5","emptyCanvas","studioEndpointUrl","thumbnailUrl","image_url","startsWith","onFailure","e","log","UploadFailure","uploadHandout","_ref6","file","uploadAsset","asset","url","importTranscript","transcriptsPlaceholderRemoved","removeItemOnce","uploadTranscript","_ref7","language","transcript","deleteTranscript","_ref8","updatedTranscripts","filter","langCode","updateTranscriptLanguage","_ref9","newLanguageCode","languageBeforeChange","getTranscriptDownloadUrl","getTranscriptFile","File","Blob","type","newTranscripts","push","replaceTranscript","_ref10","newFile","newFilename","filename","_default"],"sources":["../../../../../src/editors/data/redux/thunkActions/video.js"],"sourcesContent":["/* eslint-disable import/no-cycle */\nimport { actions, selectors } from '..';\nimport { removeItemOnce } from '../../../utils';\nimport * as requests from './requests';\nimport * as module from './video';\nimport { valueFromDuration } from '../../../containers/VideoEditor/components/VideoSettingsModal/components/DurationWidget/hooks';\nimport { parseYoutubeId } from '../../services/cms/api';\n\nexport const loadVideoData = (selectedVideoId, selectedVideoUrl) => (dispatch, getState) => {\n  const state = getState();\n  const blockValueData = state.app.blockValue.data;\n  let rawVideoData = blockValueData.metadata ? blockValueData.metadata : {};\n  const courseData = state.app.courseDetails.data ? state.app.courseDetails.data : {};\n  if (selectedVideoId != null) {\n    const rawVideos = Object.values(selectors.app.videos(state));\n    const selectedVideo = rawVideos.find(video => video.edx_video_id === selectedVideoId);\n    rawVideoData = {\n      edx_video_id: selectedVideo.edx_video_id,\n      thumbnail: selectedVideo.course_video_image_url,\n      duration: selectedVideo.duration,\n      transcriptsFromSelected: selectedVideo.transcripts,\n      selectedVideoTranscriptUrls: selectedVideo.transcript_urls,\n    };\n  }\n  const studioView = state.app.studioView?.data?.html;\n  const {\n    videoId,\n    videoUrl,\n    fallbackVideos,\n  } = module.determineVideoSources({\n    edxVideoId: rawVideoData.edx_video_id,\n    youtubeId: rawVideoData.youtube_id_1_0,\n    html5Sources: rawVideoData.html5_sources,\n  });\n\n  // Use the selected video url first\n  const videoSourceUrl = selectedVideoUrl != null ? selectedVideoUrl : videoUrl;\n  const [licenseType, licenseOptions] = module.parseLicense({ licenseData: studioView, level: 'block' });\n  const transcripts = rawVideoData.transcriptsFromSelected ? rawVideoData.transcriptsFromSelected\n    : module.parseTranscripts({ transcriptsData: studioView });\n\n  const [courseLicenseType, courseLicenseDetails] = module.parseLicense({\n    licenseData: courseData.license,\n    level: 'course',\n  });\n  const allowVideoSharing = module.parseVideoSharingSetting({\n    courseSetting: blockValueData?.video_sharing_options,\n    blockSetting: rawVideoData.public_access,\n  });\n  dispatch(actions.video.load({\n    videoSource: videoSourceUrl || '',\n    videoId,\n    fallbackVideos,\n    allowVideoDownloads: rawVideoData.download_video,\n    allowVideoSharing,\n    videoSharingLearnMoreLink: blockValueData?.video_sharing_doc_url,\n    videoSharingEnabledForCourse: blockValueData?.video_sharing_enabled,\n    transcripts,\n    selectedVideoTranscriptUrls: rawVideoData.selectedVideoTranscriptUrls,\n    allowTranscriptDownloads: rawVideoData.download_track,\n    showTranscriptByDefault: rawVideoData.show_captions,\n    duration: { // TODO duration is not always sent so they should be calculated.\n      startTime: valueFromDuration(rawVideoData.start_time || '00:00:00'),\n      stopTime: valueFromDuration(rawVideoData.end_time || '00:00:00'),\n      total: rawVideoData.duration || 0, // TODO can we get total duration? if not, probably dropping from widget\n    },\n    handout: rawVideoData.handout,\n    licenseType,\n    licenseDetails: {\n      attribution: licenseOptions.by,\n      noncommercial: licenseOptions.nc,\n      noDerivatives: licenseOptions.nd,\n      shareAlike: licenseOptions.sa,\n    },\n    courseLicenseType,\n    courseLicenseDetails: {\n      attribution: courseLicenseDetails.by,\n      noncommercial: courseLicenseDetails.nc,\n      noDerivatives: courseLicenseDetails.nd,\n      shareAlike: courseLicenseDetails.sa,\n    },\n    thumbnail: rawVideoData.thumbnail,\n  }));\n  dispatch(requests.fetchVideoFeatures({\n    onSuccess: (response) => dispatch(actions.video.updateField({\n      allowThumbnailUpload: response.data.allowThumbnailUpload,\n      videoSharingEnabledForAll: response.data.videoSharingEnabled,\n    })),\n  }));\n  const youTubeId = parseYoutubeId(videoSourceUrl);\n  if (youTubeId) {\n    dispatch(requests.checkTranscriptsForImport({\n      videoId,\n      youTubeId,\n      onSuccess: (response) => {\n        if (response.data.command === 'import') {\n          dispatch(actions.video.updateField({\n            allowTranscriptImport: true,\n          }));\n        }\n      },\n    }));\n  }\n};\n\nexport const determineVideoSources = ({\n  edxVideoId,\n  youtubeId,\n  html5Sources,\n}) => {\n  const youtubeUrl = `https://youtu.be/${youtubeId}`;\n  let videoUrl;\n  let fallbackVideos;\n  if (youtubeId) {\n    [videoUrl, fallbackVideos] = [youtubeUrl, html5Sources];\n  } else if (Array.isArray(html5Sources) && html5Sources[0]) {\n    [videoUrl, fallbackVideos] = [html5Sources[0], html5Sources.slice(1)];\n  }\n  return {\n    videoId: edxVideoId || '',\n    videoUrl: videoUrl || '',\n    fallbackVideos: fallbackVideos || [],\n  };\n};\n\nexport const parseVideoSharingSetting = ({ courseSetting, blockSetting }) => {\n  switch (courseSetting) {\n    case 'all-on':\n      return { level: 'course', value: true };\n    case 'all-off':\n      return { level: 'course', value: false };\n    case 'per-video':\n      return { level: 'block', value: blockSetting };\n    default:\n      return { level: 'block', value: blockSetting };\n  }\n};\n\nexport const parseTranscripts = ({ transcriptsData }) => {\n  if (!transcriptsData) {\n    return [];\n  }\n  const cleanedStr = transcriptsData.replace(/&#34;/g, '\"');\n  const startString = '\"transcripts\": ';\n  const endString = ', \"youtube_id_0_75\": ';\n  const transcriptsJson = cleanedStr.substring(\n    cleanedStr.indexOf(startString) + startString.length,\n    cleanedStr.indexOf(endString),\n  );\n  // const transcriptsObj = JSON.parse(transcriptsJson);\n  try {\n    const transcriptsObj = JSON.parse(transcriptsJson);\n    return Object.keys(transcriptsObj.value);\n  } catch (error) {\n    if (error instanceof SyntaxError) {\n      console.error('Invalid JSON:', error.message);\n    } else {\n      throw error;\n    }\n    return [];\n  }\n};\n\n// partially copied from frontend-app-learning/src/courseware/course/course-license/CourseLicense.jsx\nexport const parseLicense = ({ licenseData, level }) => {\n  if (!licenseData) {\n    return [null, {}];\n  }\n  let license = licenseData;\n  if (level === 'block') {\n    const metadataArr = licenseData.split('data-metadata');\n    metadataArr.forEach(arr => {\n      const parsedStr = arr.replace(/&#34;/g, '\"');\n      if (parsedStr.includes('license')) {\n        license = parsedStr.substring(parsedStr.indexOf('\"value\"'), parsedStr.indexOf(', \"type\"')).replace(/\"value\": |\"/g, '');\n      }\n    });\n  }\n  if (!license || license.includes('null')) {\n    return [null, {}];\n  }\n  if (license === 'all-rights-reserved') {\n    // no options, so the entire thing is the license type\n    return [license, {}];\n  }\n  // Search for a colon character denoting the end\n  // of the license type and start of the options\n  const colonIndex = license.lastIndexOf(':');\n  // Split the license on the colon\n  const licenseType = license.slice(0, colonIndex).trim();\n  const optionStr = license.slice(colonIndex + 1).trim();\n  const options = {};\n  let version = '';\n\n  // Set the defaultVersion to 4.0\n  const defaultVersion = '4.0';\n  optionStr.split(' ').forEach(option => {\n    // Split the option into key and value\n    // Default the value to `true` if no value\n    let key = '';\n    let value = '';\n    if (option.indexOf('=') !== -1) {\n      [key, value] = option.split('=');\n    } else {\n      key = option;\n      value = true;\n    }\n\n    // Check for version\n    if (key === 'ver') {\n      version = value;\n    } else {\n      // Set the option key to lowercase to make\n      // it easier to query\n      options[key.toLowerCase()] = value;\n    }\n  });\n\n  // Set the version to whatever was included,\n  // using `defaultVersion` as a fallback if unset\n  version = version || defaultVersion;\n\n  return [licenseType, options, version];\n};\n\nexport const saveVideoData = () => (dispatch, getState) => {\n  const state = getState();\n  return selectors.video.videoSettings(state);\n};\n\nexport const uploadThumbnail = ({ thumbnail, emptyCanvas }) => (dispatch, getState) => {\n  const state = getState();\n  const { videoId } = state.video;\n  const { studioEndpointUrl } = state.app;\n  dispatch(requests.uploadThumbnail({\n    thumbnail,\n    videoId,\n    onSuccess: (response) => {\n      let thumbnailUrl;\n      if (response.data.image_url.startsWith('/')) {\n        // in local environments, image_url is a relative path\n        thumbnailUrl = studioEndpointUrl + response.data.image_url;\n      } else {\n        // in stage and production, image_url is an absolute path to the image\n        thumbnailUrl = response.data.image_url;\n      }\n      if (!emptyCanvas) {\n        dispatch(actions.video.updateField({\n          thumbnail: thumbnailUrl,\n        }));\n      }\n    },\n    onFailure: (e) => console.log({ UploadFailure: e }, 'Resampling thumbnail upload'),\n  }));\n};\n\n// Handout Thunks:\n\nexport const uploadHandout = ({ file }) => (dispatch) => {\n  dispatch(requests.uploadAsset({\n    asset: file,\n    onSuccess: (response) => {\n      const handout = response.data.asset.url;\n      dispatch(actions.video.updateField({ handout }));\n    },\n  }));\n};\n\n// Transcript Thunks:\n\nexport const importTranscript = () => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoSource } = state.video;\n  // Remove the placeholder '' from the unset language from the list of transcripts.\n  const transcriptsPlaceholderRemoved = (transcripts === []) ? transcripts : removeItemOnce(transcripts, '');\n\n  dispatch(requests.importTranscript({\n    youTubeId: parseYoutubeId(videoSource),\n    onSuccess: (response) => {\n      dispatch(actions.video.updateField({\n        transcripts: [\n          ...transcriptsPlaceholderRemoved,\n          'en'],\n      }));\n\n      if (selectors.video.videoId(state) === '') {\n        dispatch(actions.video.updateField({\n          videoId: response.data.edx_video_id,\n        }));\n      }\n    },\n  }));\n};\n\nexport const uploadTranscript = ({ language, file }) => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoId } = state.video;\n  // Remove the placeholder '' from the unset language from the list of transcripts.\n  const transcriptsPlaceholderRemoved = (transcripts === []) ? transcripts : removeItemOnce(transcripts, '');\n\n  dispatch(requests.uploadTranscript({\n    language,\n    videoId,\n    transcript: file,\n    onSuccess: (response) => {\n      // if we aren't replacing, add the language to the redux store.\n      if (!transcriptsPlaceholderRemoved.includes(language)) {\n        dispatch(actions.video.updateField({\n          transcripts: [\n            ...transcriptsPlaceholderRemoved,\n            language],\n        }));\n      }\n\n      if (selectors.video.videoId(state) === '') {\n        dispatch(actions.video.updateField({\n          videoId: response.data.edx_video_id,\n        }));\n      }\n    },\n  }));\n};\n\nexport const deleteTranscript = ({ language }) => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoId } = state.video;\n  dispatch(requests.deleteTranscript({\n    language,\n    videoId,\n    onSuccess: () => {\n      const updatedTranscripts = transcripts.filter((langCode) => langCode !== language);\n      dispatch(actions.video.updateField({ transcripts: updatedTranscripts }));\n    },\n  }));\n};\n\nexport const updateTranscriptLanguage = ({ newLanguageCode, languageBeforeChange }) => (dispatch, getState) => {\n  const state = getState();\n  const { video: { transcripts, videoId } } = state;\n  selectors.video.getTranscriptDownloadUrl(state);\n  dispatch(requests.getTranscriptFile({\n    videoId,\n    language: languageBeforeChange,\n    onSuccess: (response) => {\n      dispatch(requests.updateTranscriptLanguage({\n        languageBeforeChange,\n        file: new File([new Blob([response.data], { type: 'text/plain' })], `${videoId}_${newLanguageCode}.srt`, { type: 'text/plain' }),\n        newLanguageCode,\n        videoId,\n        onSuccess: () => {\n          const newTranscripts = transcripts\n            .filter(transcript => transcript !== languageBeforeChange);\n          newTranscripts.push(newLanguageCode);\n          dispatch(actions.video.updateField({ transcripts: newTranscripts }));\n        },\n      }));\n    },\n  }));\n};\n\nexport const replaceTranscript = ({ newFile, newFilename, language }) => (dispatch, getState) => {\n  const state = getState();\n  const { videoId } = state.video;\n  dispatch(requests.deleteTranscript({\n    language,\n    videoId,\n    onSuccess: () => {\n      dispatch(uploadTranscript({ language, file: newFile, filename: newFilename }));\n    },\n  }));\n};\n\nexport default {\n  loadVideoData,\n  determineVideoSources,\n  parseLicense,\n  saveVideoData,\n  uploadThumbnail,\n  importTranscript,\n  uploadTranscript,\n  deleteTranscript,\n  updateTranscriptLanguage,\n  replaceTranscript,\n  uploadHandout,\n};\n"],"mappings":"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"}