{"version":3,"file":"FormCheckbox.js","names":["_react","_interopRequireDefault","require","_propTypes","_classnames","_FormCheckboxSetContext","_FormGroupContext","_FormLabel","_FormControlFeedback","_jsxRuntime","_excluded","_excluded2","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","sourceKeys","CheckboxControl","exports","React","forwardRef","_ref","ref","isIndeterminate","props","getCheckboxControlProps","hasCheckboxSetProvider","useCheckboxSetContext","defaultRef","useRef","resolvedRef","getControlProps","useFormGroupContext","checkboxProps","className","classNames","useEffect","current","indeterminate","jsx","type","propTypes","PropTypes","bool","string","defaultProps","undefined","FormCheckbox","_ref2","children","controlClassName","labelClassName","description","isInvalid","isValid","controlAs","floatLabelLeft","hasFormGroupProvider","useSetIsControlGroupEffect","shouldActAsGroup","groupProps","role","control","createElement","FormGroupContextProvider","controlId","id","jsxs","disabled","hasIcon","node","isRequired","elementType","_default"],"sources":["../../../../src/editors/sharedComponents/SelectableBox/FormCheckbox.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useCheckboxSetContext } from './FormCheckboxSetContext';\nimport { FormGroupContextProvider, useFormGroupContext } from './FormGroupContext';\nimport FormLabel from './FormLabel';\nimport FormControlFeedback from './FormControlFeedback';\n\nconst CheckboxControl = React.forwardRef(\n  ({ isIndeterminate, ...props }, ref) => {\n    const { getCheckboxControlProps, hasCheckboxSetProvider } = useCheckboxSetContext();\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    const { getControlProps } = useFormGroupContext();\n    let checkboxProps = getControlProps({\n      ...props,\n      className: classNames('pgn__form-checkbox-input', props.className),\n    });\n\n    if (hasCheckboxSetProvider) {\n      checkboxProps = getCheckboxControlProps(checkboxProps);\n    }\n\n    React.useEffect(() => {\n      // this if(resolvedRef.current) prevents console errors in testing\n      if (resolvedRef.current) {\n        resolvedRef.current.indeterminate = isIndeterminate;\n      }\n    }, [resolvedRef, isIndeterminate]);\n\n    return (\n      <input\n        type=\"checkbox\"\n        {...checkboxProps}\n        ref={resolvedRef}\n      />\n    );\n  },\n);\n\nCheckboxControl.propTypes = {\n  /** Specifies whether the checkbox should be rendered in indeterminate state. */\n  isIndeterminate: PropTypes.bool,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n};\n\nCheckboxControl.defaultProps = {\n  isIndeterminate: false,\n  className: undefined,\n};\n\nconst FormCheckbox = React.forwardRef(({\n  children,\n  className,\n  controlClassName,\n  labelClassName,\n  description,\n  isInvalid,\n  isValid,\n  controlAs,\n  floatLabelLeft,\n  ...props\n}, ref) => {\n  const { hasCheckboxSetProvider } = useCheckboxSetContext();\n  const { hasFormGroupProvider, useSetIsControlGroupEffect, getControlProps } = useFormGroupContext();\n  useSetIsControlGroupEffect(true);\n  const shouldActAsGroup = hasFormGroupProvider && !hasCheckboxSetProvider;\n  const groupProps = shouldActAsGroup ? {\n    ...getControlProps({}),\n    role: 'group',\n  } : {};\n\n  const control = React.createElement(controlAs, { ...props, className: controlClassName, ref });\n  return (\n    <FormGroupContextProvider\n      controlId={props.id}\n      isInvalid={isInvalid}\n      isValid={isValid}\n    >\n      <div\n        className={classNames('pgn__form-checkbox', className, {\n          'pgn__form-control-valid': isValid,\n          'pgn__form-control-invalid': isInvalid,\n          'pgn__form-control-disabled': props.disabled,\n          'pgn__form-control-label-left': !!floatLabelLeft,\n        })}\n        {...groupProps}\n      >\n        {control}\n        <div>\n          <FormLabel className={labelClassName}>\n            {children}\n          </FormLabel>\n          {description && (\n            <FormControlFeedback hasIcon={false}>\n              {description}\n            </FormControlFeedback>\n          )}\n        </div>\n      </div>\n    </FormGroupContextProvider>\n  );\n});\n\nFormCheckbox.propTypes = {\n  /** Specifies id of the FormCheckbox component. */\n  id: PropTypes.string,\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies class name for control component. */\n  controlClassName: PropTypes.string,\n  /** Specifies class name for label component. */\n  labelClassName: PropTypes.string,\n  /** Specifies description to show under the checkbox. */\n  description: PropTypes.node,\n  /** Specifies whether to display checkbox in invalid state, this affects styling. */\n  isInvalid: PropTypes.bool,\n  /** Specifies whether to display checkbox in valid state, this affects styling. */\n  isValid: PropTypes.bool,\n  /** Specifies control element. */\n  controlAs: PropTypes.elementType,\n  /** Specifies whether the floating label should be aligned to the left. */\n  floatLabelLeft: PropTypes.bool,\n  /** Specifies whether the `FormCheckbox` is disabled. */\n  disabled: PropTypes.bool,\n};\n\nFormCheckbox.defaultProps = {\n  id: undefined,\n  className: undefined,\n  controlClassName: undefined,\n  labelClassName: undefined,\n  description: undefined,\n  isInvalid: false,\n  isValid: false,\n  controlAs: CheckboxControl,\n  floatLabelLeft: false,\n  disabled: false,\n};\n\nexport { CheckboxControl };\nexport default FormCheckbox;\n"],"mappings":"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"}