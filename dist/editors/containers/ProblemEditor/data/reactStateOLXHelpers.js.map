{"version":3,"file":"reactStateOLXHelpers.js","names":["_lodash","_interopRequireDefault","require","obj","__esModule","default","flattenSubNodes","node","subNodes","options","arguments","length","undefined","recursive","values","Array","isArray","flatten","map","n","Object","forEach","value","push","nestedNode","nodeContainsChildTags","tagNames","res","some","subNode","includes","keys","tagName","TypeError","find","key","match","findNodesAndRemoveTheirParentNodes","_ref","arrayOfNodes","nodesToFind","parentsToRemove","result","containsRelevantSubnodes"],"sources":["../../../../../src/editors/containers/ProblemEditor/data/reactStateOLXHelpers.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nimport flatten from 'lodash.flatten';\n\n/**\n * flattenSubNodes - appends a nodes children to a given array 'subNodes' in a flattened format.\n * Only appends direct children unless `recursive` is set to true.\n * @param {object} node\n * @param {object[]} subNodes\n * @param {object} options - { recursive: false } Whether to search recursively for child tags.\n * @returns {void}\n */\nfunction flattenSubNodes(node, subNodes, options = { recursive: false }) {\n  const values = Array.isArray(node) ? (\n    flatten(node.map(n => Object.values(n)))\n  ) : Object.values(node);\n\n  values.forEach(value => {\n    if (Array.isArray(value)) {\n      subNodes.push(...value);\n\n      if (options.recursive) {\n        value.forEach(nestedNode => {\n          flattenSubNodes(nestedNode, subNodes, options);\n        });\n      }\n    }\n  });\n}\n\n/**\n * function nodeContainsChildTags - checks whether a node contains any subnodes with the specified tag names.\n *\n * @param {object} node - Example for node:\n *   {\"div\":\n *     [\n *       {\"label\":\n *         [\n *           {\"#text\":\"def\"}\n *         ]\n *       },\n *       {\"div\":\n *         [{\n *           label:\n *             [\n *               { '#text': 'def' },\n *             ],\n *         }],\n *       },\n *       {\"#text\":\" \"},\n *       {\"em\":\n *         [\n *           {\"#text\":\"ghi\"}\n *         ],\n *         \":@\": {\"@_class\":\"olx_description\"}\n *       },\n *       {\"em\":\n *         [\n *           {\"#text\":\"jkl\"}\n *         ]\n *       }\n *     ]\n *   }\n * @param {string[]} tagNames\n * @param {boolean} [recursive=false] - Whether to search recursively for child tags.\n *\n * @returns {boolean} whether node contains the specified child tags\n */\nexport function nodeContainsChildTags(node, tagNames, options = { recursive: false }) {\n  const subNodes = [];\n  flattenSubNodes(node, subNodes, options);\n  const res = subNodes.some(subNode => tagNames.includes(Object.keys(subNode)[0]));\n  return res;\n}\n\n/**\n * @param {object} node\n * @returns {string} the tag name of the node\n */\nexport function tagName(node) {\n  if (Array.isArray(node)) {\n    throw new TypeError('function tagName does not accept arrays as input');\n  }\n  return Object.keys(node).find(key => key.match(/^[a-zA-Z].*/));\n}\n\n/**\n * findNodesAndRemoveTheirParentNodes - given 'arrayOfNodes', an array that results from the\n * XMLParser, this looks for 'nodesToFind': specific child tags (e.g. 'label'), and removes\n * their parent tags (e.g. 'div') but keeps all their content one level higher.\n * The 'parentsToRemove' array should contain a list of parent tags that will be removed.\n *\n * For example, if you have a div containing a p that contains a label and an em, and you specify\n * 'label' as the nodeToFind and 'p' as the parentToRemove, then you will get a div containing a label and an em.\n * @param {object} { arrayOfNodes, nodesToFind, parentsToRemove }\n *\n * @returns {object} - an array of nodes\n */\nexport function findNodesAndRemoveTheirParentNodes({\n  arrayOfNodes,\n  nodesToFind,\n  parentsToRemove,\n}) {\n  const result = [];\n  arrayOfNodes.forEach((node) => {\n    const containsRelevantSubnodes = nodeContainsChildTags(node, nodesToFind);\n\n    if (!containsRelevantSubnodes || !parentsToRemove.includes(tagName(node))) {\n      result.push(node);\n    } else {\n      const subNodes = Object.values(node)[0];\n      result.push(...subNodes);\n    }\n  });\n  return result;\n}\n"],"mappings":"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"}