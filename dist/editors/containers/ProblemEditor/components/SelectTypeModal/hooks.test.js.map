{"version":3,"file":"hooks.test.js","names":["_react","_interopRequireDefault","require","_testUtils","_module","_interopRequireWildcard","_problem","_OLXParser","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","jest","mock","requireActual","useState","val","useEffect","fn","state","MockUseState","module","mockUpdateField","mockName","mockSelected","mockAdvancedSelected","mockSetSelected","mocksetBlockTitle","hook","describe","beforeEach","afterEach","restore","clearAllMocks","selectHooks","test","expect","selected","toEqual","ProblemTypeKeys","SINGLESELECT","expectedArg","mockVal","setSelected","setState","toHaveBeenCalledWith","onSelect","updateField","setBlockTitle","problemType","ADVANCED","rawOLX","AdvanceProblems","template","title","testOlXParser","OLXParser","ProblemTypes","_testOlXParser$getPar","getParsedOLXData","settings","testState","document","body","innerHTML","mockKeyUp","KeyboardEvent","mockKeyDown","cb","prereqs","useArrowNav","React","calls","toStrictEqual","dispatchEvent","TEXTINPUT","MULTISELECT","DROPDOWN","NUMERIC"],"sources":["../../../../../../src/editors/containers/ProblemEditor/components/SelectTypeModal/hooks.test.js"],"sourcesContent":["/* eslint-disable prefer-destructuring */\nimport React from 'react';\nimport { MockUseState } from '../../../../../testUtils';\nimport * as module from './hooks';\nimport { AdvanceProblems, ProblemTypeKeys, ProblemTypes } from '../../../../data/constants/problem';\nimport { OLXParser } from '../../data/OLXParser';\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  useState: (val) => ({ useState: val }),\n  useEffect: jest.fn(),\n}));\n\nconst state = new MockUseState(module);\nconst mockUpdateField = jest.fn().mockName('updateField');\nconst mockSelected = 'multiplechoiceresponse';\nconst mockAdvancedSelected = 'circuitschematic';\nconst mockSetSelected = jest.fn().mockName('setSelected');\nconst mocksetBlockTitle = jest.fn().mockName('setBlockTitle');\n\nlet hook;\n\ndescribe('SelectTypeModal hooks', () => {\n  beforeEach(() => {\n    state.mock();\n  });\n  afterEach(() => {\n    state.restore();\n    jest.clearAllMocks();\n  });\n\n  describe('selectHooks', () => {\n    beforeEach(() => {\n      hook = module.selectHooks();\n    });\n    test('selected defaults to SINGLESELECT', () => {\n      expect(hook.selected).toEqual(ProblemTypeKeys.SINGLESELECT);\n    });\n    test('setSelected sets state as expected', () => {\n      const expectedArg = 'neWvAl';\n      state.mockVal(state.keys.selected, 'mOcKvAl');\n      hook.setSelected(expectedArg);\n      expect(state.setState.selected).toHaveBeenCalledWith(expectedArg);\n    });\n  });\n\n  describe('onSelect', () => {\n    test('updateField is called with selected templated if selected is an Advanced Problem', () => {\n      module.onSelect({\n        selected: mockAdvancedSelected,\n        updateField: mockUpdateField,\n        setBlockTitle: mocksetBlockTitle,\n      })();\n      expect(mockUpdateField).toHaveBeenCalledWith({\n        problemType: ProblemTypeKeys.ADVANCED,\n        rawOLX: AdvanceProblems[mockAdvancedSelected].template,\n      });\n      expect(mocksetBlockTitle).toHaveBeenCalledWith(AdvanceProblems[mockAdvancedSelected].title);\n    });\n    test('updateField is called with selected on visual propblems', () => {\n      module.onSelect({ selected: mockSelected, updateField: mockUpdateField, setBlockTitle: mocksetBlockTitle })();\n      const testOlXParser = new OLXParser(ProblemTypes[mockSelected].template);\n      const { settings, ...testState } = testOlXParser.getParsedOLXData();\n      expect(mockUpdateField).toHaveBeenCalledWith({\n        ...testState,\n        rawOLX: ProblemTypes[mockSelected].template,\n      });\n      expect(mocksetBlockTitle).toHaveBeenCalledWith(ProblemTypes[mockSelected].title);\n    });\n  });\n\n  describe('useArrowNav', () => {\n    document.body.innerHTML = `\n      <div id=\"multiplechoiceresponse\" />\n      <div id=\"choiceresponse\" />\n      <div id=\"optionresponse\" />\n      <div id=\"numericalresponse\" />\n      <div id=\"stringresponse\" />\n    `;\n    const mockKeyUp = new KeyboardEvent('keydown', { key: 'ArrowUp' });\n    const mockKeyDown = new KeyboardEvent('keydown', { key: 'ArrowDown' });\n    let cb;\n    let prereqs;\n\n    describe('SINGLESELECT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.SINGLESELECT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.SINGLESELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.TEXTINPUT);\n      });\n      test('pressing down arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.SINGLESELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.MULTISELECT);\n      });\n    });\n    describe('MULTISELECT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.MULTISELECT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets SINGLESELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.MULTISELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.SINGLESELECT);\n      });\n      test('pressing down arrow sets DROPDOWN', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.MULTISELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.DROPDOWN);\n      });\n    });\n    describe('DROPDOWN', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.DROPDOWN, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.DROPDOWN, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.MULTISELECT);\n      });\n      test('pressing down arrow sets NUMERIC', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.DROPDOWN, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.NUMERIC);\n      });\n    });\n    describe('NUMERIC', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.NUMERIC, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets DROPDOWN', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.NUMERIC, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.DROPDOWN);\n      });\n      test('pressing down arrow sets TEXTINPUT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.NUMERIC, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.TEXTINPUT);\n      });\n    });\n    describe('TEXTINPUT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.TEXTINPUT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets NUMERIC', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.TEXTINPUT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.NUMERIC);\n      });\n      test('pressing down arrow sets SINGLESELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.TEXTINPUT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.SINGLESELECT);\n      });\n    });\n  });\n});\n"],"mappings":"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"}