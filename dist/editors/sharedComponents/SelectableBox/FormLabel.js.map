{"version":3,"file":"FormLabel.js","names":["_react","_interopRequireDefault","require","_propTypes","_classnames","_FormGroupContext","_constants","_excluded","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","sourceKeys","FormLabel","_ref","children","isInline","props","size","isControlGroup","getLabelProps","useFormGroupContext","className","classNames","FORM_CONTROL_SIZES","LARGE","SMALL","labelProps","componentType","React","createElement","SIZE_CHOICES","propTypes","PropTypes","string","node","isRequired","bool","oneOf","defaultProps","undefined","_default","exports"],"sources":["../../../../src/editors/sharedComponents/SelectableBox/FormLabel.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useFormGroupContext } from './FormGroupContext';\nimport { FORM_CONTROL_SIZES } from './constants';\n\nconst FormLabel = ({ children, isInline, ...props }) => {\n  const { size, isControlGroup, getLabelProps } = useFormGroupContext();\n  const className = classNames(\n    'pgn__form-label',\n    {\n      'pgn__form-label-inline': isInline,\n      'pgn__form-label-lg': size === FORM_CONTROL_SIZES.LARGE,\n      'pgn__form-label-sm': size === FORM_CONTROL_SIZES.SMALL,\n    },\n    props.className,\n  );\n  const labelProps = getLabelProps({ ...props, className });\n  const componentType = isControlGroup ? 'p' : 'label';\n  return React.createElement(componentType, labelProps, children);\n};\n\nconst SIZE_CHOICES = ['sm', 'lg'];\n\nFormLabel.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies whether the component should be displayed with inline styling. */\n  isInline: PropTypes.bool,\n  /** Specifies size of the component. */\n  size: PropTypes.oneOf(SIZE_CHOICES),\n};\n\nFormLabel.defaultProps = {\n  isInline: false,\n  size: undefined,\n  className: undefined,\n};\n\nexport default FormLabel;\n"],"mappings":"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"}