{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_reactRedux","_i18n","_paragon","_AnswerWidget","_SettingsWidget","_QuestionWidget","_EditorContainer","_redux","_RawEditor","_problem","_hooks","_messages","_ExplanationWidget","_hooks2","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","EditProblemView","_ref","problemType","problemState","assets","lmsEndpointUrl","returnUrl","analytics","intl","dispatch","useDispatch","editorRef","useRef","isAdvancedProblemType","ProblemTypeKeys","ADVANCED","isSaveWarningModalOpen","openSaveWarningModal","closeSaveWarningModal","saveWarningModalToggle","jsxs","getContent","children","jsx","AlertModal","title","formatMessage","messages","olxSettingDiscrepancyTitle","noAnswerTitle","isOpen","onClose","footerNode","ActionRow","Button","variant","onClick","FormattedMessage","saveWarningModalCancelButtonLabel","saveBlock","content","parseState","problem","isAdvanced","ref","destination","saveWarningModalSaveButtonLabel","olxSettingDiscrepancyBodyExplanation","Fragment","saveWarningModalBodyQuestion","noAnswerBodyExplanation","className","Container","fluid","lang","rawOLX","exports","defaultProps","propTypes","PropTypes","string","isRequired","any","shape","intlShape","mapStateToProps","state","selectors","app","completeState","_default","injectIntl","connect"],"sources":["../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/index.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport { injectIntl, intlShape, FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport {\n  Container,\n  Button,\n  AlertModal,\n  ActionRow,\n} from '@edx/paragon';\nimport AnswerWidget from './AnswerWidget';\nimport SettingsWidget from './SettingsWidget';\nimport QuestionWidget from './QuestionWidget';\nimport EditorContainer from '../../../EditorContainer';\nimport { selectors } from '../../../../data/redux';\nimport RawEditor from '../../../../sharedComponents/RawEditor';\nimport { ProblemTypeKeys } from '../../../../data/constants/problem';\n\nimport { parseState, saveWarningModalToggle, getContent } from './hooks';\nimport './index.scss';\nimport messages from './messages';\n\nimport ExplanationWidget from './ExplanationWidget';\nimport { saveBlock } from '../../../../hooks';\n\nexport const EditProblemView = ({\n  // redux\n  problemType,\n  problemState,\n  assets,\n  lmsEndpointUrl,\n  returnUrl,\n  analytics,\n  // injected\n  intl,\n}) => {\n  const dispatch = useDispatch();\n  const editorRef = useRef(null);\n  const isAdvancedProblemType = problemType === ProblemTypeKeys.ADVANCED;\n  const { isSaveWarningModalOpen, openSaveWarningModal, closeSaveWarningModal } = saveWarningModalToggle();\n\n  return (\n    <EditorContainer\n      getContent={() => getContent({\n        problemState,\n        openSaveWarningModal,\n        isAdvancedProblemType,\n        editorRef,\n        assets,\n        lmsEndpointUrl,\n      })}\n    >\n      <AlertModal\n        title={isAdvancedProblemType ? (\n          intl.formatMessage(messages.olxSettingDiscrepancyTitle)\n        ) : intl.formatMessage(messages.noAnswerTitle)}\n        isOpen={isSaveWarningModalOpen}\n        onClose={closeSaveWarningModal}\n        footerNode={(\n          <ActionRow>\n            <Button variant=\"tertiary\" onClick={closeSaveWarningModal}>\n              <FormattedMessage {...messages.saveWarningModalCancelButtonLabel} />\n            </Button>\n            <Button\n              onClick={() => saveBlock({\n                content: parseState({\n                  problem: problemState,\n                  isAdvanced: isAdvancedProblemType,\n                  ref: editorRef,\n                  assets,\n                  lmsEndpointUrl,\n                })(),\n                destination: returnUrl,\n                dispatch,\n                analytics,\n              })}\n            >\n              <FormattedMessage {...messages.saveWarningModalSaveButtonLabel} />\n            </Button>\n          </ActionRow>\n        )}\n      >\n        {isAdvancedProblemType ? (\n          <FormattedMessage {...messages.olxSettingDiscrepancyBodyExplanation} />\n        ) : (\n          <>\n            <div>\n              <FormattedMessage {...messages.saveWarningModalBodyQuestion} />\n            </div>\n            <div>\n              <FormattedMessage {...messages.noAnswerBodyExplanation} />\n            </div>\n          </>\n        )}\n      </AlertModal>\n      <div className=\"editProblemView d-flex flex-row flex-nowrap justify-content-end\">\n        {isAdvancedProblemType ? (\n          <Container fluid className=\"advancedEditorTopMargin p-0\">\n            <RawEditor editorRef={editorRef} lang=\"xml\" content={problemState.rawOLX} />\n          </Container>\n        ) : (\n          <span className=\"flex-grow-1 mb-5\">\n            <QuestionWidget />\n            <ExplanationWidget />\n            <AnswerWidget problemType={problemType} />\n          </span>\n        )}\n        <span className=\"editProblemView-settingsColumn\">\n          <SettingsWidget problemType={problemType} />\n        </span>\n      </div>\n    </EditorContainer>\n  );\n};\n\nEditProblemView.defaultProps = {\n  assets: null,\n  lmsEndpointUrl: null,\n};\n\nEditProblemView.propTypes = {\n  problemType: PropTypes.string.isRequired,\n  // eslint-disable-next-line\n  problemState: PropTypes.any.isRequired,\n  assets: PropTypes.shape({}),\n  analytics: PropTypes.shape({}).isRequired,\n  lmsEndpointUrl: PropTypes.string,\n  returnUrl: PropTypes.string.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  assets: selectors.app.assets(state),\n  analytics: selectors.app.analytics(state),\n  lmsEndpointUrl: selectors.app.lmsEndpointUrl(state),\n  returnUrl: selectors.app.returnUrl(state),\n  problemType: selectors.problem.problemType(state),\n  problemState: selectors.problem.completeState(state),\n});\n\nexport default injectIntl(connect(mapStateToProps)(EditProblemView));\n"],"mappings":"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"}