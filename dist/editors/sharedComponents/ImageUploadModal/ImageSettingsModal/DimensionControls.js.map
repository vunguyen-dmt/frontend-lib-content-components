{"version":3,"file":"DimensionControls.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_icons","_i18n","_hooks","_messages","_jsxRuntime","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","DimensionControls","_ref","isLocked","lock","setHeight","setWidth","unlock","updateDimensions","intl","jsxs","Form","Group","children","jsx","Label","as","FormattedMessage","messages","imageDimensionsLabel","className","Control","width","onChange","hooks","onInputChange","onBlur","floatingLabel","formatMessage","widthFloatingLabel","height","heightFloatingLabel","IconButton","alt","unlockDimensionsLabel","lockDimensionsLabel","iconAs","Icon","src","Locked","Unlocked","onClick","exports","defaultProps","propTypes","PropTypes","shape","string","func","isRequired","bool","intlShape","_default","injectIntl"],"sources":["../../../../../src/editors/sharedComponents/ImageUploadModal/ImageSettingsModal/DimensionControls.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Icon,\n  IconButton,\n} from '@openedx/paragon';\nimport {\n  Locked,\n  Unlocked,\n} from '@openedx/paragon/icons';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport hooks from './hooks';\nimport messages from './messages';\n\n/**\n * Wrapper for image dimension inputs and the lock checkbox.\n * @param {bool} isLocked - are dimensions locked\n * @param {func} lock - lock dimensions\n * @param {func} setHeight - updates dimensions based on new height\n * @param {func} setWidth - updates dimensions based on new width\n * @param {func} unlock - unlock dimensions\n * @param {func} updateDimensions - update dimensions callback\n * @param {obj} value - local dimension values { height, width }\n */\nexport const DimensionControls = ({\n  isLocked,\n  lock,\n  setHeight,\n  setWidth,\n  unlock,\n  updateDimensions,\n  value,\n  // inject\n  intl,\n}) => ((value !== null) && (\n  <Form.Group>\n    <Form.Label as=\"h4\">\n      <FormattedMessage {...messages.imageDimensionsLabel} />\n    </Form.Label>\n    <div className=\"mt-4.5\">\n      <Form.Control\n        className=\"dimension-input\"\n        value={value.width}\n        onChange={hooks.onInputChange(setWidth)}\n        onBlur={updateDimensions}\n        floatingLabel={intl.formatMessage(messages.widthFloatingLabel)}\n      />\n      <Form.Control\n        className=\"dimension-input\"\n        value={value.height}\n        onChange={hooks.onInputChange(setHeight)}\n        onBlur={updateDimensions}\n        floatingLabel={intl.formatMessage(messages.heightFloatingLabel)}\n      />\n      <IconButton\n        className=\"d-inline-block\"\n        alt={\n          isLocked\n            ? intl.formatMessage(messages.unlockDimensionsLabel)\n            : intl.formatMessage(messages.lockDimensionsLabel)\n        }\n        iconAs={Icon}\n        src={isLocked ? Locked : Unlocked}\n        onClick={isLocked ? unlock : lock}\n      />\n    </div>\n  </Form.Group>\n));\nDimensionControls.defaultProps = {\n  value: {\n    height: '100',\n    width: '100',\n  },\n};\nDimensionControls.propTypes = ({\n  value: PropTypes.shape({\n    height: PropTypes.string,\n    width: PropTypes.string,\n  }),\n  setHeight: PropTypes.func.isRequired,\n  setWidth: PropTypes.func.isRequired,\n  isLocked: PropTypes.bool.isRequired,\n  lock: PropTypes.func.isRequired,\n  unlock: PropTypes.func.isRequired,\n  updateDimensions: PropTypes.func.isRequired,\n  // inject\n  intl: intlShape.isRequired,\n});\n\nexport default injectIntl(DimensionControls);\n"],"mappings":"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"}