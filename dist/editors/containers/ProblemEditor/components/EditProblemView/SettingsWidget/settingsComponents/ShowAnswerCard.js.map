{"version":3,"file":"ShowAnswerCard.js","names":["_react","_interopRequireDefault","require","_propTypes","_reactRedux","_i18n","_paragon","_SettingsOption","_problem","_redux","_messages","_hooks","_jsxRuntime","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ShowAnswerCard","_ref","showAnswer","updateSettings","defaultValue","intl","studioEndpointUrl","learningContextId","isLibrary","handleShowAnswerChange","handleAttemptsChange","showAttempts","useAnswerSettings","showAnswerSection","jsxs","Fragment","children","jsx","className","FormattedMessage","messages","showAnswerSettingText","Hyperlink","destination","advancedSettingsLinkText","Form","Group","Control","as","on","onChange","values","ShowAnswerTypesKeys","map","answerType","optionDisplayName","ShowAnswerTypes","defaultMessage","formatMessage","type","afterAttempts","floatingLabel","showAnswerAttemptsInputLabel","title","showAnswerSettingsTitle","summary","exports","propTypes","intlShape","isRequired","PropTypes","any","solutionExplanation","string","func","bool","defaultProps","mapStateToProps","state","selectors","app","mapDispatchToProps","_default","injectIntl","connect"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/ShowAnswerCard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport { Form, Hyperlink } from '@edx/paragon';\nimport SettingsOption from '../SettingsOption';\nimport { ShowAnswerTypes, ShowAnswerTypesKeys } from '../../../../../../data/constants/problem';\nimport { selectors } from '../../../../../../data/redux';\nimport messages from '../messages';\nimport { useAnswerSettings } from '../hooks';\n\nexport const ShowAnswerCard = ({\n  showAnswer,\n  updateSettings,\n  defaultValue,\n  // inject\n  intl,\n  // redux\n  studioEndpointUrl,\n  learningContextId,\n  isLibrary,\n}) => {\n  const {\n    handleShowAnswerChange,\n    handleAttemptsChange,\n    showAttempts,\n  } = useAnswerSettings(showAnswer, updateSettings);\n\n  const showAnswerSection = (\n    <>\n      <div className=\"pb-2\">\n        <span>\n          <FormattedMessage {...messages.showAnswerSettingText} />\n        </span>\n      </div>\n      {!isLibrary && (\n        <div className=\"pb-4\">\n          <Hyperlink destination={`${studioEndpointUrl}/settings/advanced/${learningContextId}#showanswer`} target=\"_blank\">\n            <FormattedMessage {...messages.advancedSettingsLinkText} />\n          </Hyperlink>\n        </div>\n      )}\n      <Form.Group className=\"pb-0 mb-0\">\n        <Form.Control\n          as=\"select\"\n          value={showAnswer.on}\n          onChange={handleShowAnswerChange}\n        >\n          {Object.values(ShowAnswerTypesKeys).map((answerType) => {\n            let optionDisplayName = ShowAnswerTypes[answerType];\n            if (answerType === defaultValue) {\n              optionDisplayName = { ...optionDisplayName, defaultMessage: `${optionDisplayName.defaultMessage} (${intl.formatMessage(messages.default)})` };\n            }\n            return (\n              <option\n                key={answerType}\n                value={answerType}\n              >\n                {intl.formatMessage(optionDisplayName)}\n              </option>\n            );\n          })}\n        </Form.Control>\n      </Form.Group>\n      {showAttempts\n        && (\n        <Form.Group className=\"pb-0 mb-0 mt-4\">\n          <Form.Control\n            type=\"number\"\n            value={showAnswer.afterAttempts}\n            onChange={handleAttemptsChange}\n            floatingLabel={intl.formatMessage(messages.showAnswerAttemptsInputLabel)}\n          />\n        </Form.Group>\n        )}\n    </>\n  );\n\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.showAnswerSettingsTitle)}\n      summary={intl.formatMessage(ShowAnswerTypes[showAnswer.on])}\n    >\n      {showAnswerSection}\n    </SettingsOption>\n  );\n};\n\nShowAnswerCard.propTypes = {\n  intl: intlShape.isRequired,\n  // eslint-disable-next-line\n  showAnswer: PropTypes.any.isRequired,\n  solutionExplanation: PropTypes.string,\n  updateSettings: PropTypes.func.isRequired,\n  studioEndpointUrl: PropTypes.string.isRequired,\n  learningContextId: PropTypes.string,\n  isLibrary: PropTypes.bool.isRequired,\n  defaultValue: PropTypes.string,\n};\nShowAnswerCard.defaultProps = {\n  solutionExplanation: '',\n  learningContextId: null,\n  defaultValue: 'finished',\n};\n\nexport const mapStateToProps = (state) => ({\n  studioEndpointUrl: selectors.app.studioEndpointUrl(state),\n  learningContextId: selectors.app.learningContextId(state),\n  isLibrary: selectors.app.isLibrary(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ShowAnswerCard));\n"],"mappings":"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"}