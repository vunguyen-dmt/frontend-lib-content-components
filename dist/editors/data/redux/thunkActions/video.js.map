{"version":3,"file":"video.js","names":["_lodashEs","_interopRequireWildcard","require","_2","_utils","requests","_module","_hooks","_api","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","loadVideoData","selectedVideoId","selectedVideoUrl","dispatch","getState","state","blockValueData","app","blockValue","data","rawVideoData","metadata","rawVideos","values","selectors","videos","undefined","selectedVideo","_","find","video","edx_video_id","thumbnail","course_video_image_url","duration","transcriptsFromSelected","transcripts","selectedVideoTranscriptUrls","transcript_urls","courseData","courseDetails","studioView","html","blockId","startsWith","content","videoId","videoUrl","fallbackVideos","module","determineVideoSources","edxVideoId","youtubeId","youtube_id_1_0","html5Sources","html5_sources","videoSourceUrl","licenseType","licenseOptions","parseLicense","licenseData","level","console","log","parseTranscripts","transcriptsData","courseLicenseType","courseLicenseDetails","license","allowVideoSharing","parseVideoSharingSetting","courseSetting","video_sharing_options","blockSetting","public_access","actions","load","videoSource","allowVideoDownloads","download_video","videoSharingLearnMoreLink","video_sharing_doc_url","videoSharingEnabledForCourse","video_sharing_enabled","allowTranscriptDownloads","download_track","showTranscriptByDefault","show_captions","startTime","valueFromDuration","start_time","stopTime","end_time","total","handout","licenseDetails","attribution","by","noncommercial","nc","noDerivatives","nd","shareAlike","sa","fetchVideoFeatures","onSuccess","response","updateField","allowThumbnailUpload","videoSharingEnabledForAll","videoSharingEnabled","youTubeId","parseYoutubeId","checkTranscriptsForImport","command","allowTranscriptImport","exports","_ref","youtubeUrl","Array","isArray","slice","_ref2","value","_ref3","cleanedStr","replace","startString","endString","transcriptsJson","substring","indexOf","length","transcriptsObj","JSON","parse","keys","error","SyntaxError","message","_ref4","metadataArr","split","forEach","arr","parsedStr","includes","colonIndex","lastIndexOf","trim","optionStr","options","version","defaultVersion","option","key","toLowerCase","saveVideoData","videoSettings","uploadThumbnail","_ref5","emptyCanvas","studioEndpointUrl","thumbnailUrl","image_url","onFailure","UploadFailure","uploadHandout","_ref6","file","uploadAsset","asset","url","importTranscript","transcriptsPlaceholderRemoved","isEmpty","removeItemOnce","uploadTranscript","_ref7","language","transcript","deleteTranscript","_ref8","updatedTranscripts","filter","langCode","updateTranscriptLanguage","_ref9","newLanguageCode","languageBeforeChange","getTranscriptDownloadUrl","getTranscriptFile","File","Blob","type","newTranscripts","push","replaceTranscript","_ref10","newFile","newFilename","filename","uploadVideo","_ref11","supportedFiles","setLoadSpinner","postUploadRedirect","files","fileData","file_name","name","content_type","Promise","all","map","fileObj","fileName","uploadUrl","upload_url","uploadFile","fetch","method","headers","multipart","body","then","resp","ok","Error","catch","_default"],"sources":["../../../../../src/editors/data/redux/thunkActions/video.js"],"sourcesContent":["/* eslint-disable import/no-cycle */\nimport _, { isEmpty } from 'lodash-es';\nimport { actions, selectors } from '..';\nimport { removeItemOnce } from '../../../utils';\nimport * as requests from './requests';\nimport * as module from './video';\nimport { valueFromDuration } from '../../../containers/VideoEditor/components/VideoSettingsModal/components/DurationWidget/hooks';\nimport { parseYoutubeId } from '../../services/cms/api';\n\nexport const loadVideoData = (selectedVideoId, selectedVideoUrl) => (dispatch, getState) => {\n  const state = getState();\n  const blockValueData = state.app.blockValue.data;\n  let rawVideoData = blockValueData.metadata ? blockValueData.metadata : {};\n  const rawVideos = Object.values(selectors.app.videos(state));\n  if (selectedVideoId !== undefined && selectedVideoId !== null) {\n    const selectedVideo = _.find(rawVideos, video => {\n      if (_.has(video, 'edx_video_id')) {\n        return video.edx_video_id === selectedVideoId;\n      }\n      return false;\n    });\n\n    if (selectedVideo !== undefined && selectedVideo !== null) {\n      rawVideoData = {\n        edx_video_id: selectedVideo.edx_video_id,\n        thumbnail: selectedVideo.course_video_image_url,\n        duration: selectedVideo.duration,\n        transcriptsFromSelected: selectedVideo.transcripts,\n        selectedVideoTranscriptUrls: selectedVideo.transcript_urls,\n      };\n    }\n  }\n\n  const courseData = state.app.courseDetails.data ? state.app.courseDetails.data : {};\n  let studioView = state.app.studioView?.data?.html;\n  if (state.app.blockId.startsWith('lb:')) {\n    studioView = state.app.studioView?.data?.content;\n  }\n\n  const {\n    videoId,\n    videoUrl,\n    fallbackVideos,\n  } = module.determineVideoSources({\n    edxVideoId: rawVideoData.edx_video_id,\n    youtubeId: rawVideoData.youtube_id_1_0,\n    html5Sources: rawVideoData.html5_sources,\n  });\n\n  // Use the selected video url first\n  const videoSourceUrl = selectedVideoUrl != null ? selectedVideoUrl : videoUrl;\n  const [licenseType, licenseOptions] = module.parseLicense({ licenseData: studioView, level: 'block' });\n  // eslint-disable-next-line no-console\n  console.log(licenseType);\n  const transcripts = rawVideoData.transcriptsFromSelected ? rawVideoData.transcriptsFromSelected\n    : module.parseTranscripts({ transcriptsData: studioView });\n\n  const [courseLicenseType, courseLicenseDetails] = module.parseLicense({\n    licenseData: courseData.license,\n    level: 'course',\n  });\n  const allowVideoSharing = module.parseVideoSharingSetting({\n    courseSetting: blockValueData?.video_sharing_options,\n    blockSetting: rawVideoData.public_access,\n  });\n  dispatch(actions.video.load({\n    videoSource: videoSourceUrl || '',\n    videoId,\n    fallbackVideos,\n    allowVideoDownloads: rawVideoData.download_video,\n    allowVideoSharing,\n    videoSharingLearnMoreLink: blockValueData?.video_sharing_doc_url,\n    videoSharingEnabledForCourse: blockValueData?.video_sharing_enabled,\n    transcripts,\n    selectedVideoTranscriptUrls: rawVideoData.selectedVideoTranscriptUrls,\n    allowTranscriptDownloads: rawVideoData.download_track,\n    showTranscriptByDefault: rawVideoData.show_captions,\n    duration: { // TODO duration is not always sent so they should be calculated.\n      startTime: valueFromDuration(rawVideoData.start_time || '00:00:00'),\n      stopTime: valueFromDuration(rawVideoData.end_time || '00:00:00'),\n      total: rawVideoData.duration || 0, // TODO can we get total duration? if not, probably dropping from widget\n    },\n    handout: rawVideoData.handout,\n    licenseType,\n    licenseDetails: {\n      attribution: licenseOptions.by,\n      noncommercial: licenseOptions.nc,\n      noDerivatives: licenseOptions.nd,\n      shareAlike: licenseOptions.sa,\n    },\n    courseLicenseType,\n    courseLicenseDetails: {\n      attribution: courseLicenseDetails.by,\n      noncommercial: courseLicenseDetails.nc,\n      noDerivatives: courseLicenseDetails.nd,\n      shareAlike: courseLicenseDetails.sa,\n    },\n    thumbnail: rawVideoData.thumbnail,\n  }));\n  dispatch(requests.fetchVideoFeatures({\n    onSuccess: (response) => dispatch(actions.video.updateField({\n      allowThumbnailUpload: response.data.allowThumbnailUpload,\n      videoSharingEnabledForAll: response.data.videoSharingEnabled,\n    })),\n  }));\n  const youTubeId = parseYoutubeId(videoSourceUrl);\n  if (youTubeId) {\n    dispatch(requests.checkTranscriptsForImport({\n      videoId,\n      youTubeId,\n      onSuccess: (response) => {\n        if (response.data.command === 'import') {\n          dispatch(actions.video.updateField({\n            allowTranscriptImport: true,\n          }));\n        }\n      },\n    }));\n  }\n};\n\nexport const determineVideoSources = ({\n  edxVideoId,\n  youtubeId,\n  html5Sources,\n}) => {\n  const youtubeUrl = `https://youtu.be/${youtubeId}`;\n  let videoUrl;\n  let fallbackVideos;\n  if (youtubeId) {\n    [videoUrl, fallbackVideos] = [youtubeUrl, html5Sources];\n  } else if (Array.isArray(html5Sources) && html5Sources[0]) {\n    [videoUrl, fallbackVideos] = [html5Sources[0], html5Sources.slice(1)];\n  }\n  return {\n    videoId: edxVideoId || '',\n    videoUrl: videoUrl || '',\n    fallbackVideos: fallbackVideos || [],\n  };\n};\n\nexport const parseVideoSharingSetting = ({ courseSetting, blockSetting }) => {\n  switch (courseSetting) {\n    case 'all-on':\n      return { level: 'course', value: true };\n    case 'all-off':\n      return { level: 'course', value: false };\n    case 'per-video':\n      return { level: 'block', value: blockSetting };\n    default:\n      return { level: 'block', value: blockSetting };\n  }\n};\n\nexport const parseTranscripts = ({ transcriptsData }) => {\n  if (!transcriptsData) {\n    return [];\n  }\n  const cleanedStr = transcriptsData.replace(/&#34;/g, '\"');\n  const startString = '\"transcripts\": ';\n  const endString = ', \"youtube_id_0_75\": ';\n  const transcriptsJson = cleanedStr.substring(\n    cleanedStr.indexOf(startString) + startString.length,\n    cleanedStr.indexOf(endString),\n  );\n  // const transcriptsObj = JSON.parse(transcriptsJson);\n  try {\n    const transcriptsObj = JSON.parse(transcriptsJson);\n    return Object.keys(transcriptsObj.value);\n  } catch (error) {\n    if (error instanceof SyntaxError) {\n      // eslint-disable-next-line no-console\n      console.error('Invalid JSON:', error.message);\n    } else {\n      throw error;\n    }\n    return [];\n  }\n};\n\n// partially copied from frontend-app-learning/src/courseware/course/course-license/CourseLicense.jsx\nexport const parseLicense = ({ licenseData, level }) => {\n  if (!licenseData) {\n    return [null, {}];\n  }\n  let license = licenseData;\n  if (level === 'block') {\n    const metadataArr = licenseData.split('data-metadata');\n    metadataArr.forEach(arr => {\n      const parsedStr = arr.replace(/&#34;/g, '\"');\n      if (parsedStr.includes('license')) {\n        license = parsedStr.substring(parsedStr.indexOf('\"value\"'), parsedStr.indexOf(', \"type\"')).replace(/\"value\": |\"/g, '');\n      }\n    });\n  }\n  if (!license || license.includes('null')) {\n    return [null, {}];\n  }\n  if (license === 'all-rights-reserved') {\n    // no options, so the entire thing is the license type\n    return [license, {}];\n  }\n  // Search for a colon character denoting the end\n  // of the license type and start of the options\n  const colonIndex = license.lastIndexOf(':');\n  // Split the license on the colon\n  const licenseType = license.slice(0, colonIndex).trim();\n  const optionStr = license.slice(colonIndex + 1).trim();\n  const options = {};\n  let version = '';\n\n  // Set the defaultVersion to 4.0\n  const defaultVersion = '4.0';\n  optionStr.split(' ').forEach(option => {\n    // Split the option into key and value\n    // Default the value to `true` if no value\n    let key = '';\n    let value = '';\n    if (option.indexOf('=') !== -1) {\n      [key, value] = option.split('=');\n    } else {\n      key = option;\n      value = true;\n    }\n\n    // Check for version\n    if (key === 'ver') {\n      version = value;\n    } else {\n      // Set the option key to lowercase to make\n      // it easier to query\n      options[key.toLowerCase()] = value;\n    }\n  });\n\n  // Set the version to whatever was included,\n  // using `defaultVersion` as a fallback if unset\n  version = version || defaultVersion;\n\n  return [licenseType, options, version];\n};\n\nexport const saveVideoData = () => (dispatch, getState) => {\n  const state = getState();\n  return selectors.video.videoSettings(state);\n};\n\nexport const uploadThumbnail = ({ thumbnail, emptyCanvas }) => (dispatch, getState) => {\n  const state = getState();\n  const { videoId } = state.video;\n  const { studioEndpointUrl } = state.app;\n  dispatch(requests.uploadThumbnail({\n    thumbnail,\n    videoId,\n    onSuccess: (response) => {\n      let thumbnailUrl;\n      if (response.data.image_url.startsWith('/')) {\n        // in local environments, image_url is a relative path\n        thumbnailUrl = studioEndpointUrl + response.data.image_url;\n      } else {\n        // in stage and production, image_url is an absolute path to the image\n        thumbnailUrl = response.data.image_url;\n      }\n      if (!emptyCanvas) {\n        dispatch(actions.video.updateField({\n          thumbnail: thumbnailUrl,\n        }));\n      }\n    },\n    // eslint-disable-next-line no-console\n    onFailure: (e) => console.log({ UploadFailure: e }, 'Resampling thumbnail upload'),\n  }));\n};\n\n// Handout Thunks:\n\nexport const uploadHandout = ({ file }) => (dispatch) => {\n  dispatch(requests.uploadAsset({\n    asset: file,\n    onSuccess: (response) => {\n      const handout = response.data.asset.url;\n      dispatch(actions.video.updateField({ handout }));\n    },\n  }));\n};\n\n// Transcript Thunks:\n\nexport const importTranscript = () => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoSource } = state.video;\n  // Remove the placeholder '' from the unset language from the list of transcripts.\n  const transcriptsPlaceholderRemoved = isEmpty(transcripts) ? transcripts : removeItemOnce(transcripts, '');\n\n  dispatch(requests.importTranscript({\n    youTubeId: parseYoutubeId(videoSource),\n    onSuccess: (response) => {\n      dispatch(actions.video.updateField({\n        transcripts: [\n          ...transcriptsPlaceholderRemoved,\n          'en'],\n      }));\n\n      if (selectors.video.videoId(state) === '') {\n        dispatch(actions.video.updateField({\n          videoId: response.data.edx_video_id,\n        }));\n      }\n    },\n  }));\n};\n\nexport const uploadTranscript = ({ language, file }) => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoId } = state.video;\n  // Remove the placeholder '' from the unset language from the list of transcripts.\n  const transcriptsPlaceholderRemoved = isEmpty(transcripts) ? transcripts : removeItemOnce(transcripts, '');\n  dispatch(requests.uploadTranscript({\n    language,\n    videoId,\n    transcript: file,\n    onSuccess: (response) => {\n      // if we aren't replacing, add the language to the redux store.\n      if (!transcriptsPlaceholderRemoved.includes(language)) {\n        dispatch(actions.video.updateField({\n          transcripts: [\n            ...transcriptsPlaceholderRemoved,\n            language],\n        }));\n      }\n\n      if (selectors.video.videoId(state) === '') {\n        dispatch(actions.video.updateField({\n          videoId: response.data.edx_video_id,\n        }));\n      }\n    },\n  }));\n};\n\nexport const deleteTranscript = ({ language }) => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoId } = state.video;\n  dispatch(requests.deleteTranscript({\n    language,\n    videoId,\n    onSuccess: () => {\n      const updatedTranscripts = transcripts.filter((langCode) => langCode !== language);\n      dispatch(actions.video.updateField({ transcripts: updatedTranscripts }));\n    },\n  }));\n};\n\nexport const updateTranscriptLanguage = ({ newLanguageCode, languageBeforeChange }) => (dispatch, getState) => {\n  const state = getState();\n  const { video: { transcripts, videoId } } = state;\n  selectors.video.getTranscriptDownloadUrl(state);\n  dispatch(requests.getTranscriptFile({\n    videoId,\n    language: languageBeforeChange,\n    onSuccess: (response) => {\n      dispatch(requests.updateTranscriptLanguage({\n        languageBeforeChange,\n        file: new File([new Blob([response.data], { type: 'text/plain' })], `${videoId}_${newLanguageCode}.srt`, { type: 'text/plain' }),\n        newLanguageCode,\n        videoId,\n        onSuccess: () => {\n          const newTranscripts = transcripts\n            .filter(transcript => transcript !== languageBeforeChange);\n          newTranscripts.push(newLanguageCode);\n          dispatch(actions.video.updateField({ transcripts: newTranscripts }));\n        },\n      }));\n    },\n  }));\n};\n\nexport const replaceTranscript = ({ newFile, newFilename, language }) => (dispatch, getState) => {\n  const state = getState();\n  const { videoId } = state.video;\n  dispatch(requests.deleteTranscript({\n    language,\n    videoId,\n    onSuccess: () => {\n      dispatch(uploadTranscript({ language, file: newFile, filename: newFilename }));\n    },\n  }));\n};\n\nexport const uploadVideo = ({ supportedFiles, setLoadSpinner, postUploadRedirect }) => (dispatch) => {\n  const data = { files: [] };\n  setLoadSpinner(true);\n  supportedFiles.forEach((file) => {\n    const fileData = file.get('file');\n    data.files.push({\n      file_name: fileData.name,\n      content_type: fileData.type,\n    });\n  });\n  dispatch(requests.uploadVideo({\n    data,\n    onSuccess: async (response) => {\n      const { files } = response.data;\n      await Promise.all(Object.values(files).map(async (fileObj) => {\n        const fileName = fileObj.file_name;\n        const edxVideoId = fileObj.edx_video_id;\n        const uploadUrl = fileObj.upload_url;\n        const uploadFile = supportedFiles.find((file) => file.get('file').name === fileName);\n        if (!uploadFile) {\n          // eslint-disable-next-line no-console\n          console.error(`Could not find file object with name \"${fileName}\" in supportedFiles array.`);\n          return;\n        }\n        const file = uploadFile.get('file');\n        await fetch(uploadUrl, {\n          method: 'PUT',\n          headers: {\n            'Content-Disposition': `attachment; filename=\"${file.name}\"`,\n            'Content-Type': file.type,\n          },\n          multipart: false,\n          body: file,\n        })\n          .then((resp) => {\n            if (!resp.ok) {\n              throw new Error('Failed to connect with server');\n            }\n            postUploadRedirect(edxVideoId);\n          })\n          // eslint-disable-next-line no-console\n          .catch((error) => console.error('Error uploading file:', error));\n      }));\n      setLoadSpinner(false);\n    },\n  }));\n};\n\nexport default {\n  loadVideoData,\n  determineVideoSources,\n  parseLicense,\n  saveVideoData,\n  uploadThumbnail,\n  importTranscript,\n  uploadTranscript,\n  deleteTranscript,\n  updateTranscriptLanguage,\n  replaceTranscript,\n  uploadHandout,\n  uploadVideo,\n};\n"],"mappings":"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"}