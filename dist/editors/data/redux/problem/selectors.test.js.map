{"version":3,"file":"selectors.test.js","names":["_utils","require","selectors","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","jest","mock","createSelector","fn","preSelectors","cb","testState","some","testValue","describe","problemState","simpleSelectors","it","expect","problem","toEqual","testSimpleSelector","test","simpleKeys","keyStore","problemType","answers","correctAnswerCount","settings","question","defaultSettings","map","completeState"],"sources":["../../../../../src/editors/data/redux/problem/selectors.test.js"],"sourcesContent":["// import * in order to mock in-file references\nimport { keyStore } from '../../../utils';\nimport * as selectors from './selectors';\n\njest.mock('reselect', () => ({\n  createSelector: jest.fn((preSelectors, cb) => ({ preSelectors, cb })),\n}));\n\nconst testState = { some: 'arbitraryValue' };\nconst testValue = 'my VALUE';\n\ndescribe('problem selectors unit tests', () => {\n  const {\n    problemState,\n    simpleSelectors,\n  } = selectors;\n  describe('problemState', () => {\n    it('returns the problem data', () => {\n      expect(problemState({ ...testState, problem: testValue })).toEqual(testValue);\n    });\n  });\n  describe('simpleSelectors', () => {\n    const testSimpleSelector = (key) => {\n      test(`${key} simpleSelector returns its value from the problem store`, () => {\n        const { preSelectors, cb } = simpleSelectors[key];\n        expect(preSelectors).toEqual([problemState]);\n        expect(cb({ ...testState, [key]: testValue })).toEqual(testValue);\n      });\n    };\n    const simpleKeys = keyStore(simpleSelectors);\n    describe('simple selectors link their values from problem store', () => {\n      [\n        simpleKeys.problemType,\n        simpleKeys.answers,\n        simpleKeys.correctAnswerCount,\n        simpleKeys.settings,\n        simpleKeys.question,\n        simpleKeys.defaultSettings,\n      ].map(testSimpleSelector);\n    });\n    test('simple selector completeState equals the entire state', () => {\n      const { preSelectors, cb } = simpleSelectors[simpleKeys.completeState];\n      expect(preSelectors).toEqual([problemState]);\n      expect(cb({\n        ...testState,\n        [simpleKeys.completeState]: testValue,\n      })).toEqual({\n        ...testState,\n        [simpleKeys.completeState]: testValue,\n      });\n    });\n  });\n});\n"],"mappings":"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"}