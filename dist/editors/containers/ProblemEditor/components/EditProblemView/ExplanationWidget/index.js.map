{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_propTypes","_reactRedux","_i18n","_redux","_messages","_TinyMceWidget","_hooks","_jsxRuntime","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ExplanationWidget","_ref","settings","intl","editorRef","refReady","setEditorRef","prepareEditorRef","jsxs","className","children","jsx","FormattedMessage","messages","solutionWidgetTitle","solutionDescriptionText","id","editorType","editorContentHtml","solutionExplanation","minHeight","placeholder","formatMessage","solutionPlaceholder","exports","propTypes","PropTypes","any","isRequired","intlShape","mapStateToProps","state","selectors","problem","_default","injectIntl","connect"],"sources":["../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/ExplanationWidget/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport { selectors } from '../../../../../data/redux';\nimport messages from './messages';\n\nimport TinyMceWidget from '../../../../../sharedComponents/TinyMceWidget';\nimport { prepareEditorRef } from '../../../../../sharedComponents/TinyMceWidget/hooks';\n\nexport const ExplanationWidget = ({\n  // redux\n  settings,\n  // injected\n  intl,\n}) => {\n  const { editorRef, refReady, setEditorRef } = prepareEditorRef();\n  if (!refReady) { return null; }\n  return (\n    <div className=\"tinyMceWidget mt-4 text-primary-500\">\n      <div className=\"h4 mb-3\">\n        <FormattedMessage {...messages.solutionWidgetTitle} />\n      </div>\n      <div className=\"small mb-3\">\n        <FormattedMessage {...messages.solutionDescriptionText} />\n      </div>\n      <TinyMceWidget\n        id=\"solution\"\n        editorType=\"solution\"\n        editorRef={editorRef}\n        editorContentHtml={settings?.solutionExplanation}\n        setEditorRef={setEditorRef}\n        minHeight={150}\n        placeholder={intl.formatMessage(messages.solutionPlaceholder)}\n      />\n    </div>\n  );\n};\n\nExplanationWidget.propTypes = {\n  // redux\n  // eslint-disable-next-line\n  settings: PropTypes.any.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\nexport const mapStateToProps = (state) => ({\n  settings: selectors.problem.settings(state),\n});\n\nexport default injectIntl(connect(mapStateToProps)(ExplanationWidget));\n"],"mappings":"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"}