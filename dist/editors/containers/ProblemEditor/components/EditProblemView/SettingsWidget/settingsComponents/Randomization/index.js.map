{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_i18n","_paragon","_propTypes","_SettingsOption","_messages","_hooks","_problem","_jsxRuntime","obj","__esModule","default","RandomizationCard","_ref","randomization","updateSettings","intl","summary","handleChange","useRandomizationSettingStatus","jsxs","title","formatMessage","messages","randomizationSettingTitle","message","none","children","jsx","className","randomizationSettingText","Form","Group","Control","as","value","onChange","Object","values","RandomizationTypesKeys","map","randomizationType","RandomizationTypes","exports","propTypes","PropTypes","string","isRequired","func","intlShape","_default","injectIntl"],"sources":["../../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/Randomization/index.jsx"],"sourcesContent":["import React from 'react';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Form } from '@edx/paragon';\nimport PropTypes from 'prop-types';\nimport SettingsOption from '../../SettingsOption';\nimport messages from './messages';\nimport { useRandomizationSettingStatus } from './hooks';\nimport { RandomizationTypesKeys, RandomizationTypes } from '../../../../../../../data/constants/problem';\n\nexport const RandomizationCard = ({\n  randomization,\n  updateSettings,\n  // inject\n  intl,\n}) => {\n  const { summary, handleChange } = useRandomizationSettingStatus({ randomization, updateSettings });\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.randomizationSettingTitle)}\n      summary={intl.formatMessage(summary.message)}\n      none={!randomization}\n    >\n      <div className=\"mb-3\">\n        {intl.formatMessage(messages.randomizationSettingText, { randomization })}\n      </div>\n\n      <Form.Group>\n        <Form.Control\n          as=\"select\"\n          value={randomization}\n          onChange={handleChange}\n        >\n          {\n            Object.values(RandomizationTypesKeys).map((randomizationType) => (\n              <option\n                key={randomizationType}\n                value={randomizationType}\n              >\n                {intl.formatMessage(RandomizationTypes[randomizationType])}\n              </option>\n            ))\n          }\n        </Form.Control>\n      </Form.Group>\n\n    </SettingsOption>\n  );\n};\n\nRandomizationCard.propTypes = {\n  randomization: PropTypes.string.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(RandomizationCard);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,eAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,SAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AACA,IAAAO,QAAA,GAAAP,OAAA;AAAyG,IAAAQ,WAAA,GAAAR,OAAA;AAAA,SAAAD,uBAAAU,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAElG,MAAMG,iBAAiB,GAAGC,IAAA,IAK3B;EAAA,IAL4B;IAChCC,aAAa;IACbC,cAAc;IACd;IACAC;EACF,CAAC,GAAAH,IAAA;EACC,MAAM;IAAEI,OAAO;IAAEC;EAAa,CAAC,GAAG,IAAAC,oCAA6B,EAAC;IAAEL,aAAa;IAAEC;EAAe,CAAC,CAAC;EAClG,oBACE,IAAAP,WAAA,CAAAY,IAAA,EAAChB,eAAA,CAAAO,OAAc;IACbU,KAAK,EAAEL,IAAI,CAACM,aAAa,CAACC,iBAAQ,CAACC,yBAAyB,CAAE;IAC9DP,OAAO,EAAED,IAAI,CAACM,aAAa,CAACL,OAAO,CAACQ,OAAO,CAAE;IAC7CC,IAAI,EAAE,CAACZ,aAAc;IAAAa,QAAA,gBAErB,IAAAnB,WAAA,CAAAoB,GAAA;MAAKC,SAAS,EAAC,MAAM;MAAAF,QAAA,EAClBX,IAAI,CAACM,aAAa,CAACC,iBAAQ,CAACO,wBAAwB,EAAE;QAAEhB;MAAc,CAAC;IAAC,CACtE,CAAC,eAEN,IAAAN,WAAA,CAAAoB,GAAA,EAAC1B,QAAA,CAAA6B,IAAI,CAACC,KAAK;MAAAL,QAAA,eACT,IAAAnB,WAAA,CAAAoB,GAAA,EAAC1B,QAAA,CAAA6B,IAAI,CAACE,OAAO;QACXC,EAAE,EAAC,QAAQ;QACXC,KAAK,EAAErB,aAAc;QACrBsB,QAAQ,EAAElB,YAAa;QAAAS,QAAA,EAGrBU,MAAM,CAACC,MAAM,CAACC,+BAAsB,CAAC,CAACC,GAAG,CAAEC,iBAAiB,iBAC1D,IAAAjC,WAAA,CAAAoB,GAAA;UAEEO,KAAK,EAAEM,iBAAkB;UAAAd,QAAA,EAExBX,IAAI,CAACM,aAAa,CAACoB,2BAAkB,CAACD,iBAAiB,CAAC;QAAC,GAHrDA,iBAIC,CACT;MAAC,CAEQ;IAAC,CACL,CAAC;EAAA,CAEC,CAAC;AAErB,CAAC;AAACE,OAAA,CAAA/B,iBAAA,GAAAA,iBAAA;AAEFA,iBAAiB,CAACgC,SAAS,GAAG;EAC5B9B,aAAa,EAAE+B,kBAAS,CAACC,MAAM,CAACC,UAAU;EAC1ChC,cAAc,EAAE8B,kBAAS,CAACG,IAAI,CAACD,UAAU;EACzC/B,IAAI,EAAEiC,eAAS,CAACF;AAClB,CAAC;AAAC,IAAAG,QAAA,GAEa,IAAAC,gBAAU,EAACvC,iBAAiB,CAAC;AAAA+B,OAAA,CAAAhC,OAAA,GAAAuC,QAAA"}