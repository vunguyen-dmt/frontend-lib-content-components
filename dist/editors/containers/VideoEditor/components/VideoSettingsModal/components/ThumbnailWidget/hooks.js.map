{"version":3,"file":"hooks.js","names":["_react","_interopRequireDefault","require","_reactRedux","_redux","constants","_interopRequireWildcard","_module","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","state","exports","showSizeError","args","React","useState","createResampledFile","_ref","canvasUrl","filename","mimeType","arr","split","bstr","atob","length","u8arr","Uint8Array","charCodeAt","File","type","resampleImage","_ref2","image","canvas","document","createElement","ctx","getContext","naturalWidth","MAX_WIDTH","width","height","MAX_HEIGHT","MIN_WIDTH","MIN_HEIGHT","heightRatio","cropLeft","cropTop","naturalHeight","drawImage","resampledFile","module","toDataURL","checkValidDimensions","_ref3","imageAspectRatio","Math","abs","ASPECT_RATIO","ASPECT_RATIO_ERROR_MARGIN","checkValidSize","_ref4","file","onSizeFail","size","MAX_FILE_SIZE_MB","MIN_FILE_SIZE_KB","fileInput","_ref5","setThumbnailSrc","imgRef","fileSizeError","dispatch","useDispatch","ref","useRef","click","current","addFile","target","files","reader","FileReader","onload","result","resampledUrl","name","thunkActions","video","uploadThumbnail","thumbnail","actions","updateField","readAsDataURL","setShowSizeError","show","dismiss","deleteThumbnail","_ref6","emptyCanvas","fillStyle","fillRect","_default"],"sources":["../../../../../../../../src/editors/containers/VideoEditor/components/VideoSettingsModal/components/ThumbnailWidget/hooks.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions, thunkActions } from '../../../../../../data/redux';\nimport * as constants from './constants';\nimport * as module from './hooks';\n\nexport const state = {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  showSizeError: (args) => React.useState(args),\n};\n\n/** resampledFile({ canvasUrl, filename, mimeType })\n * resampledFile takes a canvasUrl, filename, and a valid mimeType. The\n * canvasUrl is parsed and written to an 8-bit array of unsigned integers. The\n * new array is saved to  a new file with the same filename as the original image.\n * @param {string} canvasUrl - string of base64 URL for new image canvas\n * @param {string} filename - string of the original image's filename\n * @param {string} mimeType - string of mimeType for the canvas\n * @return {File} new File object\n */\nexport const createResampledFile = ({ canvasUrl, filename, mimeType }) => {\n  const arr = canvasUrl.split(',');\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n};\n\n/** resampleImage({ image, filename })\n * resampledImage takes a canvasUrl, filename, and a valid mimeType. The\n * canvasUrl is parsed and written to an 8-bit array of unsigned integers. The\n * new array is saved to  a new file with the same filename as the original image.\n * @param {File} canvasUrl - string of base64 URL for new image canvas\n * @param {string} filename - string of the image's filename\n * @return {array} array containing the base64 URL for the resampled image and the file containing the resampled image\n */\nexport const resampleImage = ({ image, filename }) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  // Determine new dimensions for image\n  if (image.naturalWidth > constants.MAX_WIDTH) {\n    // Set dimensions to the maximum size\n    canvas.width = constants.MAX_WIDTH;\n    canvas.height = constants.MAX_HEIGHT;\n  } else if (image.naturalWidth < constants.MIN_WIDTH) {\n    // Set dimensions to the minimum size\n    canvas.width = constants.MIN_WIDTH;\n    canvas.height = constants.MIN_HEIGHT;\n  } else {\n    // Set dimensions to the closest 16:9 ratio\n    const heightRatio = 9 / 16;\n    canvas.width = image.naturalWidth;\n    canvas.height = image.naturalWidth * heightRatio;\n  }\n  const cropLeft = (image.naturalWidth - canvas.width) / 2;\n  const cropTop = (image.naturalHeight - canvas.height) / 2;\n\n  ctx.drawImage(image, cropLeft, cropTop, canvas.width, canvas.height, 0, 0, canvas.width, canvas.height);\n\n  const resampledFile = module.createResampledFile({ canvasUrl: canvas.toDataURL(), filename, mimeType: 'image/png' });\n  return [canvas.toDataURL(), resampledFile];\n};\n\nexport const checkValidDimensions = ({ width, height }) => {\n  if (width < constants.MIN_WIDTH || height < height.MIN_WIDTH) {\n    return false;\n  }\n  const imageAspectRatio = Math.abs((width / height) - constants.ASPECT_RATIO);\n  if (imageAspectRatio >= constants.ASPECT_RATIO_ERROR_MARGIN) {\n    return false;\n  }\n  return true;\n};\nexport const checkValidSize = ({ file, onSizeFail }) => {\n  // Check if the file size is greater than 2 MB, upload size maximum, or\n  // if the file size is greater than 2 KB, upload size minimum\n  if (file.size > constants.MAX_FILE_SIZE_MB || file.size < constants.MIN_FILE_SIZE_KB) {\n    onSizeFail();\n    return false;\n  }\n  return true;\n};\n\nexport const fileInput = ({ setThumbnailSrc, imgRef, fileSizeError }) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const dispatch = useDispatch();\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const ref = React.useRef();\n  const click = () => ref.current.click();\n  const addFile = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    if (file && module.checkValidSize({\n      file,\n      onSizeFail: () => {\n        fileSizeError.set();\n      },\n    })) {\n      reader.onload = () => {\n        setThumbnailSrc(reader.result);\n        const image = imgRef.current;\n        image.onload = () => {\n          if (!module.checkValidDimensions({ width: image.naturalWidth, height: image.naturalHeight })) {\n            const [resampledUrl, resampledFile] = module.resampleImage({ image, filename: file.name });\n            setThumbnailSrc(resampledUrl);\n            dispatch(thunkActions.video.uploadThumbnail({ thumbnail: resampledFile }));\n            dispatch(actions.video.updateField({ thumbnail: resampledUrl }));\n            return;\n          }\n          dispatch(thunkActions.video.uploadThumbnail({ thumbnail: file }));\n          dispatch(actions.video.updateField({ thumbnail: reader.result }));\n        };\n      };\n      dispatch(actions.video.updateField({ thumbnail: ' ' }));\n      reader.readAsDataURL(file);\n    }\n  };\n  return {\n    click,\n    addFile,\n    ref,\n  };\n};\n\nexport const fileSizeError = () => {\n  const [showSizeError, setShowSizeError] = module.state.showSizeError(false);\n  return {\n    fileSizeError: {\n      show: showSizeError,\n      set: () => setShowSizeError(true),\n      dismiss: () => setShowSizeError(false),\n    },\n  };\n};\n\nexport const deleteThumbnail = ({ dispatch }) => () => {\n  dispatch(actions.video.updateField({ thumbnail: null }));\n  const emptyCanvas = document.createElement('canvas');\n  const ctx = emptyCanvas.getContext('2d');\n  emptyCanvas.width = constants.MAX_WIDTH;\n  emptyCanvas.height = constants.MAX_HEIGHT;\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, emptyCanvas.width, emptyCanvas.height);\n  const file = createResampledFile({ canvasUrl: emptyCanvas.toDataURL(), filename: 'blankThumbnail.png', mimeType: 'image/png' });\n  dispatch(thunkActions.video.uploadThumbnail({ thumbnail: file, emptyCanvas }));\n};\n\nexport default {\n  fileInput,\n  fileSizeError,\n  deleteThumbnail,\n};\n"],"mappings":"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"}