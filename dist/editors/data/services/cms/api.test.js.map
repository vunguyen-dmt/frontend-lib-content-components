{"version":3,"file":"api.test.js","names":["utils","_interopRequireWildcard","require","api","mockApi","urls","_utils2","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","jest","mock","camelizeMap","camelized","requireActual","camelize","camelizeKeys","list","map","block","fn","mockReturnValue","blockAncestor","blockStudioView","courseAssets","videoTranscripts","allowThumbnailUpload","thumbnailUpload","checkTranscriptsForImport","courseDetailsUrl","courseAdvanceSettings","replaceTranscript","videoFeatures","courseVideos","mockName","mockImplementation","_ref","studioEndpointUrl","learningContextId","post","deleteObject","apiMethods","blockId","title","describe","beforeEach","clearAllMocks","it","fetchBlockById","expect","toHaveBeenCalledWith","fetchByUnitId","OLD_ENV","process","env","resetModules","afterEach","NODE_ENV","MFE_NAME","Promise","resolve","then","getSpy","spyOn","headers","Accept","fetchStudioView","fetchAssets","fetchCourseDetails","fetchVideos","fetchAdvancedSettings","test","content","normalizeContent","blockType","toEqual","category","courseKey","data","has_changes","id","metadata","display_name","videoSource","fallbackVideos","allowVideoDownloads","allowVideoSharing","level","thumbnail","transcripts","allowTranscriptDownloads","duration","startTime","stopTime","showTranscriptByDefault","handout","licenseType","licenseDetails","html5Sources","edxVideoId","youtubeId","license","download_video","public_access","edx_video_id","html5_sources","youtube_id_1_0","download_track","track","show_captions","start_time","end_time","restoreAllMocks","toThrow","saveBlock","asset","photo","mockFormdata","FormData","append","uploadAsset","files","file_name","content_type","uploadVideo","date","time","imageData","some","dateAdded","loadImage","Date","getTime","ids","testData","other","oldLoadImage","out","loadImages","videoId","uploadThumbnail","language","youTubeId","getJSON","parameters","encodeURIComponent","importTranscript","transcript","uploadTranscript","mockDeleteJSON","lang","deleteTranscript","mockJSON","getTranscript","youtubeUrl","processVideoIds","videoUrl","isEdxVideo","testURLs","url","parseYoutubeId","badURL","processLicense","attribution","noncommercial","noDerivatives","shareAlike","envTemp","REACT_APP_DEVGALLERY","checkMockApi","emptyMock","args","fetchVideoFeatures"],"sources":["../../../../../src/editors/data/services/cms/api.test.js"],"sourcesContent":["/* eslint-disable no-import-assign */\nimport * as utils from '../../../utils';\nimport * as api from './api';\nimport * as mockApi from './mockApi';\nimport * as urls from './urls';\nimport { get, post, deleteObject } from './utils';\n\njest.mock('../../../utils', () => {\n  const camelizeMap = (obj) => ({ ...obj, camelized: true });\n  return {\n    ...jest.requireActual('../../../utils'),\n    camelize: camelizeMap,\n    camelizeKeys: (list) => list.map(camelizeMap),\n  };\n});\n\njest.mock('./urls', () => ({\n  block: jest.fn().mockReturnValue('urls.block'),\n  blockAncestor: jest.fn().mockReturnValue('urls.blockAncestor'),\n  blockStudioView: jest.fn().mockReturnValue('urls.StudioView'),\n  courseAssets: jest.fn().mockReturnValue('urls.courseAssets'),\n  videoTranscripts: jest.fn().mockReturnValue('urls.videoTranscripts'),\n  allowThumbnailUpload: jest.fn().mockReturnValue('urls.allowThumbnailUpload'),\n  thumbnailUpload: jest.fn().mockReturnValue('urls.thumbnailUpload'),\n  checkTranscriptsForImport: jest.fn().mockReturnValue('urls.checkTranscriptsForImport'),\n  courseDetailsUrl: jest.fn().mockReturnValue('urls.courseDetailsUrl'),\n  courseAdvanceSettings: jest.fn().mockReturnValue('urls.courseAdvanceSettings'),\n  replaceTranscript: jest.fn().mockReturnValue('urls.replaceTranscript'),\n  videoFeatures: jest.fn().mockReturnValue('urls.videoFeatures'),\n  courseVideos: jest.fn()\n    .mockName('urls.courseVideos')\n    .mockImplementation(\n      ({ studioEndpointUrl, learningContextId }) => `${studioEndpointUrl}/some_video_upload_url/${learningContextId}`,\n    ),\n}));\n\njest.mock('./utils', () => ({\n  get: jest.fn().mockName('get'),\n  post: jest.fn().mockName('post'),\n  deleteObject: jest.fn().mockName('deleteObject'),\n}));\n\nconst { camelize } = utils;\n\nconst { apiMethods } = api;\n\nconst blockId = 'block-v1-coursev1:2uX@4345432';\nconst learningContextId = 'demo2uX';\nconst studioEndpointUrl = 'hortus.coa';\nconst title = 'remember this needs to go into metadata to save';\n\ndescribe('cms api', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n  describe('apiMethods', () => {\n    describe('fetchBlockId', () => {\n      it('should call get with url.blocks', () => {\n        apiMethods.fetchBlockById({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.block({ blockId, studioEndpointUrl }));\n      });\n    });\n\n    describe('fetchByUnitId', () => {\n      it('should call get with url.blockAncestor', () => {\n        apiMethods.fetchByUnitId({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.blockAncestor({ studioEndpointUrl, blockId }), {});\n      });\n\n      describe('when called in different contexts', () => {\n        // To mock env variables, you need to use dynamic imports for the tested methods\n        // and then reset the env variables afterwards.\n        const OLD_ENV = process.env;\n\n        beforeEach(() => {\n          jest.resetModules();\n          process.env = { ...OLD_ENV };\n        });\n\n        afterEach(() => {\n          process.env = OLD_ENV;\n        });\n\n        it('should call get with normal accept header for prod', async () => {\n          process.env.NODE_ENV = 'production';\n          process.env.MFE_NAME = 'frontend-app-library-authoring';\n          // eslint-disable-next-line no-shadow\n          const { apiMethods } = await import('./api');\n          // eslint-disable-next-line no-shadow\n          const utils = await import('./utils');\n          const getSpy = jest.spyOn(utils, 'get');\n          apiMethods.fetchByUnitId({ blockId, studioEndpointUrl });\n          expect(getSpy).toHaveBeenCalledWith(urls.blockAncestor({ studioEndpointUrl, blockId }), {});\n        });\n\n        it('should call get with normal accept header for course-authoring', async () => {\n          process.env.NODE_ENV = 'development';\n          process.env.MFE_NAME = 'frontend-app-course-authoring';\n          // eslint-disable-next-line no-shadow\n          const { apiMethods } = await import('./api');\n          // eslint-disable-next-line no-shadow\n          const utils = await import('./utils');\n          const getSpy = jest.spyOn(utils, 'get');\n          apiMethods.fetchByUnitId({ blockId, studioEndpointUrl });\n          expect(getSpy).toHaveBeenCalledWith(urls.blockAncestor({ studioEndpointUrl, blockId }), {});\n        });\n\n        it('should call get with special accept header \"*/*\" for course-authoring', async () => {\n          process.env.NODE_ENV = 'development';\n          process.env.MFE_NAME = 'frontend-app-library-authoring';\n          // eslint-disable-next-line no-shadow\n          const { apiMethods } = await import('./api');\n          // eslint-disable-next-line no-shadow\n          const utils = await import('./utils');\n          const getSpy = jest.spyOn(utils, 'get');\n          apiMethods.fetchByUnitId({ blockId, studioEndpointUrl });\n          expect(getSpy).toHaveBeenCalledWith(urls.blockAncestor({ studioEndpointUrl, blockId }), { headers: { Accept: '*/*' } });\n        });\n      });\n    });\n\n    describe('fetchStudioView', () => {\n      it('should call get with url.blockStudioView', () => {\n        apiMethods.fetchStudioView({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.blockStudioView({ studioEndpointUrl, blockId }));\n      });\n    });\n\n    describe('fetchAssets', () => {\n      it('should call get with url.courseAssets', () => {\n        apiMethods.fetchAssets({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseAssets({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('fetchCourseDetails', () => {\n      it('should call get with url.courseDetailsUrl', () => {\n        apiMethods.fetchCourseDetails({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseDetailsUrl({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('fetchVideos', () => {\n      it('should call get with url.courseVideos', () => {\n        apiMethods.fetchVideos({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseVideos({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('fetchAdvancedSettings', () => {\n      it('should call get with url.courseAdvanceSettings', () => {\n        apiMethods.fetchAdvancedSettings({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseAdvanceSettings({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('normalizeContent', () => {\n      test('return value for blockType: html', () => {\n        const content = 'Im baby palo santo ugh celiac fashion axe. La croix lo-fi venmo whatever. Beard man braid migas single-origin coffee forage ramps.';\n        expect(apiMethods.normalizeContent({\n          blockId,\n          blockType: 'html',\n          content,\n          learningContextId,\n          title,\n        })).toEqual({\n          category: 'html',\n          courseKey: learningContextId,\n          data: content,\n          has_changes: true,\n          id: blockId,\n          metadata: { display_name: title },\n        });\n      });\n      test('return value for blockType: video', () => {\n        const content = {\n          videoSource: 'viDeOSouRCE',\n          fallbackVideos: 'FalLBacKVidEOs',\n          allowVideoDownloads: 'alLOwViDeodownLOads',\n          allowVideoSharing: {\n            level: 'sOMeStRInG',\n            value: 'alloWviDeOshArinG',\n          },\n          thumbnail: 'THUmbNaIL',\n          transcripts: 'traNScRiPts',\n          allowTranscriptDownloads: 'aLloWTRaNScriPtdoWnlOADS',\n          duration: {\n            startTime: '00:00:00',\n            stopTime: '00:00:00',\n          },\n          showTranscriptByDefault: 'ShOWtrANscriPTBYDeFAulT',\n          handout: 'HAnDOuT',\n          licenseType: 'LiCeNsETYpe',\n          licenseDetails: 'liCENSeDetAIls',\n        };\n        const html5Sources = 'hTML5souRCES';\n        const edxVideoId = 'eDXviDEOid';\n        const youtubeId = 'yOUtUBeid';\n        const license = 'LiCEnsE';\n        jest.spyOn(api, 'processVideoIds').mockReturnValue({\n          html5Sources,\n          edxVideoId,\n          youtubeId,\n        });\n        jest.spyOn(api, 'processLicense').mockReturnValue(license);\n        expect(apiMethods.normalizeContent({\n          blockId,\n          blockType: 'video',\n          content,\n          learningContextId,\n          title,\n        })).toEqual({\n          category: 'video',\n          courseKey: learningContextId,\n          display_name: title,\n          id: blockId,\n          metadata: {\n            display_name: title,\n            download_video: content.allowVideoDownloads,\n            public_access: content.allowVideoSharing.value,\n            edx_video_id: edxVideoId,\n            html5_sources: html5Sources,\n            youtube_id_1_0: youtubeId,\n            thumbnail: content.thumbnail,\n            download_track: content.allowTranscriptDownloads,\n            track: '',\n            show_captions: content.showTranscriptByDefault,\n            handout: content.handout,\n            start_time: content.duration.startTime,\n            end_time: content.duration.stopTime,\n            license,\n          },\n        });\n        jest.restoreAllMocks();\n      });\n      test('throw error for invalid blockType', () => {\n        expect(() => { apiMethods.normalizeContent({ blockType: 'somethingINVALID' }); })\n          .toThrow(TypeError);\n      });\n    });\n\n    describe('saveBlock', () => {\n      const content = 'Im baby palo santo ugh celiac fashion axe. La croix lo-fi venmo whatever. Beard man braid migas single-origin coffee forage ramps.';\n      it('should call post with urls.block and normalizeContent', () => {\n        apiMethods.saveBlock({\n          blockId,\n          blockType: 'html',\n          content,\n          learningContextId,\n          studioEndpointUrl,\n          title,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.block({ studioEndpointUrl }),\n          apiMethods.normalizeContent({\n            blockType: 'html',\n            content,\n            blockId,\n            learningContextId,\n            title,\n          }),\n        );\n      });\n    });\n\n    describe('uploadAsset', () => {\n      const asset = { photo: 'dAta' };\n      it('should call post with urls.courseAssets and imgdata', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', asset);\n        apiMethods.uploadAsset({\n          learningContextId,\n          studioEndpointUrl,\n          asset,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.courseAssets({ studioEndpointUrl, learningContextId }),\n          mockFormdata,\n        );\n      });\n    });\n\n    describe('uploadVideo', () => {\n      it('should call post with urls.courseVideos and data', () => {\n        const data = { files: [{ file_name: 'video.mp4', content_type: 'mp4' }] };\n\n        apiMethods.uploadVideo({ data, studioEndpointUrl, learningContextId });\n\n        expect(urls.courseVideos).toHaveBeenCalledWith({ studioEndpointUrl, learningContextId });\n        expect(post).toHaveBeenCalledWith(\n          urls.courseVideos({ studioEndpointUrl, learningContextId }),\n          data,\n        );\n      });\n    });\n  });\n  describe('loadImage', () => {\n    it('loads incoming image data, replacing the dateAdded with a date field', () => {\n      const [date, time] = ['Jan 20, 2022', '9:30 PM'];\n      const imageData = { some: 'image data', dateAdded: `${date} at ${time}` };\n      expect(api.loadImage(imageData)).toEqual({\n        ...imageData,\n        dateAdded: new Date(`${date} ${time}`).getTime(),\n      });\n    });\n  });\n  describe('loadImages', () => {\n    it('loads a list of images into an object by id, using loadImage to translate', () => {\n      const ids = ['id0', 'Id1', 'ID2', 'iD3'];\n      const testData = [\n        { id: ids[0], some: 'data' },\n        { id: ids[1], other: 'data' },\n        { id: ids[2], some: 'DATA' },\n        { id: ids[3], other: 'DATA' },\n      ];\n      const oldLoadImage = api.loadImage;\n      api.loadImage = (imageData) => ({ loadImage: imageData });\n      const out = api.loadImages(testData);\n      expect(out).toEqual({\n        [ids[0]]: api.loadImage(camelize(testData[0])),\n        [ids[1]]: api.loadImage(camelize(testData[1])),\n        [ids[2]]: api.loadImage(camelize(testData[2])),\n        [ids[3]]: api.loadImage(camelize(testData[3])),\n      });\n      api.loadImage = oldLoadImage;\n    });\n  });\n  describe('uploadThumbnail', () => {\n    describe('uploadThumbnail', () => {\n      const thumbnail = 'dAta';\n      const videoId = 'sOmeVIDeoiD';\n      it('should call post with urls.thumbnailUpload and thumbnail data', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', thumbnail);\n        apiMethods.uploadThumbnail({\n          studioEndpointUrl,\n          learningContextId,\n          videoId,\n          thumbnail,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.thumbnailUpload({ studioEndpointUrl, learningContextId, videoId }),\n          mockFormdata,\n        );\n      });\n    });\n  });\n  describe('videoTranscripts', () => {\n    const language = 'la';\n    const videoId = 'sOmeVIDeoiD';\n    const youTubeId = 'SOMeyoutUBeid';\n    describe('checkTranscriptsForImport', () => {\n      const getJSON = `{\"locator\":\"${blockId}\",\"videos\":[{\"mode\":\"youtube\",\"video\":\"${youTubeId}\",\"type\":\"youtube\"},{\"mode\":\"edx_video_id\",\"type\":\"edx_video_id\",\"video\":\"${videoId}\"}]}`;\n      it('should call get with url.checkTranscriptsForImport', () => {\n        apiMethods.checkTranscriptsForImport({\n          studioEndpointUrl,\n          blockId,\n          videoId,\n          youTubeId,\n        });\n        expect(get).toHaveBeenCalledWith(urls.checkTranscriptsForImport({\n          studioEndpointUrl,\n          parameters: encodeURIComponent(getJSON),\n        }));\n      });\n    });\n    describe('importTranscript', () => {\n      const getJSON = `{\"locator\":\"${blockId}\",\"videos\":[{\"mode\":\"youtube\",\"video\":\"${youTubeId}\",\"type\":\"youtube\"}]}`;\n      it('should call get with url.replaceTranscript', () => {\n        apiMethods.importTranscript({ studioEndpointUrl, blockId, youTubeId });\n        expect(get).toHaveBeenCalledWith(urls.replaceTranscript({\n          studioEndpointUrl,\n          parameters: encodeURIComponent(getJSON),\n        }));\n      });\n    });\n    describe('uploadTranscript', () => {\n      const transcript = { transcript: 'dAta' };\n      it('should call post with urls.videoTranscripts and transcript data', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', transcript);\n        mockFormdata.append('edx_video_id', videoId);\n        mockFormdata.append('language_code', language);\n        mockFormdata.append('new_language_code', language);\n        apiMethods.uploadTranscript({\n          blockId,\n          studioEndpointUrl,\n          transcript,\n          videoId,\n          language,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.videoTranscripts({ studioEndpointUrl, blockId }),\n          mockFormdata,\n        );\n      });\n    });\n    describe('transcript delete', () => {\n      it('should call deleteObject with urls.videoTranscripts and transcript data', () => {\n        const mockDeleteJSON = { data: { lang: language, edx_video_id: videoId } };\n        apiMethods.deleteTranscript({\n          blockId,\n          studioEndpointUrl,\n          videoId,\n          language,\n        });\n        expect(deleteObject).toHaveBeenCalledWith(\n          urls.videoTranscripts({ studioEndpointUrl, blockId }),\n          mockDeleteJSON,\n        );\n      });\n    });\n    describe('transcript get', () => {\n      it('should call get with urls.videoTranscripts and transcript data', () => {\n        const mockJSON = { data: { lang: language, edx_video_id: videoId } };\n        apiMethods.getTranscript({\n          blockId,\n          studioEndpointUrl,\n          videoId,\n          language,\n        });\n        expect(get).toHaveBeenCalledWith(\n          `${urls.videoTranscripts({ studioEndpointUrl, blockId })}?language_code=${language}`,\n          mockJSON,\n        );\n      });\n    });\n  });\n  describe('processVideoIds', () => {\n    const edxVideoId = 'eDXviDEoid';\n    const youtubeId = 'yOuTuBeUrL';\n    const youtubeUrl = `https://youtu.be/${youtubeId}`;\n    const html5Sources = [\n      'sOuRce1',\n      'sourCE2',\n    ];\n    afterEach(() => {\n      jest.restoreAllMocks();\n    });\n    describe('if there is a video id', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(true);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(youtubeId);\n      });\n      it('returns edxVideoId when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: '',\n          fallbackVideos: [],\n          videoId: edxVideoId,\n        })).toEqual({\n          edxVideoId,\n          html5Sources: [],\n          youtubeId: '',\n        });\n      });\n      it('returns edxVideoId and html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: html5Sources,\n          videoId: edxVideoId,\n        })).toEqual({\n          edxVideoId,\n          html5Sources,\n          youtubeId,\n        });\n      });\n    });\n    describe('if there is a youtube url', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(false);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(youtubeId);\n      });\n      it('returns youtubeId when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: [],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources: [],\n          youtubeId,\n        });\n      });\n      it('returns youtubeId and html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: html5Sources,\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources,\n          youtubeId,\n        });\n      });\n    });\n    describe('if the videoSource is an html5 source', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(false);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(null);\n      });\n      it('returns html5Sources when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: html5Sources[0],\n          fallbackVideos: [],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources: [html5Sources[0]],\n          youtubeId: '',\n        });\n      });\n      it('returns html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: html5Sources[0],\n          fallbackVideos: [html5Sources[1]],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources,\n          youtubeId: '',\n        });\n      });\n    });\n  });\n  describe('isEdxVideo', () => {\n    it('returns true if id is in uuid4 format', () => {\n      const id = 'c2afd8c8-3329-4dfc-95be-4ee6d986c3e5';\n      expect(api.isEdxVideo(id)).toEqual(true);\n    });\n    it('returns false if id is not in uuid4 format', () => {\n      const id = 'someB-ad-Id';\n      expect(api.isEdxVideo(id)).toEqual(false);\n    });\n  });\n  describe('parseYoutubeId', () => {\n    it('returns the youtube id in an url', () => {\n      const id = '3_yD_cEKoCk';\n      const testURLs = [\n        'https://www.youtube.com/watch?v=3_yD_cEKoCk&feature=featured',\n        'https://www.youtube.com/watch?v=3_yD_cEKoCk',\n        'http://www.youtube.com/watch?v=3_yD_cEKoCk',\n        '//www.youtube.com/watch?v=3_yD_cEKoCk',\n        'www.youtube.com/watch?v=3_yD_cEKoCk',\n        'https://youtube.com/watch?v=3_yD_cEKoCk',\n        'http://youtube.com/watch?v=3_yD_cEKoCk',\n        '//youtube.com/watch?v=3_yD_cEKoCk',\n        'youtube.com/watch?v=3_yD_cEKoCk',\n        'https://m.youtube.com/watch?v=3_yD_cEKoCk',\n        'http://m.youtube.com/watch?v=3_yD_cEKoCk',\n        '//m.youtube.com/watch?v=3_yD_cEKoCk',\n        'm.youtube.com/watch?v=3_yD_cEKoCk',\n        'https://www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'http://www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        '//www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'https://www.youtube.com/embed/3_yD_cEKoCk?autoplay=1',\n        'https://www.youtube.com/embed/3_yD_cEKoCk',\n        'http://www.youtube.com/embed/3_yD_cEKoCk',\n        '//www.youtube.com/embed/3_yD_cEKoCk',\n        'www.youtube.com/embed/3_yD_cEKoCk',\n        'https://youtube.com/embed/3_yD_cEKoCk',\n        'http://youtube.com/embed/3_yD_cEKoCk',\n        '//youtube.com/embed/3_yD_cEKoCk',\n        'youtube.com/embed/3_yD_cEKoCk',\n        'https://youtu.be/3_yD_cEKoCk?t=120',\n        'https://youtu.be/3_yD_cEKoCk',\n        'http://youtu.be/3_yD_cEKoCk',\n        '//youtu.be/3_yD_cEKoCk',\n        'youtu.be/3_yD_cEKoCk',\n      ];\n      testURLs.forEach((url) => {\n        expect(api.parseYoutubeId(url)).toEqual(id);\n      });\n    });\n    it('returns null if the url is not a youtube url', () => {\n      const badURL = 'https://someothersite.com/3_yD_cEKoCk';\n      expect(api.parseYoutubeId(badURL)).toEqual(null);\n    });\n  });\n  describe('processLicense', () => {\n    it('returns empty string when licenseType is empty or not a valid licnese type', () => {\n      expect(api.processLicense('', {})).toEqual('');\n      expect(api.processLicense('LiCeNsETYpe', {})).toEqual('');\n    });\n    it('returns empty string when licenseType equals creative commons', () => {\n      const licenseType = 'creative-commons';\n      const licenseDetails = {\n        attribution: true,\n        noncommercial: false,\n        noDerivatives: true,\n        shareAlike: false,\n      };\n      expect(api.processLicense(licenseType, licenseDetails)).toEqual('creative-commons: ver=4.0 BY ND');\n    });\n    it('returns empty string when licenseType equals creative commons', () => {\n      const licenseType = 'all-rights-reserved';\n      const licenseDetails = {};\n      expect(api.processLicense(licenseType, licenseDetails)).toEqual('all-rights-reserved');\n    });\n  });\n  describe('checkMockApi', () => {\n    const envTemp = process.env;\n    beforeEach(() => {\n      jest.resetModules();\n      process.env = { ...envTemp };\n    });\n    afterEach(() => {\n      process.env = envTemp;\n    });\n    describe('if REACT_APP_DEVGALLERY is true', () => {\n      it('should return the mockApi version of a call when it exists', () => {\n        process.env.REACT_APP_DEVGALLERY = true;\n        expect(api.checkMockApi('fetchBlockById')).toEqual(mockApi.fetchBlockById);\n      });\n      it('should return an empty mock when the call does not exist', () => {\n        process.env.REACT_APP_DEVGALLERY = true;\n        expect(api.checkMockApi('someRAnDomThINg')).toEqual(mockApi.emptyMock);\n      });\n    });\n    describe('if REACT_APP_DEVGALLERY is not true', () => {\n      it('should return the appropriate call', () => {\n        expect(api.checkMockApi('fetchBlockById')).toEqual(apiMethods.fetchBlockById);\n      });\n    });\n  });\n  describe('fetchVideoFeatures', () => {\n    it('should call get with url.videoFeatures', () => {\n      const args = { studioEndpointUrl };\n      apiMethods.fetchVideoFeatures({ ...args });\n      expect(get).toHaveBeenCalledWith(urls.videoFeatures({ ...args }));\n    });\n  });\n});\n"],"mappings":";;AACA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,GAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAH,uBAAA,CAAAC,OAAA;AACA,IAAAG,IAAA,GAAAJ,uBAAA,CAAAC,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAAkD,SAAAK,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAP,wBAAAO,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA,SAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA,SAAAY,QAAApB,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAQ,MAAA,CAAAU,IAAA,CAAArB,CAAA,OAAAW,MAAA,CAAAW,qBAAA,QAAAC,CAAA,GAAAZ,MAAA,CAAAW,qBAAA,CAAAtB,CAAA,GAAAE,CAAA,KAAAqB,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAtB,CAAA,WAAAS,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAE,CAAA,EAAAuB,UAAA,OAAAtB,CAAA,CAAAuB,IAAA,CAAAC,KAAA,CAAAxB,CAAA,EAAAoB,CAAA,YAAApB,CAAA;AAAA,SAAAyB,cAAA5B,CAAA,aAAAE,CAAA,MAAAA,CAAA,GAAA2B,SAAA,CAAAC,MAAA,EAAA5B,CAAA,UAAAC,CAAA,WAAA0B,SAAA,CAAA3B,CAAA,IAAA2B,SAAA,CAAA3B,CAAA,QAAAA,CAAA,OAAAkB,OAAA,CAAAT,MAAA,CAAAR,CAAA,OAAA4B,OAAA,WAAA7B,CAAA,IAAA8B,eAAA,CAAAhC,CAAA,EAAAE,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAS,MAAA,CAAAsB,yBAAA,GAAAtB,MAAA,CAAAuB,gBAAA,CAAAlC,CAAA,EAAAW,MAAA,CAAAsB,yBAAA,CAAA9B,CAAA,KAAAiB,OAAA,CAAAT,MAAA,CAAAR,CAAA,GAAA4B,OAAA,WAAA7B,CAAA,IAAAS,MAAA,CAAAC,cAAA,CAAAZ,CAAA,EAAAE,CAAA,EAAAS,MAAA,CAAAE,wBAAA,CAAAV,CAAA,EAAAD,CAAA,iBAAAF,CAAA;AAAA,SAAAgC,gBAAAG,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAxB,MAAA,CAAAC,cAAA,CAAAuB,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAZ,UAAA,QAAAc,YAAA,QAAAC,QAAA,oBAAAL,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAnC,CAAA,QAAAe,CAAA,GAAAuB,YAAA,CAAAtC,CAAA,uCAAAe,CAAA,GAAAA,CAAA,GAAAwB,MAAA,CAAAxB,CAAA;AAAA,SAAAuB,aAAAtC,CAAA,EAAAD,CAAA,2BAAAC,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAH,CAAA,GAAAG,CAAA,CAAAwC,MAAA,CAAAC,WAAA,kBAAA5C,CAAA,QAAAkB,CAAA,GAAAlB,CAAA,CAAAiB,IAAA,CAAAd,CAAA,EAAAD,CAAA,uCAAAgB,CAAA,SAAAA,CAAA,YAAA2B,SAAA,yEAAA3C,CAAA,GAAAwC,MAAA,GAAAI,MAAA,EAAA3C,CAAA,KALlD;AAOA4C,IAAI,CAACC,IAAI,CAAC,gBAAgB,EAAE,MAAM;EAChC,MAAMC,WAAW,GAAId,GAAG,IAAAP,aAAA,CAAAA,aAAA,KAAWO,GAAG;IAAEe,SAAS,EAAE;EAAI,EAAG;EAC1D,OAAAtB,aAAA,CAAAA,aAAA,KACKmB,IAAI,CAACI,aAAa,CAAC,gBAAgB,CAAC;IACvCC,QAAQ,EAAEH,WAAW;IACrBI,YAAY,EAAGC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAACN,WAAW;EAAC;AAEjD,CAAC,CAAC;AAEFF,IAAI,CAACC,IAAI,CAAC,QAAQ,EAAE,OAAO;EACzBQ,KAAK,EAAET,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,YAAY,CAAC;EAC9CC,aAAa,EAAEZ,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,oBAAoB,CAAC;EAC9DE,eAAe,EAAEb,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,iBAAiB,CAAC;EAC7DG,YAAY,EAAEd,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,mBAAmB,CAAC;EAC5DI,gBAAgB,EAAEf,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,uBAAuB,CAAC;EACpEK,oBAAoB,EAAEhB,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,2BAA2B,CAAC;EAC5EM,eAAe,EAAEjB,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,sBAAsB,CAAC;EAClEO,yBAAyB,EAAElB,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,gCAAgC,CAAC;EACtFQ,gBAAgB,EAAEnB,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,uBAAuB,CAAC;EACpES,qBAAqB,EAAEpB,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,4BAA4B,CAAC;EAC9EU,iBAAiB,EAAErB,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,wBAAwB,CAAC;EACtEW,aAAa,EAAEtB,IAAI,CAACU,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,oBAAoB,CAAC;EAC9DY,YAAY,EAAEvB,IAAI,CAACU,EAAE,CAAC,CAAC,CACpBc,QAAQ,CAAC,mBAAmB,CAAC,CAC7BC,kBAAkB,CACjBC,IAAA;IAAA,IAAC;MAAEC,iBAAiB;MAAEC;IAAkB,CAAC,GAAAF,IAAA;IAAA,OAAM,GAAEC,iBAAkB,0BAAyBC,iBAAkB,EAAC;EAAA,CACjH;AACJ,CAAC,CAAC,CAAC;AAEH5B,IAAI,CAACC,IAAI,CAAC,SAAS,EAAE,OAAO;EAC1BzC,GAAG,EAAEwC,IAAI,CAACU,EAAE,CAAC,CAAC,CAACc,QAAQ,CAAC,KAAK,CAAC;EAC9BK,IAAI,EAAE7B,IAAI,CAACU,EAAE,CAAC,CAAC,CAACc,QAAQ,CAAC,MAAM,CAAC;EAChCM,YAAY,EAAE9B,IAAI,CAACU,EAAE,CAAC,CAAC,CAACc,QAAQ,CAAC,cAAc;AACjD,CAAC,CAAC,CAAC;AAEH,MAAM;EAAEnB;AAAS,CAAC,GAAG5D,KAAK;AAE1B,MAAM;EAAEsF;AAAW,CAAC,GAAGnF,GAAG;AAE1B,MAAMoF,OAAO,GAAG,+BAA+B;AAC/C,MAAMJ,iBAAiB,GAAG,SAAS;AACnC,MAAMD,iBAAiB,GAAG,YAAY;AACtC,MAAMM,KAAK,GAAG,iDAAiD;AAE/DC,QAAQ,CAAC,SAAS,EAAE,MAAM;EACxBC,UAAU,CAAC,MAAM;IACfnC,IAAI,CAACoC,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EACFF,QAAQ,CAAC,YAAY,EAAE,MAAM;IAC3BA,QAAQ,CAAC,cAAc,EAAE,MAAM;MAC7BG,EAAE,CAAC,iCAAiC,EAAE,MAAM;QAC1CN,UAAU,CAACO,cAAc,CAAC;UAAEN,OAAO;UAAEL;QAAkB,CAAC,CAAC;QACzDY,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAAC2D,KAAK,CAAC;UAAEuB,OAAO;UAAEL;QAAkB,CAAC,CAAC,CAAC;MAC9E,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFO,QAAQ,CAAC,eAAe,EAAE,MAAM;MAC9BG,EAAE,CAAC,wCAAwC,EAAE,MAAM;QACjDN,UAAU,CAACU,aAAa,CAAC;UAAET,OAAO;UAAEL;QAAkB,CAAC,CAAC;QACxDY,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAAC8D,aAAa,CAAC;UAAEe,iBAAiB;UAAEK;QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1F,CAAC,CAAC;MAEFE,QAAQ,CAAC,mCAAmC,EAAE,MAAM;QAClD;QACA;QACA,MAAMQ,OAAO,GAAGC,OAAO,CAACC,GAAG;QAE3BT,UAAU,CAAC,MAAM;UACfnC,IAAI,CAAC6C,YAAY,CAAC,CAAC;UACnBF,OAAO,CAACC,GAAG,GAAA/D,aAAA,KAAQ6D,OAAO,CAAE;QAC9B,CAAC,CAAC;QAEFI,SAAS,CAAC,MAAM;UACdH,OAAO,CAACC,GAAG,GAAGF,OAAO;QACvB,CAAC,CAAC;QAEFL,EAAE,CAAC,oDAAoD,EAAE,YAAY;UACnEM,OAAO,CAACC,GAAG,CAACG,QAAQ,GAAG,YAAY;UACnCJ,OAAO,CAACC,GAAG,CAACI,QAAQ,GAAG,gCAAgC;UACvD;UACA,MAAM;YAAEjB;UAAW,CAAC,GAAG,MAAAkB,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAzG,uBAAA,CAAAC,OAAA,CAAa,OAAO,GAAC;UAC5C;UACA,MAAMF,KAAK,GAAG,MAAAwG,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAzG,uBAAA,CAAAC,OAAA,CAAa,SAAS,GAAC;UACrC,MAAMyG,MAAM,GAAGpD,IAAI,CAACqD,KAAK,CAAC5G,KAAK,EAAE,KAAK,CAAC;UACvCsF,UAAU,CAACU,aAAa,CAAC;YAAET,OAAO;YAAEL;UAAkB,CAAC,CAAC;UACxDY,MAAM,CAACa,MAAM,CAAC,CAACZ,oBAAoB,CAAC1F,IAAI,CAAC8D,aAAa,CAAC;YAAEe,iBAAiB;YAAEK;UAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7F,CAAC,CAAC;QAEFK,EAAE,CAAC,gEAAgE,EAAE,YAAY;UAC/EM,OAAO,CAACC,GAAG,CAACG,QAAQ,GAAG,aAAa;UACpCJ,OAAO,CAACC,GAAG,CAACI,QAAQ,GAAG,+BAA+B;UACtD;UACA,MAAM;YAAEjB;UAAW,CAAC,GAAG,MAAAkB,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAzG,uBAAA,CAAAC,OAAA,CAAa,OAAO,GAAC;UAC5C;UACA,MAAMF,KAAK,GAAG,MAAAwG,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAzG,uBAAA,CAAAC,OAAA,CAAa,SAAS,GAAC;UACrC,MAAMyG,MAAM,GAAGpD,IAAI,CAACqD,KAAK,CAAC5G,KAAK,EAAE,KAAK,CAAC;UACvCsF,UAAU,CAACU,aAAa,CAAC;YAAET,OAAO;YAAEL;UAAkB,CAAC,CAAC;UACxDY,MAAM,CAACa,MAAM,CAAC,CAACZ,oBAAoB,CAAC1F,IAAI,CAAC8D,aAAa,CAAC;YAAEe,iBAAiB;YAAEK;UAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7F,CAAC,CAAC;QAEFK,EAAE,CAAC,uEAAuE,EAAE,YAAY;UACtFM,OAAO,CAACC,GAAG,CAACG,QAAQ,GAAG,aAAa;UACpCJ,OAAO,CAACC,GAAG,CAACI,QAAQ,GAAG,gCAAgC;UACvD;UACA,MAAM;YAAEjB;UAAW,CAAC,GAAG,MAAAkB,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAzG,uBAAA,CAAAC,OAAA,CAAa,OAAO,GAAC;UAC5C;UACA,MAAMF,KAAK,GAAG,MAAAwG,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAzG,uBAAA,CAAAC,OAAA,CAAa,SAAS,GAAC;UACrC,MAAMyG,MAAM,GAAGpD,IAAI,CAACqD,KAAK,CAAC5G,KAAK,EAAE,KAAK,CAAC;UACvCsF,UAAU,CAACU,aAAa,CAAC;YAAET,OAAO;YAAEL;UAAkB,CAAC,CAAC;UACxDY,MAAM,CAACa,MAAM,CAAC,CAACZ,oBAAoB,CAAC1F,IAAI,CAAC8D,aAAa,CAAC;YAAEe,iBAAiB;YAAEK;UAAQ,CAAC,CAAC,EAAE;YAAEsB,OAAO,EAAE;cAAEC,MAAM,EAAE;YAAM;UAAE,CAAC,CAAC;QACzH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFrB,QAAQ,CAAC,iBAAiB,EAAE,MAAM;MAChCG,EAAE,CAAC,0CAA0C,EAAE,MAAM;QACnDN,UAAU,CAACyB,eAAe,CAAC;UAAExB,OAAO;UAAEL;QAAkB,CAAC,CAAC;QAC1DY,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAAC+D,eAAe,CAAC;UAAEc,iBAAiB;UAAEK;QAAQ,CAAC,CAAC,CAAC;MACxF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFE,QAAQ,CAAC,aAAa,EAAE,MAAM;MAC5BG,EAAE,CAAC,uCAAuC,EAAE,MAAM;QAChDN,UAAU,CAAC0B,WAAW,CAAC;UAAE7B,iBAAiB;UAAED;QAAkB,CAAC,CAAC;QAChEY,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAACgE,YAAY,CAAC;UAAEa,iBAAiB;UAAEC;QAAkB,CAAC,CAAC,CAAC;MAC/F,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFM,QAAQ,CAAC,oBAAoB,EAAE,MAAM;MACnCG,EAAE,CAAC,2CAA2C,EAAE,MAAM;QACpDN,UAAU,CAAC2B,kBAAkB,CAAC;UAAE9B,iBAAiB;UAAED;QAAkB,CAAC,CAAC;QACvEY,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAACqE,gBAAgB,CAAC;UAAEQ,iBAAiB;UAAEC;QAAkB,CAAC,CAAC,CAAC;MACnG,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFM,QAAQ,CAAC,aAAa,EAAE,MAAM;MAC5BG,EAAE,CAAC,uCAAuC,EAAE,MAAM;QAChDN,UAAU,CAAC4B,WAAW,CAAC;UAAE/B,iBAAiB;UAAED;QAAkB,CAAC,CAAC;QAChEY,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAACyE,YAAY,CAAC;UAAEI,iBAAiB;UAAEC;QAAkB,CAAC,CAAC,CAAC;MAC/F,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFM,QAAQ,CAAC,uBAAuB,EAAE,MAAM;MACtCG,EAAE,CAAC,gDAAgD,EAAE,MAAM;QACzDN,UAAU,CAAC6B,qBAAqB,CAAC;UAAEhC,iBAAiB;UAAED;QAAkB,CAAC,CAAC;QAC1EY,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAACsE,qBAAqB,CAAC;UAAEO,iBAAiB;UAAEC;QAAkB,CAAC,CAAC,CAAC;MACxG,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFM,QAAQ,CAAC,kBAAkB,EAAE,MAAM;MACjC2B,IAAI,CAAC,kCAAkC,EAAE,MAAM;QAC7C,MAAMC,OAAO,GAAG,oIAAoI;QACpJvB,MAAM,CAACR,UAAU,CAACgC,gBAAgB,CAAC;UACjC/B,OAAO;UACPgC,SAAS,EAAE,MAAM;UACjBF,OAAO;UACPlC,iBAAiB;UACjBK;QACF,CAAC,CAAC,CAAC,CAACgC,OAAO,CAAC;UACVC,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAEvC,iBAAiB;UAC5BwC,IAAI,EAAEN,OAAO;UACbO,WAAW,EAAE,IAAI;UACjBC,EAAE,EAAEtC,OAAO;UACXuC,QAAQ,EAAE;YAAEC,YAAY,EAAEvC;UAAM;QAClC,CAAC,CAAC;MACJ,CAAC,CAAC;MACF4B,IAAI,CAAC,mCAAmC,EAAE,MAAM;QAC9C,MAAMC,OAAO,GAAG;UACdW,WAAW,EAAE,aAAa;UAC1BC,cAAc,EAAE,gBAAgB;UAChCC,mBAAmB,EAAE,qBAAqB;UAC1CC,iBAAiB,EAAE;YACjBC,KAAK,EAAE,YAAY;YACnBvF,KAAK,EAAE;UACT,CAAC;UACDwF,SAAS,EAAE,WAAW;UACtBC,WAAW,EAAE,aAAa;UAC1BC,wBAAwB,EAAE,0BAA0B;UACpDC,QAAQ,EAAE;YACRC,SAAS,EAAE,UAAU;YACrBC,QAAQ,EAAE;UACZ,CAAC;UACDC,uBAAuB,EAAE,yBAAyB;UAClDC,OAAO,EAAE,SAAS;UAClBC,WAAW,EAAE,aAAa;UAC1BC,cAAc,EAAE;QAClB,CAAC;QACD,MAAMC,YAAY,GAAG,cAAc;QACnC,MAAMC,UAAU,GAAG,YAAY;QAC/B,MAAMC,SAAS,GAAG,WAAW;QAC7B,MAAMC,OAAO,GAAG,SAAS;QACzB3F,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,iBAAiB,CAAC,CAAC+D,eAAe,CAAC;UACjD6E,YAAY;UACZC,UAAU;UACVC;QACF,CAAC,CAAC;QACF1F,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,gBAAgB,CAAC,CAAC+D,eAAe,CAACgF,OAAO,CAAC;QAC1DpD,MAAM,CAACR,UAAU,CAACgC,gBAAgB,CAAC;UACjC/B,OAAO;UACPgC,SAAS,EAAE,OAAO;UAClBF,OAAO;UACPlC,iBAAiB;UACjBK;QACF,CAAC,CAAC,CAAC,CAACgC,OAAO,CAAC;UACVC,QAAQ,EAAE,OAAO;UACjBC,SAAS,EAAEvC,iBAAiB;UAC5B4C,YAAY,EAAEvC,KAAK;UACnBqC,EAAE,EAAEtC,OAAO;UACXuC,QAAQ,EAAE;YACRC,YAAY,EAAEvC,KAAK;YACnB2D,cAAc,EAAE9B,OAAO,CAACa,mBAAmB;YAC3CkB,aAAa,EAAE/B,OAAO,CAACc,iBAAiB,CAACtF,KAAK;YAC9CwG,YAAY,EAAEL,UAAU;YACxBM,aAAa,EAAEP,YAAY;YAC3BQ,cAAc,EAAEN,SAAS;YACzBZ,SAAS,EAAEhB,OAAO,CAACgB,SAAS;YAC5BmB,cAAc,EAAEnC,OAAO,CAACkB,wBAAwB;YAChDkB,KAAK,EAAE,EAAE;YACTC,aAAa,EAAErC,OAAO,CAACsB,uBAAuB;YAC9CC,OAAO,EAAEvB,OAAO,CAACuB,OAAO;YACxBe,UAAU,EAAEtC,OAAO,CAACmB,QAAQ,CAACC,SAAS;YACtCmB,QAAQ,EAAEvC,OAAO,CAACmB,QAAQ,CAACE,QAAQ;YACnCQ;UACF;QACF,CAAC,CAAC;QACF3F,IAAI,CAACsG,eAAe,CAAC,CAAC;MACxB,CAAC,CAAC;MACFzC,IAAI,CAAC,mCAAmC,EAAE,MAAM;QAC9CtB,MAAM,CAAC,MAAM;UAAER,UAAU,CAACgC,gBAAgB,CAAC;YAAEC,SAAS,EAAE;UAAmB,CAAC,CAAC;QAAE,CAAC,CAAC,CAC9EuC,OAAO,CAACzG,SAAS,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFoC,QAAQ,CAAC,WAAW,EAAE,MAAM;MAC1B,MAAM4B,OAAO,GAAG,oIAAoI;MACpJzB,EAAE,CAAC,uDAAuD,EAAE,MAAM;QAChEN,UAAU,CAACyE,SAAS,CAAC;UACnBxE,OAAO;UACPgC,SAAS,EAAE,MAAM;UACjBF,OAAO;UACPlC,iBAAiB;UACjBD,iBAAiB;UACjBM;QACF,CAAC,CAAC;QACFM,MAAM,CAACV,YAAI,CAAC,CAACW,oBAAoB,CAC/B1F,IAAI,CAAC2D,KAAK,CAAC;UAAEkB;QAAkB,CAAC,CAAC,EACjCI,UAAU,CAACgC,gBAAgB,CAAC;UAC1BC,SAAS,EAAE,MAAM;UACjBF,OAAO;UACP9B,OAAO;UACPJ,iBAAiB;UACjBK;QACF,CAAC,CACH,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFC,QAAQ,CAAC,aAAa,EAAE,MAAM;MAC5B,MAAMuE,KAAK,GAAG;QAAEC,KAAK,EAAE;MAAO,CAAC;MAC/BrE,EAAE,CAAC,qDAAqD,EAAE,MAAM;QAC9D,MAAMsE,YAAY,GAAG,IAAIC,QAAQ,CAAC,CAAC;QACnCD,YAAY,CAACE,MAAM,CAAC,MAAM,EAAEJ,KAAK,CAAC;QAClC1E,UAAU,CAAC+E,WAAW,CAAC;UACrBlF,iBAAiB;UACjBD,iBAAiB;UACjB8E;QACF,CAAC,CAAC;QACFlE,MAAM,CAACV,YAAI,CAAC,CAACW,oBAAoB,CAC/B1F,IAAI,CAACgE,YAAY,CAAC;UAAEa,iBAAiB;UAAEC;QAAkB,CAAC,CAAC,EAC3D+E,YACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFzE,QAAQ,CAAC,aAAa,EAAE,MAAM;MAC5BG,EAAE,CAAC,kDAAkD,EAAE,MAAM;QAC3D,MAAM+B,IAAI,GAAG;UAAE2C,KAAK,EAAE,CAAC;YAAEC,SAAS,EAAE,WAAW;YAAEC,YAAY,EAAE;UAAM,CAAC;QAAE,CAAC;QAEzElF,UAAU,CAACmF,WAAW,CAAC;UAAE9C,IAAI;UAAEzC,iBAAiB;UAAEC;QAAkB,CAAC,CAAC;QAEtEW,MAAM,CAACzF,IAAI,CAACyE,YAAY,CAAC,CAACiB,oBAAoB,CAAC;UAAEb,iBAAiB;UAAEC;QAAkB,CAAC,CAAC;QACxFW,MAAM,CAACV,YAAI,CAAC,CAACW,oBAAoB,CAC/B1F,IAAI,CAACyE,YAAY,CAAC;UAAEI,iBAAiB;UAAEC;QAAkB,CAAC,CAAC,EAC3DwC,IACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACFlC,QAAQ,CAAC,WAAW,EAAE,MAAM;IAC1BG,EAAE,CAAC,sEAAsE,EAAE,MAAM;MAC/E,MAAM,CAAC8E,IAAI,EAAEC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC;MAChD,MAAMC,SAAS,GAAG;QAAEC,IAAI,EAAE,YAAY;QAAEC,SAAS,EAAG,GAAEJ,IAAK,OAAMC,IAAK;MAAE,CAAC;MACzE7E,MAAM,CAAC3F,GAAG,CAAC4K,SAAS,CAACH,SAAS,CAAC,CAAC,CAACpD,OAAO,CAAApF,aAAA,CAAAA,aAAA,KACnCwI,SAAS;QACZE,SAAS,EAAE,IAAIE,IAAI,CAAE,GAAEN,IAAK,IAAGC,IAAK,EAAC,CAAC,CAACM,OAAO,CAAC;MAAC,EACjD,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACFxF,QAAQ,CAAC,YAAY,EAAE,MAAM;IAC3BG,EAAE,CAAC,2EAA2E,EAAE,MAAM;MACpF,MAAMsF,GAAG,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACxC,MAAMC,QAAQ,GAAG,CACf;QAAEtD,EAAE,EAAEqD,GAAG,CAAC,CAAC,CAAC;QAAEL,IAAI,EAAE;MAAO,CAAC,EAC5B;QAAEhD,EAAE,EAAEqD,GAAG,CAAC,CAAC,CAAC;QAAEE,KAAK,EAAE;MAAO,CAAC,EAC7B;QAAEvD,EAAE,EAAEqD,GAAG,CAAC,CAAC,CAAC;QAAEL,IAAI,EAAE;MAAO,CAAC,EAC5B;QAAEhD,EAAE,EAAEqD,GAAG,CAAC,CAAC,CAAC;QAAEE,KAAK,EAAE;MAAO,CAAC,CAC9B;MACD,MAAMC,YAAY,GAAGlL,GAAG,CAAC4K,SAAS;MAClC5K,GAAG,CAAC4K,SAAS,GAAIH,SAAS,KAAM;QAAEG,SAAS,EAAEH;MAAU,CAAC,CAAC;MACzD,MAAMU,GAAG,GAAGnL,GAAG,CAACoL,UAAU,CAACJ,QAAQ,CAAC;MACpCrF,MAAM,CAACwF,GAAG,CAAC,CAAC9D,OAAO,CAAC;QAClB,CAAC0D,GAAG,CAAC,CAAC,CAAC,GAAG/K,GAAG,CAAC4K,SAAS,CAACnH,QAAQ,CAACuH,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAACD,GAAG,CAAC,CAAC,CAAC,GAAG/K,GAAG,CAAC4K,SAAS,CAACnH,QAAQ,CAACuH,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAACD,GAAG,CAAC,CAAC,CAAC,GAAG/K,GAAG,CAAC4K,SAAS,CAACnH,QAAQ,CAACuH,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAACD,GAAG,CAAC,CAAC,CAAC,GAAG/K,GAAG,CAAC4K,SAAS,CAACnH,QAAQ,CAACuH,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/C,CAAC,CAAC;MACFhL,GAAG,CAAC4K,SAAS,GAAGM,YAAY;IAC9B,CAAC,CAAC;EACJ,CAAC,CAAC;EACF5F,QAAQ,CAAC,iBAAiB,EAAE,MAAM;IAChCA,QAAQ,CAAC,iBAAiB,EAAE,MAAM;MAChC,MAAM4C,SAAS,GAAG,MAAM;MACxB,MAAMmD,OAAO,GAAG,aAAa;MAC7B5F,EAAE,CAAC,+DAA+D,EAAE,MAAM;QACxE,MAAMsE,YAAY,GAAG,IAAIC,QAAQ,CAAC,CAAC;QACnCD,YAAY,CAACE,MAAM,CAAC,MAAM,EAAE/B,SAAS,CAAC;QACtC/C,UAAU,CAACmG,eAAe,CAAC;UACzBvG,iBAAiB;UACjBC,iBAAiB;UACjBqG,OAAO;UACPnD;QACF,CAAC,CAAC;QACFvC,MAAM,CAACV,YAAI,CAAC,CAACW,oBAAoB,CAC/B1F,IAAI,CAACmE,eAAe,CAAC;UAAEU,iBAAiB;UAAEC,iBAAiB;UAAEqG;QAAQ,CAAC,CAAC,EACvEtB,YACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACFzE,QAAQ,CAAC,kBAAkB,EAAE,MAAM;IACjC,MAAMiG,QAAQ,GAAG,IAAI;IACrB,MAAMF,OAAO,GAAG,aAAa;IAC7B,MAAMG,SAAS,GAAG,eAAe;IACjClG,QAAQ,CAAC,2BAA2B,EAAE,MAAM;MAC1C,MAAMmG,OAAO,GAAI,eAAcrG,OAAQ,0CAAyCoG,SAAU,6EAA4EH,OAAQ,MAAK;MACnL5F,EAAE,CAAC,oDAAoD,EAAE,MAAM;QAC7DN,UAAU,CAACb,yBAAyB,CAAC;UACnCS,iBAAiB;UACjBK,OAAO;UACPiG,OAAO;UACPG;QACF,CAAC,CAAC;QACF7F,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAACoE,yBAAyB,CAAC;UAC9DS,iBAAiB;UACjB2G,UAAU,EAAEC,kBAAkB,CAACF,OAAO;QACxC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ,CAAC,CAAC;IACFnG,QAAQ,CAAC,kBAAkB,EAAE,MAAM;MACjC,MAAMmG,OAAO,GAAI,eAAcrG,OAAQ,0CAAyCoG,SAAU,uBAAsB;MAChH/F,EAAE,CAAC,4CAA4C,EAAE,MAAM;QACrDN,UAAU,CAACyG,gBAAgB,CAAC;UAAE7G,iBAAiB;UAAEK,OAAO;UAAEoG;QAAU,CAAC,CAAC;QACtE7F,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAACuE,iBAAiB,CAAC;UACtDM,iBAAiB;UACjB2G,UAAU,EAAEC,kBAAkB,CAACF,OAAO;QACxC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ,CAAC,CAAC;IACFnG,QAAQ,CAAC,kBAAkB,EAAE,MAAM;MACjC,MAAMuG,UAAU,GAAG;QAAEA,UAAU,EAAE;MAAO,CAAC;MACzCpG,EAAE,CAAC,iEAAiE,EAAE,MAAM;QAC1E,MAAMsE,YAAY,GAAG,IAAIC,QAAQ,CAAC,CAAC;QACnCD,YAAY,CAACE,MAAM,CAAC,MAAM,EAAE4B,UAAU,CAAC;QACvC9B,YAAY,CAACE,MAAM,CAAC,cAAc,EAAEoB,OAAO,CAAC;QAC5CtB,YAAY,CAACE,MAAM,CAAC,eAAe,EAAEsB,QAAQ,CAAC;QAC9CxB,YAAY,CAACE,MAAM,CAAC,mBAAmB,EAAEsB,QAAQ,CAAC;QAClDpG,UAAU,CAAC2G,gBAAgB,CAAC;UAC1B1G,OAAO;UACPL,iBAAiB;UACjB8G,UAAU;UACVR,OAAO;UACPE;QACF,CAAC,CAAC;QACF5F,MAAM,CAACV,YAAI,CAAC,CAACW,oBAAoB,CAC/B1F,IAAI,CAACiE,gBAAgB,CAAC;UAAEY,iBAAiB;UAAEK;QAAQ,CAAC,CAAC,EACrD2E,YACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IACFzE,QAAQ,CAAC,mBAAmB,EAAE,MAAM;MAClCG,EAAE,CAAC,yEAAyE,EAAE,MAAM;QAClF,MAAMsG,cAAc,GAAG;UAAEvE,IAAI,EAAE;YAAEwE,IAAI,EAAET,QAAQ;YAAErC,YAAY,EAAEmC;UAAQ;QAAE,CAAC;QAC1ElG,UAAU,CAAC8G,gBAAgB,CAAC;UAC1B7G,OAAO;UACPL,iBAAiB;UACjBsG,OAAO;UACPE;QACF,CAAC,CAAC;QACF5F,MAAM,CAACT,oBAAY,CAAC,CAACU,oBAAoB,CACvC1F,IAAI,CAACiE,gBAAgB,CAAC;UAAEY,iBAAiB;UAAEK;QAAQ,CAAC,CAAC,EACrD2G,cACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IACFzG,QAAQ,CAAC,gBAAgB,EAAE,MAAM;MAC/BG,EAAE,CAAC,gEAAgE,EAAE,MAAM;QACzE,MAAMyG,QAAQ,GAAG;UAAE1E,IAAI,EAAE;YAAEwE,IAAI,EAAET,QAAQ;YAAErC,YAAY,EAAEmC;UAAQ;QAAE,CAAC;QACpElG,UAAU,CAACgH,aAAa,CAAC;UACvB/G,OAAO;UACPL,iBAAiB;UACjBsG,OAAO;UACPE;QACF,CAAC,CAAC;QACF5F,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAC7B,GAAE1F,IAAI,CAACiE,gBAAgB,CAAC;UAAEY,iBAAiB;UAAEK;QAAQ,CAAC,CAAE,kBAAiBmG,QAAS,EAAC,EACpFW,QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACF5G,QAAQ,CAAC,iBAAiB,EAAE,MAAM;IAChC,MAAMuD,UAAU,GAAG,YAAY;IAC/B,MAAMC,SAAS,GAAG,YAAY;IAC9B,MAAMsD,UAAU,GAAI,oBAAmBtD,SAAU,EAAC;IAClD,MAAMF,YAAY,GAAG,CACnB,SAAS,EACT,SAAS,CACV;IACD1C,SAAS,CAAC,MAAM;MACd9C,IAAI,CAACsG,eAAe,CAAC,CAAC;IACxB,CAAC,CAAC;IACFpE,QAAQ,CAAC,wBAAwB,EAAE,MAAM;MACvCC,UAAU,CAAC,MAAM;QACfnC,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,YAAY,CAAC,CAAC+D,eAAe,CAAC,IAAI,CAAC;QACnDX,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,gBAAgB,CAAC,CAAC+D,eAAe,CAAC+E,SAAS,CAAC;MAC9D,CAAC,CAAC;MACFrD,EAAE,CAAC,qDAAqD,EAAE,MAAM;QAC9DE,MAAM,CAAC3F,GAAG,CAACqM,eAAe,CAAC;UACzBC,QAAQ,EAAE,EAAE;UACZxE,cAAc,EAAE,EAAE;UAClBuD,OAAO,EAAExC;QACX,CAAC,CAAC,CAAC,CAACxB,OAAO,CAAC;UACVwB,UAAU;UACVD,YAAY,EAAE,EAAE;UAChBE,SAAS,EAAE;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;MACFrD,EAAE,CAAC,mEAAmE,EAAE,MAAM;QAC5EE,MAAM,CAAC3F,GAAG,CAACqM,eAAe,CAAC;UACzBC,QAAQ,EAAEF,UAAU;UACpBtE,cAAc,EAAEc,YAAY;UAC5ByC,OAAO,EAAExC;QACX,CAAC,CAAC,CAAC,CAACxB,OAAO,CAAC;UACVwB,UAAU;UACVD,YAAY;UACZE;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACFxD,QAAQ,CAAC,2BAA2B,EAAE,MAAM;MAC1CC,UAAU,CAAC,MAAM;QACfnC,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,YAAY,CAAC,CAAC+D,eAAe,CAAC,KAAK,CAAC;QACpDX,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,gBAAgB,CAAC,CAAC+D,eAAe,CAAC+E,SAAS,CAAC;MAC9D,CAAC,CAAC;MACFrD,EAAE,CAAC,oDAAoD,EAAE,MAAM;QAC7DE,MAAM,CAAC3F,GAAG,CAACqM,eAAe,CAAC;UACzBC,QAAQ,EAAEF,UAAU;UACpBtE,cAAc,EAAE,EAAE;UAClBuD,OAAO,EAAE;QACX,CAAC,CAAC,CAAC,CAAChE,OAAO,CAAC;UACVwB,UAAU,EAAE,EAAE;UACdD,YAAY,EAAE,EAAE;UAChBE;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACFrD,EAAE,CAAC,kEAAkE,EAAE,MAAM;QAC3EE,MAAM,CAAC3F,GAAG,CAACqM,eAAe,CAAC;UACzBC,QAAQ,EAAEF,UAAU;UACpBtE,cAAc,EAAEc,YAAY;UAC5ByC,OAAO,EAAE;QACX,CAAC,CAAC,CAAC,CAAChE,OAAO,CAAC;UACVwB,UAAU,EAAE,EAAE;UACdD,YAAY;UACZE;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACFxD,QAAQ,CAAC,uCAAuC,EAAE,MAAM;MACtDC,UAAU,CAAC,MAAM;QACfnC,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,YAAY,CAAC,CAAC+D,eAAe,CAAC,KAAK,CAAC;QACpDX,IAAI,CAACqD,KAAK,CAACzG,GAAG,EAAE,gBAAgB,CAAC,CAAC+D,eAAe,CAAC,IAAI,CAAC;MACzD,CAAC,CAAC;MACF0B,EAAE,CAAC,uDAAuD,EAAE,MAAM;QAChEE,MAAM,CAAC3F,GAAG,CAACqM,eAAe,CAAC;UACzBC,QAAQ,EAAE1D,YAAY,CAAC,CAAC,CAAC;UACzBd,cAAc,EAAE,EAAE;UAClBuD,OAAO,EAAE;QACX,CAAC,CAAC,CAAC,CAAChE,OAAO,CAAC;UACVwB,UAAU,EAAE,EAAE;UACdD,YAAY,EAAE,CAACA,YAAY,CAAC,CAAC,CAAC,CAAC;UAC/BE,SAAS,EAAE;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;MACFrD,EAAE,CAAC,oDAAoD,EAAE,MAAM;QAC7DE,MAAM,CAAC3F,GAAG,CAACqM,eAAe,CAAC;UACzBC,QAAQ,EAAE1D,YAAY,CAAC,CAAC,CAAC;UACzBd,cAAc,EAAE,CAACc,YAAY,CAAC,CAAC,CAAC,CAAC;UACjCyC,OAAO,EAAE;QACX,CAAC,CAAC,CAAC,CAAChE,OAAO,CAAC;UACVwB,UAAU,EAAE,EAAE;UACdD,YAAY;UACZE,SAAS,EAAE;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACFxD,QAAQ,CAAC,YAAY,EAAE,MAAM;IAC3BG,EAAE,CAAC,uCAAuC,EAAE,MAAM;MAChD,MAAMiC,EAAE,GAAG,sCAAsC;MACjD/B,MAAM,CAAC3F,GAAG,CAACuM,UAAU,CAAC7E,EAAE,CAAC,CAAC,CAACL,OAAO,CAAC,IAAI,CAAC;IAC1C,CAAC,CAAC;IACF5B,EAAE,CAAC,4CAA4C,EAAE,MAAM;MACrD,MAAMiC,EAAE,GAAG,aAAa;MACxB/B,MAAM,CAAC3F,GAAG,CAACuM,UAAU,CAAC7E,EAAE,CAAC,CAAC,CAACL,OAAO,CAAC,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,CAAC;EACF/B,QAAQ,CAAC,gBAAgB,EAAE,MAAM;IAC/BG,EAAE,CAAC,kCAAkC,EAAE,MAAM;MAC3C,MAAMiC,EAAE,GAAG,aAAa;MACxB,MAAM8E,QAAQ,GAAG,CACf,8DAA8D,EAC9D,6CAA6C,EAC7C,4CAA4C,EAC5C,uCAAuC,EACvC,qCAAqC,EACrC,yCAAyC,EACzC,wCAAwC,EACxC,mCAAmC,EACnC,iCAAiC,EACjC,2CAA2C,EAC3C,0CAA0C,EAC1C,qCAAqC,EACrC,mCAAmC,EACnC,qDAAqD,EACrD,oDAAoD,EACpD,+CAA+C,EAC/C,6CAA6C,EAC7C,yCAAyC,EACzC,sDAAsD,EACtD,2CAA2C,EAC3C,0CAA0C,EAC1C,qCAAqC,EACrC,mCAAmC,EACnC,uCAAuC,EACvC,sCAAsC,EACtC,iCAAiC,EACjC,+BAA+B,EAC/B,oCAAoC,EACpC,8BAA8B,EAC9B,6BAA6B,EAC7B,wBAAwB,EACxB,sBAAsB,CACvB;MACDA,QAAQ,CAACpK,OAAO,CAAEqK,GAAG,IAAK;QACxB9G,MAAM,CAAC3F,GAAG,CAAC0M,cAAc,CAACD,GAAG,CAAC,CAAC,CAACpF,OAAO,CAACK,EAAE,CAAC;MAC7C,CAAC,CAAC;IACJ,CAAC,CAAC;IACFjC,EAAE,CAAC,8CAA8C,EAAE,MAAM;MACvD,MAAMkH,MAAM,GAAG,uCAAuC;MACtDhH,MAAM,CAAC3F,GAAG,CAAC0M,cAAc,CAACC,MAAM,CAAC,CAAC,CAACtF,OAAO,CAAC,IAAI,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC,CAAC;EACF/B,QAAQ,CAAC,gBAAgB,EAAE,MAAM;IAC/BG,EAAE,CAAC,4EAA4E,EAAE,MAAM;MACrFE,MAAM,CAAC3F,GAAG,CAAC4M,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAACvF,OAAO,CAAC,EAAE,CAAC;MAC9C1B,MAAM,CAAC3F,GAAG,CAAC4M,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAACvF,OAAO,CAAC,EAAE,CAAC;IAC3D,CAAC,CAAC;IACF5B,EAAE,CAAC,+DAA+D,EAAE,MAAM;MACxE,MAAMiD,WAAW,GAAG,kBAAkB;MACtC,MAAMC,cAAc,GAAG;QACrBkE,WAAW,EAAE,IAAI;QACjBC,aAAa,EAAE,KAAK;QACpBC,aAAa,EAAE,IAAI;QACnBC,UAAU,EAAE;MACd,CAAC;MACDrH,MAAM,CAAC3F,GAAG,CAAC4M,cAAc,CAAClE,WAAW,EAAEC,cAAc,CAAC,CAAC,CAACtB,OAAO,CAAC,iCAAiC,CAAC;IACpG,CAAC,CAAC;IACF5B,EAAE,CAAC,+DAA+D,EAAE,MAAM;MACxE,MAAMiD,WAAW,GAAG,qBAAqB;MACzC,MAAMC,cAAc,GAAG,CAAC,CAAC;MACzBhD,MAAM,CAAC3F,GAAG,CAAC4M,cAAc,CAAClE,WAAW,EAAEC,cAAc,CAAC,CAAC,CAACtB,OAAO,CAAC,qBAAqB,CAAC;IACxF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF/B,QAAQ,CAAC,cAAc,EAAE,MAAM;IAC7B,MAAM2H,OAAO,GAAGlH,OAAO,CAACC,GAAG;IAC3BT,UAAU,CAAC,MAAM;MACfnC,IAAI,CAAC6C,YAAY,CAAC,CAAC;MACnBF,OAAO,CAACC,GAAG,GAAA/D,aAAA,KAAQgL,OAAO,CAAE;IAC9B,CAAC,CAAC;IACF/G,SAAS,CAAC,MAAM;MACdH,OAAO,CAACC,GAAG,GAAGiH,OAAO;IACvB,CAAC,CAAC;IACF3H,QAAQ,CAAC,iCAAiC,EAAE,MAAM;MAChDG,EAAE,CAAC,4DAA4D,EAAE,MAAM;QACrEM,OAAO,CAACC,GAAG,CAACkH,oBAAoB,GAAG,IAAI;QACvCvH,MAAM,CAAC3F,GAAG,CAACmN,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC9F,OAAO,CAACpH,OAAO,CAACyF,cAAc,CAAC;MAC5E,CAAC,CAAC;MACFD,EAAE,CAAC,0DAA0D,EAAE,MAAM;QACnEM,OAAO,CAACC,GAAG,CAACkH,oBAAoB,GAAG,IAAI;QACvCvH,MAAM,CAAC3F,GAAG,CAACmN,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC9F,OAAO,CAACpH,OAAO,CAACmN,SAAS,CAAC;MACxE,CAAC,CAAC;IACJ,CAAC,CAAC;IACF9H,QAAQ,CAAC,qCAAqC,EAAE,MAAM;MACpDG,EAAE,CAAC,oCAAoC,EAAE,MAAM;QAC7CE,MAAM,CAAC3F,GAAG,CAACmN,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC9F,OAAO,CAAClC,UAAU,CAACO,cAAc,CAAC;MAC/E,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACFJ,QAAQ,CAAC,oBAAoB,EAAE,MAAM;IACnCG,EAAE,CAAC,wCAAwC,EAAE,MAAM;MACjD,MAAM4H,IAAI,GAAG;QAAEtI;MAAkB,CAAC;MAClCI,UAAU,CAACmI,kBAAkB,CAAArL,aAAA,KAAMoL,IAAI,CAAE,CAAC;MAC1C1H,MAAM,CAAC/E,WAAG,CAAC,CAACgF,oBAAoB,CAAC1F,IAAI,CAACwE,aAAa,CAAAzC,aAAA,KAAMoL,IAAI,CAAE,CAAC,CAAC;IACnE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}