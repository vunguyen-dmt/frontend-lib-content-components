{"version":3,"file":"ReactStateOLXParser.test.js","names":["_OLXParser","require","_olxTestData","_editorTestData","_ReactStateOLXParser","_interopRequireDefault","obj","__esModule","default","describe","test","olxparser","OLXParser","checkboxesOLXWithFeedbackAndHintsOLX","rawOLX","problem","getParsedOLXData","stateParser","ReactStateOLXParser","editorObject","checkboxesWithFeedbackAndHints","buildOLX","expect","replace","toBe","dropdownOLXWithFeedbackAndHintsOLX","dropdownWithFeedbackAndHints","toEqual","textInputWithFeedbackAndHintsOLX","textInputWithFeedbackAndHints","multipleChoiceWithFeedbackAndHintsOLX","multipleChoiceWithFeedbackAndHints","it","question","received","addQuestion","p","label","em","numericInputWithFeedbackAndHintsOLX","numericInputWithFeedbackAndHints","numericInputWithAnswerRangeOLX","numericInputWithAnswerRange","textInputWithFeedbackAndHintsOLXWithMultipleAnswers","textInputWithFeedbackAndHintsWithMultipleAnswers","numberParseTestOLX","numberParseTest","problemType","answers","hints"],"sources":["../../../../../src/editors/containers/ProblemEditor/data/ReactStateOLXParser.test.js"],"sourcesContent":["import { OLXParser } from './OLXParser';\nimport {\n  checkboxesOLXWithFeedbackAndHintsOLX,\n  dropdownOLXWithFeedbackAndHintsOLX,\n  numericInputWithFeedbackAndHintsOLX,\n  numericInputWithAnswerRangeOLX,\n  textInputWithFeedbackAndHintsOLX,\n  multipleChoiceWithFeedbackAndHintsOLX,\n  textInputWithFeedbackAndHintsOLXWithMultipleAnswers,\n  numberParseTestOLX,\n} from './mockData/olxTestData';\nimport {\n  checkboxesWithFeedbackAndHints,\n  dropdownWithFeedbackAndHints,\n  textInputWithFeedbackAndHints,\n  multipleChoiceWithFeedbackAndHints,\n  numericInputWithFeedbackAndHints,\n  numericInputWithAnswerRange,\n  textInputWithFeedbackAndHintsWithMultipleAnswers,\n  numberParseTest,\n} from './mockData/editorTestData';\nimport ReactStateOLXParser from './ReactStateOLXParser';\n\ndescribe('Check React State OLXParser problem', () => {\n  test('for checkbox with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(checkboxesOLXWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: checkboxesWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toBe(checkboxesOLXWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test dropdown with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(dropdownOLXWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: dropdownWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(dropdownOLXWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test string response with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(textInputWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: textInputWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(textInputWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  describe('Multiple choice with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(multipleChoiceWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: multipleChoiceWithFeedbackAndHints,\n    });\n\n    it('should parse correctly', () => {\n      const buildOLX = stateParser.buildOLX();\n      expect(buildOLX.replace(/\\s/g, '')).toEqual(multipleChoiceWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n    });\n  });\n\n  describe('with label and em tag wrapped in div: ', () => {\n    const olxparser = new OLXParser(multipleChoiceWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: multipleChoiceWithFeedbackAndHints,\n    });\n    stateParser.editorObject.question = '<p>You can use this template as a guide to the simple editor markdown and OLX markup to use for multiple choice with hints and feedback problems. Edit this component to replace this template with your own assessment.</p>\\n<div><label>Add the question text, or prompt, here. This text is required.</label> <em class=\"olx_description\">You can add an optional tip or note related to the prompt like this. </em><em>Just a generic em tag</em></div>';\n\n    it('parser should not delete <em> tags', () => {\n      const buildOLX = stateParser.buildOLX();\n      expect(buildOLX.replace(/\\s/g, '')).toEqual(multipleChoiceWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n    });\n\n    it('addQuestion method should add a question to the problemState correctly', () => {\n      const received = stateParser.addQuestion();\n      expect(received).toEqual(\n        [\n          { p: [{ '#text': 'You can use this template as a guide to the simple editor markdown and OLX markup to use for multiple choice with hints and feedback problems. Edit this component to replace this template with your own assessment.' }] },\n          { label: [{ '#text': 'Add the question text, or prompt, here. This text is required.' }] },\n          { '#text': ' ' },\n          { em: [{ '#text': 'You can add an optional tip or note related to the prompt like this. ' }], ':@': { '@_class': 'olx_description' } },\n          { em: [{ '#text': 'Just a generic em tag' }] },\n        ],\n      );\n    });\n  });\n\n  test('Test numerical response with feedback and hints problem type', () => {\n    const olxparser = new OLXParser(numericInputWithFeedbackAndHintsOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: numericInputWithFeedbackAndHints,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(numericInputWithFeedbackAndHintsOLX.buildOLX.replace(/\\s/g, ''));\n  });\n\n  test('Test numerical response with isAnswerRange true', () => {\n    const olxparser = new OLXParser(numericInputWithAnswerRangeOLX.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: numericInputWithAnswerRange,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(numericInputWithAnswerRangeOLX.buildOLX.replace(/\\s/g, ''));\n  });\n  test('Test string response with feedback and hints, multiple answers', () => {\n    const olxparser = new OLXParser(textInputWithFeedbackAndHintsOLXWithMultipleAnswers.rawOLX);\n    const problem = olxparser.getParsedOLXData();\n    const stateParser = new ReactStateOLXParser({\n      problem,\n      editorObject: textInputWithFeedbackAndHintsWithMultipleAnswers,\n    });\n    const buildOLX = stateParser.buildOLX();\n    expect(buildOLX.replace(/\\s/g, '')).toEqual(textInputWithFeedbackAndHintsOLXWithMultipleAnswers.buildOLX.replace(/\\s/g, ''));\n  });\n  describe('encode/decode', () => {\n    test('does not change hex values to dec and does not remove leading 0s', () => {\n      const olxparser = new OLXParser(numberParseTestOLX.rawOLX);\n      const problem = olxparser.getParsedOLXData();\n      const stateParser = new ReactStateOLXParser({\n        problem,\n        editorObject: numberParseTest,\n      });\n      const buildOLX = stateParser.buildOLX();\n      expect(buildOLX.replace(/\\s/g, '')).toEqual(numberParseTestOLX.buildOLX.replace(/\\s/g, ''));\n    });\n    test('correctly preserves whitespace inside pre tags', () => {\n      const stateParser = new ReactStateOLXParser({\n        problem: { problemType: 'optionresponse', answers: [] },\n        editorObject: { question: '<pre>  1  a<br />  2  b<br /></pre>', hints: [] },\n      });\n      const buildOLX = stateParser.buildOLX();\n      expect(buildOLX).toEqual(\n        '<problem><optionresponse>\\n<pre>  1  a<br/>  2  b<br/></pre><optioninput></optioninput></optionresponse>\\n</problem>',\n      );\n    });\n  });\n});\n"],"mappings":"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"}