{"version":3,"file":"hooks.test.js","names":["_react","_interopRequireDefault","require","_testUtils","_module","_interopRequireWildcard","_problem","_problem2","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","jest","mock","requireActual","useState","val","useEffect","fn","state","MockUseState","module","mockUpdateField","mockName","mockSelected","mockAdvancedSelected","mockSetSelected","mocksetBlockTitle","mockDefaultSettings","max_attempts","rerandomize","showR_reset_button","showanswer","hook","describe","beforeEach","afterEach","restore","clearAllMocks","selectHooks","test","expect","selected","toEqual","ProblemTypeKeys","SINGLESELECT","expectedArg","mockVal","setSelected","setState","toHaveBeenCalledWith","onSelect","updateField","setBlockTitle","problemType","ADVANCED","rawOLX","AdvanceProblems","template","title","defaultSettings","testState","getDataFromOlx","ProblemTypes","rawSettings","weight","attempts_before_showanswer_button","show_reset_button","document","body","innerHTML","mockKeyUp","KeyboardEvent","mockKeyDown","cb","prereqs","useArrowNav","React","calls","toStrictEqual","dispatchEvent","TEXTINPUT","MULTISELECT","DROPDOWN","NUMERIC"],"sources":["../../../../../../src/editors/containers/ProblemEditor/components/SelectTypeModal/hooks.test.js"],"sourcesContent":["/* eslint-disable prefer-destructuring */\nimport React from 'react';\nimport { MockUseState } from '../../../../../testUtils';\nimport * as module from './hooks';\nimport { AdvanceProblems, ProblemTypeKeys, ProblemTypes } from '../../../../data/constants/problem';\nimport { getDataFromOlx } from '../../../../data/redux/thunkActions/problem';\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  useState: (val) => ({ useState: val }),\n  useEffect: jest.fn(),\n}));\n\nconst state = new MockUseState(module);\nconst mockUpdateField = jest.fn().mockName('updateField');\nconst mockSelected = 'multiplechoiceresponse';\nconst mockAdvancedSelected = 'circuitschematic';\nconst mockSetSelected = jest.fn().mockName('setSelected');\nconst mocksetBlockTitle = jest.fn().mockName('setBlockTitle');\nconst mockDefaultSettings = {\n  max_attempts: null,\n  rerandomize: 'never',\n  showR_reset_button: false,\n  showanswer: 'always',\n};\n\nlet hook;\n\ndescribe('SelectTypeModal hooks', () => {\n  beforeEach(() => {\n    state.mock();\n  });\n  afterEach(() => {\n    state.restore();\n    jest.clearAllMocks();\n  });\n\n  describe('selectHooks', () => {\n    beforeEach(() => {\n      hook = module.selectHooks();\n    });\n    test('selected defaults to SINGLESELECT', () => {\n      expect(hook.selected).toEqual(ProblemTypeKeys.SINGLESELECT);\n    });\n    test('setSelected sets state as expected', () => {\n      const expectedArg = 'neWvAl';\n      state.mockVal(state.keys.selected, 'mOcKvAl');\n      hook.setSelected(expectedArg);\n      expect(state.setState.selected).toHaveBeenCalledWith(expectedArg);\n    });\n  });\n\n  describe('onSelect', () => {\n    test('updateField is called with selected templated if selected is an Advanced Problem', () => {\n      module.onSelect({\n        selected: mockAdvancedSelected,\n        updateField: mockUpdateField,\n        setBlockTitle: mocksetBlockTitle,\n      })();\n      expect(mockUpdateField).toHaveBeenCalledWith({\n        problemType: ProblemTypeKeys.ADVANCED,\n        rawOLX: AdvanceProblems[mockAdvancedSelected].template,\n      });\n      expect(mocksetBlockTitle).toHaveBeenCalledWith(AdvanceProblems[mockAdvancedSelected].title);\n    });\n    test('updateField is called with selected on visual propblems', () => {\n      module.onSelect({\n        selected: mockSelected,\n        updateField: mockUpdateField,\n        setBlockTitle: mocksetBlockTitle,\n        defaultSettings: mockDefaultSettings,\n      })();\n      // const testOlXParser = new OLXParser(ProblemTypes[mockSelected].template);\n      const testState = getDataFromOlx({\n        rawOLX: ProblemTypes[mockSelected].template,\n        rawSettings: {\n          weight: 1,\n          attempts_before_showanswer_button: 0,\n          show_reset_button: null,\n          showanswer: null,\n        },\n        defaultSettings: mockDefaultSettings,\n      });\n      expect(mockUpdateField).toHaveBeenCalledWith(testState);\n      expect(mocksetBlockTitle).toHaveBeenCalledWith(ProblemTypes[mockSelected].title);\n    });\n  });\n\n  describe('useArrowNav', () => {\n    document.body.innerHTML = `\n      <div id=\"multiplechoiceresponse\" />\n      <div id=\"choiceresponse\" />\n      <div id=\"optionresponse\" />\n      <div id=\"numericalresponse\" />\n      <div id=\"stringresponse\" />\n    `;\n    const mockKeyUp = new KeyboardEvent('keydown', { key: 'ArrowUp' });\n    const mockKeyDown = new KeyboardEvent('keydown', { key: 'ArrowDown' });\n    let cb;\n    let prereqs;\n\n    describe('SINGLESELECT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.SINGLESELECT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.SINGLESELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.TEXTINPUT);\n      });\n      test('pressing down arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.SINGLESELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.MULTISELECT);\n      });\n    });\n    describe('MULTISELECT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.MULTISELECT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets SINGLESELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.MULTISELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.SINGLESELECT);\n      });\n      test('pressing down arrow sets DROPDOWN', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.MULTISELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.DROPDOWN);\n      });\n    });\n    describe('DROPDOWN', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.DROPDOWN, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.DROPDOWN, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.MULTISELECT);\n      });\n      test('pressing down arrow sets NUMERIC', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.DROPDOWN, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.NUMERIC);\n      });\n    });\n    describe('NUMERIC', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.NUMERIC, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets DROPDOWN', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.NUMERIC, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.DROPDOWN);\n      });\n      test('pressing down arrow sets TEXTINPUT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.NUMERIC, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.TEXTINPUT);\n      });\n    });\n    describe('TEXTINPUT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.TEXTINPUT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets NUMERIC', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.TEXTINPUT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.NUMERIC);\n      });\n      test('pressing down arrow sets SINGLESELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.TEXTINPUT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.SINGLESELECT);\n      });\n    });\n  });\n});\n"],"mappings":"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"}