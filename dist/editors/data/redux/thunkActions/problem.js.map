{"version":3,"file":"problem.js","names":["_lodashEs","_interopRequireDefault","require","_2","requests","_interopRequireWildcard","_OLXParser","_SettingsParser","_problem","_ReactStateOLXParser","_olxTestData","_utils","_hooks","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","switchToAdvancedEditor","dispatch","getState","state","editorObject","fetchEditorContent","format","reactOLXParser","ReactStateOLXParser","problem","rawOLX","buildOLX","actions","updateField","problemType","ProblemTypeKeys","ADVANCED","exports","isBlankProblem","_ref","replace","blankProblemOLX","getDataFromOlx","_ref2","rawSettings","defaultSettings","olxParser","parsedProblem","OLXParser","getParsedOLXData","error","console","settings","parseSettings","data","parsedSettings","_","isEmpty","loadProblem","_ref3","setEnableTypeSelection","camelizeKeys","load","fetchAdvancedSettings","_ref4","advancedProblemSettingKeys","onSuccess","response","entries","_ref5","includes","onFailure","initializeProblem","blockValue","_default"],"sources":["../../../../../src/editors/data/redux/thunkActions/problem.js"],"sourcesContent":["import _ from 'lodash-es';\n/* eslint-disable import/no-cycle */\nimport { actions } from '..';\nimport * as requests from './requests';\nimport { OLXParser } from '../../../containers/ProblemEditor/data/OLXParser';\nimport { parseSettings } from '../../../containers/ProblemEditor/data/SettingsParser';\nimport { ProblemTypeKeys } from '../../constants/problem';\nimport ReactStateOLXParser from '../../../containers/ProblemEditor/data/ReactStateOLXParser';\nimport { blankProblemOLX } from '../../../containers/ProblemEditor/data/mockData/olxTestData';\nimport { camelizeKeys } from '../../../utils';\nimport { fetchEditorContent } from '../../../containers/ProblemEditor/components/EditProblemView/hooks';\n\nexport const switchToAdvancedEditor = () => (dispatch, getState) => {\n  const state = getState();\n  const editorObject = fetchEditorContent({ format: '' });\n  const reactOLXParser = new ReactStateOLXParser({ problem: state.problem, editorObject });\n  const rawOLX = reactOLXParser.buildOLX();\n  dispatch(actions.problem.updateField({ problemType: ProblemTypeKeys.ADVANCED, rawOLX }));\n};\n\nexport const isBlankProblem = ({ rawOLX }) => {\n  if (rawOLX.replace(/\\s/g, '') === blankProblemOLX.rawOLX) {\n    return true;\n  }\n  return false;\n};\n\nexport const getDataFromOlx = ({ rawOLX, rawSettings, defaultSettings }) => {\n  let olxParser;\n  let parsedProblem;\n  try {\n    olxParser = new OLXParser(rawOLX);\n    parsedProblem = olxParser.getParsedOLXData();\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('The Problem Could Not Be Parsed from OLX. redirecting to Advanced editor.', error);\n    return { problemType: ProblemTypeKeys.ADVANCED, rawOLX, settings: parseSettings(rawSettings, defaultSettings) };\n  }\n  if (parsedProblem?.problemType === ProblemTypeKeys.ADVANCED) {\n    return { problemType: ProblemTypeKeys.ADVANCED, rawOLX, settings: parseSettings(rawSettings, defaultSettings) };\n  }\n  const { settings, ...data } = parsedProblem;\n  const parsedSettings = { ...settings, ...parseSettings(rawSettings, defaultSettings) };\n  if (!_.isEmpty(rawOLX) && !_.isEmpty(data)) {\n    return { ...data, rawOLX, settings: parsedSettings };\n  }\n  return { settings: parsedSettings };\n};\n\nexport const loadProblem = ({ rawOLX, rawSettings, defaultSettings }) => (dispatch) => {\n  if (isBlankProblem({ rawOLX })) {\n    dispatch(actions.problem.setEnableTypeSelection(camelizeKeys(defaultSettings)));\n  } else {\n    dispatch(actions.problem.load(getDataFromOlx({ rawOLX, rawSettings, defaultSettings })));\n  }\n};\n\nexport const fetchAdvancedSettings = ({ rawOLX, rawSettings }) => (dispatch) => {\n  const advancedProblemSettingKeys = ['max_attempts', 'showanswer', 'show_reset_button', 'rerandomize'];\n  dispatch(requests.fetchAdvancedSettings({\n    onSuccess: (response) => {\n      const defaultSettings = {};\n      Object.entries(response.data).forEach(([key, value]) => {\n        if (advancedProblemSettingKeys.includes(key)) {\n          defaultSettings[key] = value.value;\n        }\n      });\n      dispatch(actions.problem.updateField({ defaultSettings: camelizeKeys(defaultSettings) }));\n      loadProblem({ rawOLX, rawSettings, defaultSettings })(dispatch);\n    },\n    onFailure: () => { loadProblem({ rawOLX, rawSettings, defaultSettings: {} })(dispatch); },\n  }));\n};\n\nexport const initializeProblem = (blockValue) => (dispatch) => {\n  const rawOLX = _.get(blockValue, 'data.data', {});\n  const rawSettings = _.get(blockValue, 'data.metadata', {});\n  dispatch(fetchAdvancedSettings({ rawOLX, rawSettings }));\n};\n\nexport default { initializeProblem, switchToAdvancedEditor, fetchAdvancedSettings };\n"],"mappings":"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"}