{"version":3,"file":"ShowAnswerCard.js","names":["_react","_interopRequireDefault","require","_propTypes","_reactRedux","_i18n","_paragon","_SettingsOption","_problem","_redux","_messages","_hooks","_jsxRuntime","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","ShowAnswerCard","_ref","showAnswer","updateSettings","defaultValue","intl","studioEndpointUrl","learningContextId","isLibrary","handleShowAnswerChange","handleAttemptsChange","showAttempts","useAnswerSettings","currentShowAnswer","on","showAnswerSection","jsxs","Fragment","children","jsx","className","FormattedMessage","messages","showAnswerSettingText","Hyperlink","destination","target","advancedSettingsLinkText","Form","Group","Control","as","onChange","values","ShowAnswerTypesKeys","map","answerType","optionDisplayName","ShowAnswerTypes","defaultMessage","formatMessage","type","afterAttempts","floatingLabel","showAnswerAttemptsInputLabel","title","showAnswerSettingsTitle","summary","exports","propTypes","intlShape","isRequired","PropTypes","any","solutionExplanation","string","func","bool","defaultProps","mapStateToProps","state","selectors","app","mapDispatchToProps","_default","injectIntl","connect"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/ShowAnswerCard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport { Form, Hyperlink } from '@openedx/paragon';\nimport SettingsOption from '../SettingsOption';\nimport { ShowAnswerTypes, ShowAnswerTypesKeys } from '../../../../../../data/constants/problem';\nimport { selectors } from '../../../../../../data/redux';\nimport messages from '../messages';\nimport { useAnswerSettings } from '../hooks';\n\nexport const ShowAnswerCard = ({\n  showAnswer,\n  updateSettings,\n  defaultValue,\n  // inject\n  intl,\n  // redux\n  studioEndpointUrl,\n  learningContextId,\n  isLibrary,\n}) => {\n  const {\n    handleShowAnswerChange,\n    handleAttemptsChange,\n    showAttempts,\n  } = useAnswerSettings(showAnswer, updateSettings);\n\n  const currentShowAnswer = showAnswer.on || defaultValue;\n\n  const showAnswerSection = (\n    <>\n      <div className=\"pb-2\">\n        <span>\n          <FormattedMessage {...messages.showAnswerSettingText} />\n        </span>\n      </div>\n      {!isLibrary && (\n        <div className=\"pb-4\">\n          <Hyperlink destination={`${studioEndpointUrl}/settings/advanced/${learningContextId}#showanswer`} target=\"_blank\">\n            <FormattedMessage {...messages.advancedSettingsLinkText} />\n          </Hyperlink>\n        </div>\n      )}\n      <Form.Group className=\"pb-0 mb-0\">\n        <Form.Control\n          as=\"select\"\n          value={currentShowAnswer}\n          onChange={handleShowAnswerChange}\n        >\n          {Object.values(ShowAnswerTypesKeys).map((answerType) => {\n            let optionDisplayName = ShowAnswerTypes[answerType];\n            if (answerType === defaultValue) {\n              optionDisplayName = { ...optionDisplayName, defaultMessage: `${optionDisplayName.defaultMessage} (Default)` };\n            }\n            return (\n              <option\n                key={answerType}\n                value={answerType}\n              >\n                {intl.formatMessage(optionDisplayName)}\n              </option>\n            );\n          })}\n        </Form.Control>\n      </Form.Group>\n      {showAttempts\n        && (\n        <Form.Group className=\"pb-0 mb-0 mt-4\">\n          <Form.Control\n            type=\"number\"\n            value={showAnswer.afterAttempts}\n            onChange={handleAttemptsChange}\n            floatingLabel={intl.formatMessage(messages.showAnswerAttemptsInputLabel)}\n          />\n        </Form.Group>\n        )}\n    </>\n  );\n\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.showAnswerSettingsTitle)}\n      summary={intl.formatMessage(ShowAnswerTypes[currentShowAnswer])}\n    >\n      {showAnswerSection}\n    </SettingsOption>\n  );\n};\n\nShowAnswerCard.propTypes = {\n  intl: intlShape.isRequired,\n  // eslint-disable-next-line\n  showAnswer: PropTypes.any.isRequired,\n  solutionExplanation: PropTypes.string,\n  updateSettings: PropTypes.func.isRequired,\n  studioEndpointUrl: PropTypes.string.isRequired,\n  learningContextId: PropTypes.string,\n  isLibrary: PropTypes.bool.isRequired,\n  defaultValue: PropTypes.string,\n};\nShowAnswerCard.defaultProps = {\n  solutionExplanation: '',\n  learningContextId: null,\n  defaultValue: 'finished',\n};\n\nexport const mapStateToProps = (state) => ({\n  studioEndpointUrl: selectors.app.studioEndpointUrl(state),\n  learningContextId: selectors.app.learningContextId(state),\n  isLibrary: selectors.app.isLibrary(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ShowAnswerCard));\n"],"mappings":"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"}