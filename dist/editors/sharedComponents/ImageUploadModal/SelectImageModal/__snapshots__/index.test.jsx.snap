// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectImageModal component snapshot 1`] = `
<SelectionModal
  acceptedFiles={
    Object {
      "gif": ".gif",
      "ico": ".ico",
      "jpeg": ".jpeg",
      "jpg": ".jpg",
      "png": ".png",
      "tif": ".tif",
      "tiff": ".tiff",
    }
  }
  close={[MockFunction props.close]}
  fileInput={
    Object {
      "addFile": "imgHooks.fileInput.addFile",
      "click": "imgHooks.fileInput.click",
      "ref": "imgHooks.fileInput.ref",
    }
  }
  galleryError={
    Object {
      "dismiss": [MockFunction],
      "message": Object {
        "defaultMessage": "Gallery error",
        "description": "Gallery error",
        "id": "Gallery error id",
      },
      "set": [MockFunction],
      "show": "ShoWERror gAlLery",
    }
  }
  galleryProps={
    Object {
      "gallery": "props",
    }
  }
  inputError={
    Object {
      "dismiss": [MockFunction],
      "message": Object {
        "defaultMessage": "Input error",
        "description": "Input error",
        "id": "Input error id",
      },
      "set": [MockFunction],
      "show": "ShoWERror inPUT",
    }
  }
  isOpen={true}
  modalMessages={
    Object {
      "confirmMsg": Object {
        "defaultMessage": "Next",
        "description": "Label for Next button",
        "id": "authoring.texteditor.selectimagemodal.next.label",
      },
      "fetchError": Object {
        "defaultMessage": "Failed to obtain course images. Please try again.",
        "description": "Message presented to user when images are not found",
        "id": "authoring.texteditor.selectimagemodal.error.fetchImagesError",
      },
      "titleMsg": Object {
        "defaultMessage": "Add an image",
        "description": "Title for the select image modal",
        "id": "authoring.texteditor.selectimagemodal.title.label",
      },
      "uploadButtonMsg": Object {
        "defaultMessage": "Upload a new image (10 MB max)",
        "description": "Label for upload button",
        "id": "authoring.texteditor.selectimagemodal.upload.label",
      },
      "uploadError": Object {
        "defaultMessage": "Failed to upload image. Please try again.",
        "description": "Message presented to user when image fails to upload",
        "id": "authoring.texteditor.selectimagemodal.error.uploadImageError",
      },
    }
  }
  searchSortProps={
    Object {
      "search": "sortProps",
    }
  }
  selectBtnProps={
    Object {
      "select": "btnProps",
    }
  }
/>
`;
