{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_i18n","_paragon","_propTypes","_interopRequireDefault","_SettingsOption","_messages","_constants","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","isAnswerRangeSet","_ref","answers","isAnswerRange","exports","handleToleranceTypeChange","_ref2","updateSettings","tolerance","event","target","ToleranceTypes","none","type","newTolerance","selectedIndex","handleToleranceValueChange","_ref3","getSummary","_ref4","intl","percent","number","formatMessage","messages","noneToleranceSummary","ToleranceCard","_ref5","summary","useEffect","jsxs","title","toleranceSettingTitle","children","jsx","Alert","varaint","FormattedMessage","toleranceAnswerRangeWarning","className","toleranceSettingText","Form","Group","Control","as","onChange","disabled","map","toleranceType","message","floatingLabel","toleranceValueInputLabel","propTypes","PropTypes","shape","string","oneOfType","any","isRequired","arrayOf","correct","bool","id","selectedFeedback","unselectedFeedback","func","intlShape","_default","injectIntl"],"sources":["../../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/Tolerance/index.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport { Alert, Form } from '@edx/paragon';\nimport PropTypes from 'prop-types';\nimport SettingsOption from '../../SettingsOption';\nimport messages from './messages';\nimport { ToleranceTypes } from './constants';\n\n// eslint-disable-next-line no-unused-vars\nexport const isAnswerRangeSet = ({ answers }) => !!answers[0].isAnswerRange;\n\nexport const handleToleranceTypeChange = ({ updateSettings, tolerance, answers }) => (event) => {\n  if (!isAnswerRangeSet({ answers })) {\n    let value;\n    if (event.target.value === ToleranceTypes.none.type) {\n      value = null;\n    } else {\n      value = tolerance.value || 0;\n    }\n    const newTolerance = { type: ToleranceTypes[Object.keys(ToleranceTypes)[event.target.selectedIndex]].type, value };\n    updateSettings({ tolerance: newTolerance });\n  }\n};\n\nexport const handleToleranceValueChange = ({ updateSettings, tolerance, answers }) => (event) => {\n  if (!isAnswerRangeSet({ answers })) {\n    const newTolerance = { value: event.target.value, type: tolerance.type };\n    updateSettings({ tolerance: newTolerance });\n  }\n};\n\nexport const getSummary = ({ tolerance, intl }) => {\n  switch (tolerance?.type) {\n    case ToleranceTypes.percent.type:\n      return `± ${tolerance.value}%`;\n    case ToleranceTypes.number.type:\n      return `± ${tolerance.value}`;\n    case ToleranceTypes.none.type:\n      return intl.formatMessage(messages.noneToleranceSummary);\n    default:\n      return intl.formatMessage(messages.noneToleranceSummary);\n  }\n};\n\nexport const ToleranceCard = ({\n  tolerance,\n  answers,\n  updateSettings,\n  // inject\n  intl,\n}) => {\n  const isAnswerRange = isAnswerRangeSet({ answers });\n  let summary = getSummary({ tolerance, intl });\n  useEffect(() => { summary = getSummary({ tolerance, intl }); }, [tolerance]);\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.toleranceSettingTitle)}\n      summary={summary}\n      none={tolerance.type === ToleranceTypes.none.type}\n    >\n      { isAnswerRange\n       && (\n       <Alert\n         varaint=\"info\"\n       >\n         <FormattedMessage {...messages.toleranceAnswerRangeWarning} />\n       </Alert>\n       )}\n      <div className=\"mb-3\">\n        <span>\n          <FormattedMessage {...messages.toleranceSettingText} />\n        </span>\n      </div>\n      <Form.Group className=\"pb-0 mb-0\">\n        <Form.Control\n          as=\"select\"\n          onChange={handleToleranceTypeChange({ updateSettings, tolerance, answers })}\n          disabled={isAnswerRange}\n          value={tolerance.type}\n        >\n          {Object.keys(ToleranceTypes).map((toleranceType) => (\n            <option\n              key={toleranceType.type}\n              value={toleranceType.type}\n            >\n              {intl.formatMessage(ToleranceTypes[toleranceType].message)}\n            </option>\n          ))}\n        </Form.Control>\n        { tolerance?.type !== ToleranceTypes.none.type && !isAnswerRange\n          && (\n          <Form.Control\n            className=\"mt-4\"\n            type=\"number\"\n            value={tolerance.value}\n            onChange={handleToleranceValueChange({ updateSettings, tolerance, answers })}\n            floatingLabel={intl.formatMessage(messages.toleranceValueInputLabel)}\n          />\n          )}\n      </Form.Group>\n\n    </SettingsOption>\n  );\n};\n\nToleranceCard.propTypes = {\n  tolerance: PropTypes.shape({\n    type: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.any]),\n  }).isRequired,\n  answers: PropTypes.arrayOf(PropTypes.shape({\n    correct: PropTypes.bool,\n    id: PropTypes.string,\n    selectedFeedback: PropTypes.string,\n    title: PropTypes.string,\n    unselectedFeedback: PropTypes.string,\n  })).isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(ToleranceCard);\n"],"mappings":"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"}