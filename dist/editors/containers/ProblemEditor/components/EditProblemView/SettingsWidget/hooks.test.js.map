{"version":3,"file":"hooks.test.js","names":["_react","require","_testUtils","_messages","_interopRequireDefault","_utils","hooks","_interopRequireWildcard","_problem","editHooks","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","jest","mock","updateState","fn","useEffect","useState","val","state","newVal","defineMessages","m","actions","problem","updateSettings","args","updateField","updateAnswer","MockUseState","moduleKeys","keyStore","describe","output","beforeEach","afterEach","restore","mockClear","showAdvancedSettingsCards","test","expect","isAdvancedCardsVisible","toBeFalsy","showAdvancedCards","setState","showAdvanced","toHaveBeenCalledWith","showFullCard","isCardCollapsibleOpen","toggleCardCollapse","cardCollapsed","hints","hintsCardHooks","summary","not","toHaveBeenCalled","cb","prereqs","calls","toStrictEqual","message","messages","noHintSummary","values","id","hintSummary","hint","count","hint1","hint2","handleAdd","modifiedHint","hintsRowHooks","handleChange","handleDelete","resetCardHooks","setResetTrue","showResetButton","setResetFalse","scoring","weight","attempts","unlimited","number","defaultValue","nilScoring","scoringCardHooks","stateVals","attemptDisplayValue","toEqual","nonNilScoring","handleUnlimitedChange","target","checked","handleMaxAttemptChange","handleOnChange","handleWeightChange","parseFloat","showAnswer","on","afterAttempts","useAnswerSettings","handleShowAnswerChange","handleAttemptsChange","parseInt","timerCardHooks","timeBetween","typeRowProps","problemType","ProblemTypeKeys","MULTISELECT","typeKey","DROPDOWN","blockTitle","ProblemTypes","title","setBlockTitle","correctAnswerCount","answers","correct","fetchEditorContent","b","c","clearAllMocks","spyOn","mockImplementationOnce","typeRowHooks","onClick","toHaveBeenNthCalledWith","oneAnswerTypeRowProps","NUMERIC","TEXTINPUT","switchToAdvancedEditor","setConfirmOpen","window","scrollTo","confirmSwitchToAdvancedEditor"],"sources":["../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/hooks.test.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { MockUseState } from '../../../../../../testUtils';\nimport messages from './messages';\nimport { keyStore } from '../../../../../utils';\nimport * as hooks from './hooks';\nimport { ProblemTypeKeys, ProblemTypes } from '../../../../../data/constants/problem';\nimport * as editHooks from '../hooks';\n\njest.mock('react', () => {\n  const updateState = jest.fn();\n  return {\n    updateState,\n    useEffect: jest.fn(),\n    useState: jest.fn(val => ([{ state: val }, (newVal) => updateState({ val, newVal })])),\n  };\n});\n\njest.mock('@edx/frontend-platform/i18n', () => ({\n  defineMessages: m => m,\n}));\n\njest.mock('../../../../../data/redux', () => ({\n  actions: {\n    problem: {\n      updateSettings: (args) => ({ updateSettings: args }),\n      updateField: (args) => ({ updateField: args }),\n      updateAnswer: (args) => ({ updateAnswer: args }),\n    },\n  },\n}));\n\nconst state = new MockUseState(hooks);\nconst moduleKeys = keyStore(editHooks);\n\ndescribe('Problem settings hooks', () => {\n  let output;\n  let updateSettings;\n  beforeEach(() => {\n    updateSettings = jest.fn();\n    state.mock();\n  });\n  afterEach(() => {\n    state.restore();\n    useEffect.mockClear();\n  });\n  describe('Show advanced settings', () => {\n    beforeEach(() => {\n      output = hooks.showAdvancedSettingsCards();\n    });\n    test('test default state is false', () => {\n      expect(output.isAdvancedCardsVisible).toBeFalsy();\n    });\n    test('test showAdvancedCards sets state to true', () => {\n      output.showAdvancedCards();\n      expect(state.setState[state.keys.showAdvanced]).toHaveBeenCalledWith(true);\n    });\n  });\n  describe('Show full card', () => {\n    beforeEach(() => {\n      output = hooks.showFullCard();\n    });\n    test('test default state is false', () => {\n      expect(output.isCardCollapsibleOpen).toBeFalsy();\n    });\n    test('test toggleCardCollapse to true', () => {\n      output.toggleCardCollapse();\n      expect(state.setState[state.keys.cardCollapsed]).toHaveBeenCalledWith(true);\n    });\n    test('test toggleCardCollapse to true', () => {\n      output = hooks.showFullCard(true);\n      output.toggleCardCollapse();\n      expect(state.setState[state.keys.cardCollapsed]).toHaveBeenCalledWith(true);\n    });\n  });\n\n  describe('Hint card hooks', () => {\n    test('test useEffect triggers set hints summary no hint', () => {\n      const hints = [];\n      hooks.hintsCardHooks(hints, updateSettings);\n      expect(state.setState[state.keys.summary]).not.toHaveBeenCalled();\n      const [cb, prereqs] = useEffect.mock.calls[0];\n      expect(prereqs).toStrictEqual([[]]);\n      cb();\n      expect(state.setState[state.keys.summary])\n        .toHaveBeenCalledWith({ message: messages.noHintSummary, values: {} });\n    });\n    test('test useEffect triggers set hints summary', () => {\n      const hints = [{ id: 1, value: 'hint1' }];\n      output = hooks.hintsCardHooks(hints, updateSettings);\n      expect(state.setState[state.keys.summary]).not.toHaveBeenCalled();\n      const [cb, prereqs] = useEffect.mock.calls[0];\n      expect(prereqs).toStrictEqual([[{ id: 1, value: 'hint1' }]]);\n      cb();\n      expect(state.setState[state.keys.summary])\n        .toHaveBeenCalledWith({\n          message: messages.hintSummary,\n          values: { hint: hints[0].value, count: (hints.length - 1) },\n        });\n    });\n    test('test handleAdd triggers updateSettings', () => {\n      const hint1 = { id: 1, value: 'hint1' };\n      const hint2 = { id: 2, value: '' };\n      const hints = [hint1];\n      output = hooks.hintsCardHooks(hints, updateSettings);\n      output.handleAdd();\n      expect(updateSettings).toHaveBeenCalledWith({ hints: [hint1, hint2] });\n    });\n  });\n  describe('Hint rows hooks', () => {\n    const hint1 = { id: 1, value: 'hint1' };\n    const hint2 = { id: 2, value: '' };\n    const value = 'modifiedHint';\n    const modifiedHint = { id: 2, value };\n    const hints = [hint1, hint2];\n    beforeEach(() => {\n      output = hooks.hintsRowHooks(2, hints, updateSettings);\n    });\n    test('test handleChange', () => {\n      output.handleChange(value);\n      expect(updateSettings).toHaveBeenCalledWith({ hints: [hint1, modifiedHint] });\n    });\n    test('test handleDelete', () => {\n      output.handleDelete();\n      expect(updateSettings).toHaveBeenCalledWith({ hints: [hint1] });\n    });\n  });\n\n  describe('Reset card hooks', () => {\n    beforeEach(() => {\n      output = hooks.resetCardHooks(updateSettings);\n    });\n    test('test setResetTrue', () => {\n      output.setResetTrue();\n      expect(updateSettings).toHaveBeenCalledWith({ showResetButton: true });\n    });\n    test('test setResetFalse', () => {\n      output.setResetFalse();\n      expect(updateSettings).toHaveBeenCalledWith({ showResetButton: false });\n    });\n  });\n\n  describe('Scoring card hooks', () => {\n    const scoring = {\n      weight: 1.5,\n      attempts: {\n        unlimited: false,\n        number: 5,\n      },\n    };\n    const defaultValue = 1;\n    test('test scoringCardHooks initializes display value when attempts.number is null', () => {\n      const nilScoring = { ...scoring, attempts: { unlimited: false, number: null } };\n      output = hooks.scoringCardHooks(nilScoring, updateSettings, defaultValue);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual(`${defaultValue} (Default)`);\n    });\n    test('test scoringCardHooks initializes display value when attempts.number is blank', () => {\n      const nilScoring = { ...scoring, attempts: { unlimited: false, number: '' } };\n      output = hooks.scoringCardHooks(nilScoring, updateSettings, defaultValue);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual(`${defaultValue} (Default)`);\n    });\n    test('test scoringCardHooks initializes display value when attempts.number is not null', () => {\n      const nonNilScoring = { ...scoring, attempts: { unlimited: false, number: 2 } };\n      output = hooks.scoringCardHooks(nonNilScoring, updateSettings, defaultValue);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual(2);\n    });\n    test('test scoringCardHooks initializes display value when attempts.number and defaultValue is null', () => {\n      const nonNilScoring = { ...scoring, attempts: { unlimited: false, number: null } };\n      output = hooks.scoringCardHooks(nonNilScoring, updateSettings, null);\n      expect(state.stateVals[state.keys.attemptDisplayValue]).toEqual('');\n    });\n    beforeEach(() => {\n      output = hooks.scoringCardHooks(scoring, updateSettings, defaultValue);\n    });\n    test('test handleUnlimitedChange sets attempts.unlimited to true when checked', () => {\n      output.handleUnlimitedChange({ target: { checked: true } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('');\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: true } } });\n    });\n    test('test handleUnlimitedChange sets attempts.unlimited to false when unchecked', () => {\n      output.handleUnlimitedChange({ target: { checked: false } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange', () => {\n      const value = 6;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: value, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to zero', () => {\n      const value = 0;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: value, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to null value when default max_attempts is present', () => {\n      const value = null;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to null when default value is inputted', () => {\n      const value = '1 (Default)';\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to non-numeric value', () => {\n      const value = 'abc';\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to empty value', () => {\n      const value = '';\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(`${defaultValue} (Default)`);\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to negative value', () => {\n      const value = -1;\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: 0, unlimited: false } } });\n    });\n    test('test handleMaxAttemptChange set attempts to empty value with no default', () => {\n      const value = '';\n      output = hooks.scoringCardHooks(scoring, updateSettings, null);\n      output.handleMaxAttemptChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('');\n      expect(updateSettings)\n        .toHaveBeenCalledWith({ scoring: { ...scoring, attempts: { number: null, unlimited: true } } });\n    });\n    test('test handleOnChange', () => {\n      const value = 6;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(value);\n    });\n    test('test handleOnChange set attempts to zero', () => {\n      const value = 0;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(value);\n    });\n    test('test handleOnChange set attempts to default value from empty string', () => {\n      const value = '';\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('');\n    });\n    test('test handleOnChange set attempts to default value', () => {\n      const value = 1;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith('1 (Default)');\n    });\n    test('test handleOnChange set attempts to non-numeric value', () => {\n      const value = '';\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(value);\n    });\n    test('test handleOnChange set attempts to negative value', () => {\n      const value = -1;\n      output.handleOnChange({ target: { value } });\n      expect(state.setState[state.keys.attemptDisplayValue]).toHaveBeenCalledWith(0);\n    });\n    test('test handleWeightChange', () => {\n      const value = 2;\n      output.handleWeightChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ scoring: { ...scoring, weight: parseFloat(value) } });\n    });\n  });\n\n  describe('Show answer card hooks', () => {\n    const showAnswer = {\n      on: 'after_attempts',\n      afterAttempts: 5,\n    };\n    beforeEach(() => {\n      output = hooks.useAnswerSettings(showAnswer, updateSettings);\n    });\n    test('test handleShowAnswerChange', () => {\n      const value = 'always';\n      output.handleShowAnswerChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ showAnswer: { ...showAnswer, on: value } });\n    });\n    test('test handleAttemptsChange', () => {\n      const value = 3;\n      output.handleAttemptsChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ showAnswer: { ...showAnswer, afterAttempts: parseInt(value) } });\n    });\n  });\n\n  describe('Timer card hooks', () => {\n    test('test handleChange', () => {\n      output = hooks.timerCardHooks(updateSettings);\n      const value = 5;\n      output.handleChange({ target: { value } });\n      expect(updateSettings).toHaveBeenCalledWith({ timeBetween: value });\n    });\n  });\n\n  describe('Type row hooks', () => {\n    const typeRowProps = {\n      problemType: ProblemTypeKeys.MULTISELECT,\n      typeKey: ProblemTypeKeys.DROPDOWN,\n      blockTitle: ProblemTypes[ProblemTypeKeys.MULTISELECT].title,\n      setBlockTitle: jest.fn(),\n      updateField: jest.fn(),\n      updateAnswer: jest.fn(),\n      correctAnswerCount: 2,\n      answers: [\n        { correct: true, id: 'a', title: '<p>testA</p>' },\n        { correct: true, id: 'b', title: '<p>testB</p>' },\n        { correct: false, id: 'c', title: '<p>testC</p>' },\n      ],\n    };\n    const fetchEditorContent = () => ({\n      answers: {\n        a: 'testA',\n        b: 'testB',\n        c: 'testC',\n      },\n    });\n    beforeEach(() => {\n      jest.clearAllMocks();\n      jest.spyOn(editHooks, moduleKeys.fetchEditorContent)\n        .mockImplementationOnce(fetchEditorContent);\n    });\n    test('test onClick Multi-select to Dropdown', () => {\n      output = hooks.typeRowHooks(typeRowProps);\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.DROPDOWN].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...typeRowProps.answers[0], correct: false, title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...typeRowProps.answers[1], correct: false, title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...typeRowProps.answers[2], correct: false, title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.DROPDOWN });\n    });\n\n    test('test onClick Multi-select to Dropdown with one correct answer', () => {\n      const oneAnswerTypeRowProps = {\n        ...typeRowProps,\n        correctAnswerCount: 1,\n        answers: [\n          { correct: true, id: 'a', title: '<p>testA</p>' },\n          { correct: false, id: 'b', title: '<p>testB</p>' },\n          { correct: false, id: 'c', title: '<p>testC</p>' },\n        ],\n      };\n      output = hooks.typeRowHooks(oneAnswerTypeRowProps);\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.DROPDOWN].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...oneAnswerTypeRowProps.answers[0], title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...oneAnswerTypeRowProps.answers[1], title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...oneAnswerTypeRowProps.answers[2], title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.DROPDOWN });\n    });\n    test('test onClick Multi-select to Numeric', () => {\n      output = hooks.typeRowHooks({\n        ...typeRowProps,\n        typeKey: ProblemTypeKeys.NUMERIC,\n      });\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.NUMERIC].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...typeRowProps.answers[0], correct: true, title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...typeRowProps.answers[1], correct: true, title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...typeRowProps.answers[2], correct: true, title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.NUMERIC });\n    });\n\n    test('test onClick Multi-select to Text Input', () => {\n      output = hooks.typeRowHooks({\n        ...typeRowProps,\n        typeKey: ProblemTypeKeys.TEXTINPUT,\n      });\n      output.onClick();\n      expect(typeRowProps.setBlockTitle).toHaveBeenCalledWith(ProblemTypes[ProblemTypeKeys.TEXTINPUT].title);\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(1, { ...typeRowProps.answers[0], title: 'testA' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(2, { ...typeRowProps.answers[1], title: 'testB' });\n      expect(typeRowProps.updateAnswer).toHaveBeenNthCalledWith(3, { ...typeRowProps.answers[2], title: 'testC' });\n      expect(typeRowProps.updateField).toHaveBeenCalledWith({ problemType: ProblemTypeKeys.TEXTINPUT });\n    });\n  });\n  test('test confirmSwitchToAdvancedEditor hook', () => {\n    const switchToAdvancedEditor = jest.fn();\n    const setConfirmOpen = jest.fn();\n    window.scrollTo = jest.fn();\n    hooks.confirmSwitchToAdvancedEditor({\n      switchToAdvancedEditor,\n      setConfirmOpen,\n    });\n    expect(switchToAdvancedEditor).toHaveBeenCalled();\n    expect(setConfirmOpen).toHaveBeenCalledWith(false);\n    expect(window.scrollTo).toHaveBeenCalled();\n  });\n});\n"],"mappings":"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"}