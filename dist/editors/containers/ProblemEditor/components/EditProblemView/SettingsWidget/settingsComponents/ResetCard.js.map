{"version":3,"file":"ResetCard.js","names":["_react","_interopRequireDefault","require","_i18n","_paragon","_propTypes","_reactRedux","_SettingsOption","_messages","_hooks","_redux","_jsxRuntime","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ResetCard","_ref","showResetButton","updateSettings","intl","isLibrary","useSelector","selectors","app","setResetTrue","setResetFalse","resetCardHooks","advancedSettingsLink","studioEndpointUrl","learningContextId","jsxs","title","formatMessage","messages","resetSettingsTitle","summary","resetSettingsTrue","resetSettingsFalse","className","children","jsx","FormattedMessage","resetSettingText","Hyperlink","destination","target","advancedSettingsLinkText","ButtonGroup","size","Button","variant","onClick","exports","propTypes","PropTypes","bool","isRequired","func","intlShape","_default","injectIntl"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/ResetCard.jsx"],"sourcesContent":["import React from 'react';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Button, ButtonGroup, Hyperlink } from '@edx/paragon';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport SettingsOption from '../SettingsOption';\nimport messages from '../messages';\nimport { resetCardHooks } from '../hooks';\nimport { selectors } from '../../../../../../data/redux';\n\nexport const ResetCard = ({\n  showResetButton,\n  updateSettings,\n  // inject\n  intl,\n}) => {\n  const isLibrary = useSelector(selectors.app.isLibrary);\n  const { setResetTrue, setResetFalse } = resetCardHooks(updateSettings);\n  const advancedSettingsLink = `${useSelector(selectors.app.studioEndpointUrl)}/settings/advanced/${useSelector(selectors.app.learningContextId)}#show_reset_button`;\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.resetSettingsTitle)}\n      summary={showResetButton\n        ? intl.formatMessage(messages.resetSettingsTrue) : intl.formatMessage(messages.resetSettingsFalse)}\n      className=\"resetCard\"\n    >\n      <div className=\"halfSpacedMessage\">\n        <span>\n          <FormattedMessage {...messages.resetSettingText} />\n        </span>\n      </div>\n      {!isLibrary && (\n        <div className=\"spacedMessage\">\n          <Hyperlink destination={advancedSettingsLink} target=\"_blank\">\n            <FormattedMessage {...messages.advancedSettingsLinkText} />\n          </Hyperlink>\n        </div>\n      )}\n      <ButtonGroup size=\"sm\" className=\"resetSettingsButtons mb-2\">\n        <Button variant={showResetButton ? 'outline-primary' : 'primary'} size=\"sm\" onClick={setResetFalse}>\n          <FormattedMessage {...messages.resetSettingsFalse} />\n        </Button>\n        <Button variant={showResetButton ? 'primary' : 'outline-primary'} size=\"sm\" onClick={setResetTrue}>\n          <FormattedMessage {...messages.resetSettingsTrue} />\n        </Button>\n      </ButtonGroup>\n    </SettingsOption>\n  );\n};\n\nResetCard.propTypes = {\n  showResetButton: PropTypes.bool.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(ResetCard);\n"],"mappings":"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"}