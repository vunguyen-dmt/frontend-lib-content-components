{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_propTypes","_i18n","_SettingsOption","_messages","_hooks","_GroupFeedbackRow","_Button","_jsxRuntime","obj","__esModule","default","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","GroupFeedbackCard","_ref","groupFeedbacks","updateSettings","answers","intl","summary","handleAdd","groupFeedbackCardHooks","jsxs","title","formatMessage","messages","groupFeedbackSettingTitle","message","values","none","hasExpandableTextArea","children","jsx","className","FormattedMessage","groupFeedbackInputLabel","map","groupFeedback","id","groupFeedbackRowHooks","variant","onClick","size","addGroupFeedbackButtonText","exports","propTypes","intlShape","isRequired","PropTypes","arrayOf","shape","number","feedback","string","correct","bool","selectedFeedback","unselectedFeedback","func","_default","injectIntl"],"sources":["../../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/GroupFeedback/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport SettingsOption from '../../SettingsOption';\nimport messages from './messages';\nimport { groupFeedbackCardHooks, groupFeedbackRowHooks } from './hooks';\nimport GroupFeedbackRow from './GroupFeedbackRow';\nimport Button from '../../../../../../../sharedComponents/Button';\n\nexport const GroupFeedbackCard = ({\n  groupFeedbacks,\n  updateSettings,\n  answers,\n  // inject\n  intl,\n}) => {\n  const { summary, handleAdd } = groupFeedbackCardHooks(groupFeedbacks, updateSettings, answers);\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.groupFeedbackSettingTitle)}\n      summary={intl.formatMessage(summary.message, { ...summary.values })}\n      none={!groupFeedbacks.length}\n      hasExpandableTextArea\n    >\n      <div className=\"pb-3\">\n        <FormattedMessage {...messages.groupFeedbackInputLabel} />\n      </div>\n      {groupFeedbacks.map((groupFeedback) => (\n        <GroupFeedbackRow\n          key={groupFeedback.id}\n          id={groupFeedback.id}\n          value={groupFeedback}\n          answers={answers}\n          {...groupFeedbackRowHooks({ id: groupFeedback.id, groupFeedbacks, updateSettings })}\n        />\n      ))}\n      <Button\n        className=\"m-0 p-0 font-weight-bold\"\n        variant=\"add\"\n        onClick={handleAdd}\n        size=\"sm\"\n      >\n        <FormattedMessage {...messages.addGroupFeedbackButtonText} />\n      </Button>\n    </SettingsOption>\n  );\n};\n\nGroupFeedbackCard.propTypes = {\n  intl: intlShape.isRequired,\n  groupFeedbacks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    feedback: PropTypes.string.isRequired,\n    answers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  })).isRequired,\n  answers: PropTypes.arrayOf(PropTypes.shape({\n    correct: PropTypes.bool,\n    id: PropTypes.string,\n    selectedFeedback: PropTypes.string,\n    title: PropTypes.string,\n    unselectedFeedback: PropTypes.string,\n  })).isRequired,\n  updateSettings: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(GroupFeedbackCard);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,SAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,iBAAA,GAAAP,sBAAA,CAAAC,OAAA;AACA,IAAAO,OAAA,GAAAR,sBAAA,CAAAC,OAAA;AAAkE,IAAAQ,WAAA,GAAAR,OAAA;AAAA,SAAAD,uBAAAU,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,CAAA,OAAAG,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAL,CAAA,GAAAC,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAR,CAAA,EAAAC,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAZ,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAI,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,IAAAe,eAAA,CAAAhB,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAc,yBAAA,GAAAd,MAAA,CAAAe,gBAAA,CAAAlB,CAAA,EAAAG,MAAA,CAAAc,yBAAA,CAAAf,CAAA,KAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAgB,cAAA,CAAAnB,CAAA,EAAAC,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AAAA,SAAAgB,gBAAApB,GAAA,EAAAwB,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAxB,GAAA,IAAAO,MAAA,CAAAgB,cAAA,CAAAvB,GAAA,EAAAwB,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAZ,UAAA,QAAAc,YAAA,QAAAC,QAAA,oBAAA5B,GAAA,CAAAwB,GAAA,IAAAC,KAAA,WAAAzB,GAAA;AAAA,SAAA0B,eAAAG,GAAA,QAAAL,GAAA,GAAAM,YAAA,CAAAD,GAAA,2BAAAL,GAAA,gBAAAA,GAAA,GAAAO,MAAA,CAAAP,GAAA;AAAA,SAAAM,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAE3D,MAAMU,iBAAiB,GAAGC,IAAA,IAM3B;EAAA,IAN4B;IAChCC,cAAc;IACdC,cAAc;IACdC,OAAO;IACP;IACAC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAM;IAAEK,OAAO;IAAEC;EAAU,CAAC,GAAG,IAAAC,6BAAsB,EAACN,cAAc,EAAEC,cAAc,EAAEC,OAAO,CAAC;EAC9F,oBACE,IAAA/C,WAAA,CAAAoD,IAAA,EAACzD,eAAA,CAAAQ,OAAc;IACbkD,KAAK,EAAEL,IAAI,CAACM,aAAa,CAACC,iBAAQ,CAACC,yBAAyB,CAAE;IAC9DP,OAAO,EAAED,IAAI,CAACM,aAAa,CAACL,OAAO,CAACQ,OAAO,EAAAxC,aAAA,KAAOgC,OAAO,CAACS,MAAM,CAAE,CAAE;IACpEC,IAAI,EAAE,CAACd,cAAc,CAAC1B,MAAO;IAC7ByC,qBAAqB;IAAAC,QAAA,gBAErB,IAAA7D,WAAA,CAAA8D,GAAA;MAAKC,SAAS,EAAC,MAAM;MAAAF,QAAA,eACnB,IAAA7D,WAAA,CAAA8D,GAAA,EAACpE,KAAA,CAAAsE,gBAAgB,EAAA/C,aAAA,KAAKsC,iBAAQ,CAACU,uBAAuB,CAAG;IAAC,CACvD,CAAC,EACLpB,cAAc,CAACqB,GAAG,CAAEC,aAAa,iBAChC,IAAAnE,WAAA,CAAA8D,GAAA,EAAChE,iBAAA,CAAAK,OAAgB,EAAAc,aAAA;MAEfmD,EAAE,EAAED,aAAa,CAACC,EAAG;MACrB1C,KAAK,EAAEyC,aAAc;MACrBpB,OAAO,EAAEA;IAAQ,GACb,IAAAsB,4BAAqB,EAAC;MAAED,EAAE,EAAED,aAAa,CAACC,EAAE;MAAEvB,cAAc;MAAEC;IAAe,CAAC,CAAC,GAJ9EqB,aAAa,CAACC,EAKpB,CACF,CAAC,eACF,IAAApE,WAAA,CAAA8D,GAAA,EAAC/D,OAAA,CAAAI,OAAM;MACL4D,SAAS,EAAC,0BAA0B;MACpCO,OAAO,EAAC,KAAK;MACbC,OAAO,EAAErB,SAAU;MACnBsB,IAAI,EAAC,IAAI;MAAAX,QAAA,eAET,IAAA7D,WAAA,CAAA8D,GAAA,EAACpE,KAAA,CAAAsE,gBAAgB,EAAA/C,aAAA,KAAKsC,iBAAQ,CAACkB,0BAA0B,CAAG;IAAC,CACvD,CAAC;EAAA,CACK,CAAC;AAErB,CAAC;AAACC,OAAA,CAAA/B,iBAAA,GAAAA,iBAAA;AAEFA,iBAAiB,CAACgC,SAAS,GAAG;EAC5B3B,IAAI,EAAE4B,eAAS,CAACC,UAAU;EAC1BhC,cAAc,EAAEiC,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACE,KAAK,CAAC;IAChDZ,EAAE,EAAEU,kBAAS,CAACG,MAAM,CAACJ,UAAU;IAC/BK,QAAQ,EAAEJ,kBAAS,CAACK,MAAM,CAACN,UAAU;IACrC9B,OAAO,EAAE+B,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACK,MAAM,CAAC,CAACN;EAC/C,CAAC,CAAC,CAAC,CAACA,UAAU;EACd9B,OAAO,EAAE+B,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACE,KAAK,CAAC;IACzCI,OAAO,EAAEN,kBAAS,CAACO,IAAI;IACvBjB,EAAE,EAAEU,kBAAS,CAACK,MAAM;IACpBG,gBAAgB,EAAER,kBAAS,CAACK,MAAM;IAClC9B,KAAK,EAAEyB,kBAAS,CAACK,MAAM;IACvBI,kBAAkB,EAAET,kBAAS,CAACK;EAChC,CAAC,CAAC,CAAC,CAACN,UAAU;EACd/B,cAAc,EAAEgC,kBAAS,CAACU,IAAI,CAACX;AACjC,CAAC;AAAC,IAAAY,QAAA,GAAAf,OAAA,CAAAvE,OAAA,GAEa,IAAAuF,gBAAU,EAAC/C,iBAAiB,CAAC"}