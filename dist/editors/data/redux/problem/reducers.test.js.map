{"version":3,"file":"reducers.test.js","names":["_reducers","require","_problem","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","testingState","initialState","arbitraryField","describe","it","expect","reducer","toEqual","testValue","setterTest","action","actions","map","args","payload","maxAttempts","showanswer","showResetButton","setEnableTypeSelection","settings","scoring","attempts","number","unlimited","showAnswer","on","problemType","answer","id","correct","selectedFeedback","title","isAnswerRange","unselectedFeedback","addAnswer","answers","updateField","hints","updateSettings","numericTestState","ProblemTypeKeys","NUMERIC","correctAnswerCount","answerRange","addAnswerRange","updateAnswer","windowSpy","beforeEach","jest","spyOn","window","afterEach","mockRestore","mockImplementation","tinymce","editors","editorState","deleteAnswer","A","setContent","fn","B","SINGLESELECT","toHaveBeenCalled","toHaveBeenCalledWith","groupFeedbackList","feedback"],"sources":["../../../../../src/editors/data/redux/problem/reducers.test.js"],"sourcesContent":["import { initialState, actions, reducer } from './reducers';\nimport { ProblemTypeKeys } from '../../constants/problem';\n\nconst testingState = {\n  ...initialState,\n  arbitraryField: 'arbitrary',\n};\n\ndescribe('problem reducer', () => {\n  it('has initial state', () => {\n    expect(reducer(undefined, {})).toEqual(initialState);\n  });\n\n  const testValue = 'roll for initiative';\n\n  describe('handling actions', () => {\n    const setterTest = (action, target) => {\n      describe(action, () => {\n        it(`load ${target} from payload`, () => {\n          expect(reducer(testingState, actions[action](testValue))).toEqual({\n            ...testingState,\n            [target]: testValue,\n          });\n        });\n      });\n    };\n    [\n      ['updateQuestion', 'question'],\n    ].map(args => setterTest(...args));\n    describe('setEnableTypeSelection', () => {\n      it('sets given problemType to null', () => {\n        const payload = {\n          maxAttempts: 1,\n          showanswer: 'finished',\n          showResetButton: false,\n        };\n        expect(reducer(testingState, actions.setEnableTypeSelection(payload))).toEqual({\n          ...testingState,\n          settings: {\n            ...testingState.settings,\n            scoring: {\n              ...testingState.settings.scoring,\n              attempts: { number: 1, unlimited: false },\n            },\n            showAnswer: { ...testingState.settings.showAnswer, on: payload.showanswer },\n            ...payload.showResetButton,\n          },\n          problemType: null,\n        });\n      });\n    });\n    describe('load', () => {\n      it('sets answers', () => {\n        const answer = {\n          id: 'A',\n          correct: false,\n          selectedFeedback: '',\n          title: '',\n          isAnswerRange: false,\n          unselectedFeedback: '',\n        };\n        expect(reducer(testingState, actions.addAnswer(answer))).toEqual({\n          ...testingState,\n          answers: [answer],\n        });\n      });\n    });\n    describe('updateField', () => {\n      it('sets given parameter', () => {\n        const payload = { problemType: 'soMePRoblEMtYPe' };\n        expect(reducer(testingState, actions.updateField(payload))).toEqual({\n          ...testingState,\n          ...payload,\n        });\n      });\n    });\n    describe('updateSettings', () => {\n      it('sets given settings parameter', () => {\n        const payload = { hints: ['soMehInt'] };\n        expect(reducer(testingState, actions.updateSettings(payload))).toEqual({\n          ...testingState,\n          settings: {\n            ...testingState.settings,\n            ...payload,\n          },\n        });\n      });\n    });\n    describe('addAnswer', () => {\n      const answer = {\n        id: 'A',\n        correct: false,\n        selectedFeedback: '',\n        title: '',\n        isAnswerRange: false,\n        unselectedFeedback: '',\n      };\n      it('sets answers', () => {\n        expect(reducer({ ...testingState, problemType: 'choiceresponse' }, actions.addAnswer())).toEqual({\n          ...testingState,\n          problemType: 'choiceresponse',\n          answers: [answer],\n        });\n      });\n      it('sets answers for numeric input', () => {\n        const numericTestState = {\n          ...testingState,\n          problemType: ProblemTypeKeys.NUMERIC,\n          correctAnswerCount: 0,\n        };\n        expect(reducer(numericTestState, actions.addAnswer())).toEqual({\n          ...numericTestState,\n          correctAnswerCount: 1,\n          answers: [{\n            ...answer,\n            correct: true,\n          }],\n        });\n      });\n    });\n    describe('addAnswerRange', () => {\n      const answerRange = {\n        id: 'A',\n        correct: true,\n        selectedFeedback: '',\n        title: '',\n        isAnswerRange: true,\n        unselectedFeedback: '',\n      };\n      it('sets answerRange', () => {\n        expect(reducer({ ...testingState, problemType: ProblemTypeKeys.NUMERIC }, actions.addAnswerRange())).toEqual({\n          ...testingState,\n          correctAnswerCount: 1,\n          problemType: ProblemTypeKeys.NUMERIC,\n          answers: [answerRange],\n        });\n      });\n    });\n    describe('updateAnswer', () => {\n      it('sets answers, as well as setting the correctAnswerCount ', () => {\n        const answer = { id: 'A', correct: true };\n        expect(reducer(\n          {\n            ...testingState,\n            answers: [{\n              id: 'A',\n              correct: false,\n            }],\n          },\n          actions.updateAnswer(answer),\n        )).toEqual({\n          ...testingState,\n          correctAnswerCount: 1,\n          answers: [{ id: 'A', correct: true }],\n        });\n      });\n    });\n    describe('deleteAnswer', () => {\n      let windowSpy;\n      beforeEach(() => {\n        windowSpy = jest.spyOn(window, 'window', 'get');\n      });\n      afterEach(() => {\n        windowSpy.mockRestore();\n      });\n      it('sets a default when deleting the last answer', () => {\n        windowSpy.mockImplementation(() => ({\n          tinymce: {\n            editors: 'mock-editors',\n          },\n        }));\n        const payload = {\n          id: 'A',\n          correct: false,\n          editorState: 'empty',\n        };\n        expect(reducer(\n          {\n            ...testingState,\n            correctAnswerCount: 0,\n            answers: [{ id: 'A', correct: false }],\n          },\n          actions.deleteAnswer(payload),\n        )).toEqual({\n          ...testingState,\n          correctAnswerCount: 0,\n          answers: [{\n            id: 'A',\n            title: '',\n            selectedFeedback: '',\n            unselectedFeedback: '',\n            correct: false,\n            isAnswerRange: false,\n          }],\n        });\n      });\n      it('sets answers and correctAnswerCount', () => {\n        windowSpy.mockImplementation(() => ({\n          tinymce: {\n            editors: 'mock-editors',\n          },\n        }));\n        const payload = {\n          id: 'A',\n          correct: false,\n          editorState: {\n            answers: { A: 'mockA' },\n          },\n        };\n        expect(reducer(\n          {\n            ...testingState,\n            correctAnswerCount: 1,\n            answers: [\n              { id: 'A', correct: false },\n              { id: 'B', correct: true },\n            ],\n          },\n          actions.deleteAnswer(payload),\n        )).toEqual({\n          ...testingState,\n          correctAnswerCount: 1,\n          answers: [{\n            id: 'A',\n            correct: true,\n            selectedFeedback: '',\n            unselectedFeedback: '',\n          }],\n        });\n      });\n      it('sets answers and correctAnswerCount with editorState for RichTextProblems', () => {\n        const setContent = jest.fn();\n        windowSpy.mockImplementation(() => ({\n          tinymce: {\n            editors: {\n              'answer-A': { setContent },\n              'answer-B': { setContent },\n            },\n          },\n        }));\n        const payload = {\n          id: 'A',\n          correct: false,\n          editorState: {\n            answers: { A: 'editorAnsA', B: 'editorAnsB' },\n          },\n        };\n        expect(reducer(\n          {\n            ...testingState,\n            problemType: ProblemTypeKeys.SINGLESELECT,\n            correctAnswerCount: 1,\n            answers: [\n              { id: 'A', correct: false },\n              { id: 'B', correct: true },\n            ],\n          },\n          actions.deleteAnswer(payload),\n        )).toEqual({\n          ...testingState,\n          problemType: ProblemTypeKeys.SINGLESELECT,\n          correctAnswerCount: 1,\n          answers: [{\n            id: 'A',\n            correct: true,\n            title: 'editorAnsB',\n            selectedFeedback: '',\n            unselectedFeedback: '',\n          }],\n        });\n      });\n      it('sets selectedFeedback and unselectedFeedback with editorState', () => {\n        windowSpy.mockImplementation(() => ({\n          tinymce: {\n            editors: {\n              'answer-A': 'mockEditor',\n              'answer-B': 'mockEditor',\n            },\n          },\n        }));\n        const payload = {\n          id: 'A',\n          correct: false,\n          editorState: {\n            answers: { A: 'editorAnsA', B: 'editorAnsB' },\n            selectedFeedback: { A: 'editSelFA', B: 'editSelFB' },\n            unselectedFeedback: { A: 'editUnselFA', B: 'editUnselFB' },\n          },\n        };\n        expect(reducer(\n          {\n            ...testingState,\n            correctAnswerCount: 1,\n            answers: [\n              { id: 'A', correct: false },\n              { id: 'B', correct: true },\n            ],\n          },\n          actions.deleteAnswer(payload),\n        )).toEqual({\n          ...testingState,\n          correctAnswerCount: 1,\n          answers: [{\n            id: 'A',\n            correct: true,\n            selectedFeedback: 'editSelFB',\n            unselectedFeedback: 'editUnselFB',\n          }],\n        });\n      });\n      it('calls editor setContent to set answer and feedback fields', () => {\n        const setContent = jest.fn();\n        windowSpy.mockImplementation(() => ({\n          tinymce: {\n            editors: {\n              'answer-A': { setContent },\n              'answer-B': { setContent },\n              'selectedFeedback-A': { setContent },\n              'selectedFeedback-B': { setContent },\n              'unselectedFeedback-A': { setContent },\n              'unselectedFeedback-B': { setContent },\n            },\n          },\n        }));\n        const payload = {\n          id: 'A',\n          correct: false,\n          editorState: {\n            answers: { A: 'editorAnsA', B: 'editorAnsB' },\n            selectedFeedback: { A: 'editSelFA', B: 'editSelFB' },\n            unselectedFeedback: { A: 'editUnselFA', B: 'editUnselFB' },\n          },\n        };\n        reducer(\n          {\n            ...testingState,\n            problemType: ProblemTypeKeys.SINGLESELECT,\n            correctAnswerCount: 1,\n            answers: [\n              { id: 'A', correct: false },\n              { id: 'B', correct: true },\n            ],\n          },\n          actions.deleteAnswer(payload),\n        );\n        expect(window.tinymce.editors['answer-A'].setContent).toHaveBeenCalled();\n        expect(window.tinymce.editors['answer-A'].setContent).toHaveBeenCalledWith('editorAnsB');\n        expect(window.tinymce.editors['selectedFeedback-A'].setContent).toHaveBeenCalledWith('editSelFB');\n        expect(window.tinymce.editors['unselectedFeedback-A'].setContent).toHaveBeenCalledWith('editUnselFB');\n      });\n      it('sets groupFeedbackList by removing the checked item in the groupFeedback', () => {\n        windowSpy.mockImplementation(() => ({\n          tinymce: {\n            editors: 'mock-editors',\n          },\n        }));\n        const payload = {\n          id: 'A',\n          correct: false,\n          editorState: {\n            answer: { A: 'aNSwERA', B: 'anSWeRB' },\n          },\n        };\n        expect(reducer(\n          {\n            ...testingState,\n            correctAnswerCount: 1,\n            answers: [\n              { id: 'A', correct: false },\n              { id: 'B', correct: true },\n              { id: 'C', correct: false },\n            ],\n            groupFeedbackList: [{\n              id: 0,\n              answers: ['A', 'C'],\n              feedback: 'fake feedback',\n            }],\n          },\n          actions.deleteAnswer(payload),\n        )).toEqual({\n          ...testingState,\n          correctAnswerCount: 1,\n          answers: [{\n            id: 'A',\n            correct: true,\n            selectedFeedback: '',\n            unselectedFeedback: '',\n          },\n          {\n            id: 'B',\n            correct: false,\n            selectedFeedback: '',\n            unselectedFeedback: '',\n          }],\n          groupFeedbackList: [{\n            id: 0,\n            answers: ['B'],\n            feedback: 'fake feedback',\n          }],\n        });\n      });\n      it('if you delete an answer range, it will be replaced with a blank answer', () => {\n        windowSpy.mockImplementation(() => ({\n          tinymce: {\n            editors: 'mock-editors',\n          },\n        }));\n        const payload = {\n          id: 'A',\n          correct: true,\n          editorState: 'mockEditoRStAte',\n        };\n        expect(reducer(\n          {\n            ...testingState,\n            problemType: ProblemTypeKeys.NUMERIC,\n            correctAnswerCount: 1,\n            answers: [{\n              id: 'A',\n              correct: false,\n              selectedFeedback: '',\n              title: '',\n              isAnswerRange: true,\n              unselectedFeedback: '',\n            }],\n          },\n          actions.deleteAnswer(payload),\n        )).toEqual({\n          ...testingState,\n          problemType: ProblemTypeKeys.NUMERIC,\n          correctAnswerCount: 1,\n          answers: [{\n            id: 'A',\n            title: '',\n            selectedFeedback: '',\n            unselectedFeedback: '',\n            correct: true,\n            isAnswerRange: false,\n          }],\n        });\n      });\n    });\n  });\n});\n"],"mappings":"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"}