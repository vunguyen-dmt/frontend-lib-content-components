{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_reactRedux","_i18n","_paragon","_AnswerWidget","_SettingsWidget","_QuestionWidget","_EditorContainer","_redux","_RawEditor","_problem","_hooks","_messages","_ExplanationWidget","_hooks2","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","EditProblemView","_ref","returnFunction","problemType","problemState","assets","lmsEndpointUrl","returnUrl","analytics","intl","dispatch","useDispatch","editorRef","useRef","isAdvancedProblemType","ProblemTypeKeys","ADVANCED","isSaveWarningModalOpen","openSaveWarningModal","closeSaveWarningModal","saveWarningModalToggle","jsxs","getContent","children","jsx","AlertModal","title","formatMessage","messages","olxSettingDiscrepancyTitle","noAnswerTitle","isOpen","onClose","footerNode","ActionRow","Button","variant","onClick","FormattedMessage","saveWarningModalCancelButtonLabel","saveBlock","content","parseState","problem","isAdvanced","ref","destination","saveWarningModalSaveButtonLabel","olxSettingDiscrepancyBodyExplanation","Fragment","saveWarningModalBodyQuestion","noAnswerBodyExplanation","className","Container","fluid","lang","rawOLX","exports","defaultProps","propTypes","PropTypes","string","isRequired","func","any","shape","intlShape","mapStateToProps","state","selectors","app","completeState","_default","injectIntl","connect"],"sources":["../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/index.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport { injectIntl, intlShape, FormattedMessage } from '@edx/frontend-platform/i18n';\n\nimport {\n  Container,\n  Button,\n  AlertModal,\n  ActionRow,\n} from '@openedx/paragon';\nimport AnswerWidget from './AnswerWidget';\nimport SettingsWidget from './SettingsWidget';\nimport QuestionWidget from './QuestionWidget';\nimport EditorContainer from '../../../EditorContainer';\nimport { selectors } from '../../../../data/redux';\nimport RawEditor from '../../../../sharedComponents/RawEditor';\nimport { ProblemTypeKeys } from '../../../../data/constants/problem';\n\nimport { parseState, saveWarningModalToggle, getContent } from './hooks';\nimport './index.scss';\nimport messages from './messages';\n\nimport ExplanationWidget from './ExplanationWidget';\nimport { saveBlock } from '../../../../hooks';\n\nexport const EditProblemView = ({\n  returnFunction,\n  // redux\n  problemType,\n  problemState,\n  assets,\n  lmsEndpointUrl,\n  returnUrl,\n  analytics,\n  // injected\n  intl,\n}) => {\n  const dispatch = useDispatch();\n  const editorRef = useRef(null);\n  const isAdvancedProblemType = problemType === ProblemTypeKeys.ADVANCED;\n  const { isSaveWarningModalOpen, openSaveWarningModal, closeSaveWarningModal } = saveWarningModalToggle();\n\n  return (\n    <EditorContainer\n      getContent={() => getContent({\n        problemState,\n        openSaveWarningModal,\n        isAdvancedProblemType,\n        editorRef,\n        assets,\n        lmsEndpointUrl,\n      })}\n      returnFunction={returnFunction}\n    >\n      <AlertModal\n        title={isAdvancedProblemType ? (\n          intl.formatMessage(messages.olxSettingDiscrepancyTitle)\n        ) : intl.formatMessage(messages.noAnswerTitle)}\n        isOpen={isSaveWarningModalOpen}\n        onClose={closeSaveWarningModal}\n        footerNode={(\n          <ActionRow>\n            <Button variant=\"tertiary\" onClick={closeSaveWarningModal}>\n              <FormattedMessage {...messages.saveWarningModalCancelButtonLabel} />\n            </Button>\n            <Button\n              onClick={() => saveBlock({\n                content: parseState({\n                  problem: problemState,\n                  isAdvanced: isAdvancedProblemType,\n                  ref: editorRef,\n                  assets,\n                  lmsEndpointUrl,\n                })(),\n                returnFunction,\n                destination: returnUrl,\n                dispatch,\n                analytics,\n              })}\n            >\n              <FormattedMessage {...messages.saveWarningModalSaveButtonLabel} />\n            </Button>\n          </ActionRow>\n        )}\n      >\n        {isAdvancedProblemType ? (\n          <FormattedMessage {...messages.olxSettingDiscrepancyBodyExplanation} />\n        ) : (\n          <>\n            <div>\n              <FormattedMessage {...messages.saveWarningModalBodyQuestion} />\n            </div>\n            <div>\n              <FormattedMessage {...messages.noAnswerBodyExplanation} />\n            </div>\n          </>\n        )}\n      </AlertModal>\n      <div className=\"editProblemView d-flex flex-row flex-nowrap justify-content-end\">\n        {isAdvancedProblemType ? (\n          <Container fluid className=\"advancedEditorTopMargin p-0\">\n            <RawEditor editorRef={editorRef} lang=\"xml\" content={problemState.rawOLX} />\n          </Container>\n        ) : (\n          <span className=\"flex-grow-1 mb-5\">\n            <QuestionWidget />\n            <ExplanationWidget />\n            <AnswerWidget problemType={problemType} />\n          </span>\n        )}\n        <span className=\"editProblemView-settingsColumn\">\n          <SettingsWidget problemType={problemType} />\n        </span>\n      </div>\n    </EditorContainer>\n  );\n};\n\nEditProblemView.defaultProps = {\n  assets: null,\n  lmsEndpointUrl: null,\n  returnFunction: null,\n};\n\nEditProblemView.propTypes = {\n  problemType: PropTypes.string.isRequired,\n  returnFunction: PropTypes.func,\n  // eslint-disable-next-line\n  problemState: PropTypes.any.isRequired,\n  assets: PropTypes.shape({}),\n  analytics: PropTypes.shape({}).isRequired,\n  lmsEndpointUrl: PropTypes.string,\n  returnUrl: PropTypes.string.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  assets: selectors.app.assets(state),\n  analytics: selectors.app.analytics(state),\n  lmsEndpointUrl: selectors.app.lmsEndpointUrl(state),\n  returnUrl: selectors.app.returnUrl(state),\n  problemType: selectors.problem.problemType(state),\n  problemState: selectors.problem.completeState(state),\n});\n\nexport default injectIntl(connect(mapStateToProps)(EditProblemView));\n"],"mappings":"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"}