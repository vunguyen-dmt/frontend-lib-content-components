{"version":3,"file":"hooks.js","names":["_react","_interopRequireDefault","require","_utils","_module","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","state","altText","val","React","useState","dimensions","showAltTextDismissibleError","showAltTextSubmissionError","isDecorative","isLocked","local","lockDims","lockInitialized","exports","dimKeys","StrictDict","height","width","findGcd","a","b","checkEqual","d1","d2","getValidDimensions","_ref","out","iter","isMin","changed","other","direction","Math","max","round","dimensionLockHooks","setLockDims","module","setIsLocked","initializeLock","_ref2","gcd","some","v","isInteger","lock","unlock","dimensionHooks","altTextHook","setDimensions","setLocal","setAll","_ref3","setIsDecorative","setValue","onImgLoad","selection","_ref4","img","imageDims","naturalHeight","naturalWidth","setHeight","match","heightPercent","parseInt","setWidth","widthPercent","updateDimensions","altTextHooks","savedText","setShowAltTextDismissibleError","setShowAltTextSubmissionError","validateAltText","newVal","newDecorative","decorative","error","show","dismiss","validation","onInputChange","handleValue","e","onCheckboxChange","checked","checkFormValidation","_ref5","onAltTextFail","onSaveClick","_ref6","saveToEditor","_default"],"sources":["../../../../../src/editors/sharedComponents/ImageUploadModal/ImageSettingsModal/hooks.js"],"sourcesContent":["import React from 'react';\n\nimport { StrictDict } from '../../../utils';\nimport * as module from './hooks';\n\n// Simple wrappers for useState to allow easy mocking for tests.\nexport const state = {\n  altText: (val) => React.useState(val),\n  dimensions: (val) => React.useState(val),\n  showAltTextDismissibleError: (val) => React.useState(val),\n  showAltTextSubmissionError: (val) => React.useState(val),\n  isDecorative: (val) => React.useState(val),\n  isLocked: (val) => React.useState(val),\n  local: (val) => React.useState(val),\n  lockDims: (val) => React.useState(val),\n  lockInitialized: (val) => React.useState(val),\n};\n\nexport const dimKeys = StrictDict({\n  height: 'height',\n  width: 'width',\n});\n\n/**\n * findGcd(numerator, denominator)\n * Find the greatest common denominator of a ratio or fraction.\n * @param {number} numerator - ratio numerator\n * @param {number} denominator - ratio denominator\n * @return {number} - ratio greatest common denominator\n */\nexport const findGcd = (a, b) => (b ? findGcd(b, a % b) : a);\nconst checkEqual = (d1, d2) => (d1.height === d2.height && d1.width === d2.width);\n\n/**\n * getValidDimensions({ dimensions, local, locked })\n * Find valid ending dimensions based on start state, request, and lock state\n * @param {obj} dimensions - current stored dimensions\n * @param {obj} local - local (active) dimensions in the inputs\n * @param {obj} locked - locked dimensions\n * @return {obj} - output dimensions after move ({ height, width })\n */\nexport const getValidDimensions = ({\n  dimensions,\n  local,\n  isLocked,\n  lockDims,\n}) => {\n  if (!isLocked || checkEqual(local, dimensions)) {\n    return local;\n  }\n  const out = {};\n  let iter;\n  const isMin = dimensions.height === lockDims.height;\n\n  const keys = (local.height !== dimensions.height)\n    ? { changed: dimKeys.height, other: dimKeys.width }\n    : { changed: dimKeys.width, other: dimKeys.height };\n\n  const direction = local[keys.changed] > dimensions[keys.changed] ? 1 : -1;\n\n  // don't move down if already at minimum size\n  if (direction < 0 && isMin) { return dimensions; }\n  // find closest valid iteration of the changed field\n  iter = Math.max(Math.round(local[keys.changed] / lockDims[keys.changed]), 1);\n  // if closest valid iteration is current iteration, move one iteration in the change direction\n  if (iter === (dimensions[keys.changed] / lockDims[keys.changed])) { iter += direction; }\n\n  out[keys.changed] = Math.round(iter * lockDims[keys.changed]);\n  out[keys.other] = Math.round(out[keys.changed] * (lockDims[keys.other] / lockDims[keys.changed]));\n\n  return out;\n};\n\n/**\n * dimensionLockHooks({ dimensions })\n * Returns a set of hooks pertaining to the dimension locks.\n * Locks the dimensions initially, on lock initialization.\n * @param {obj} dimensions - current stored dimensions\n * @return {obj} - dimension lock hooks\n *   {func} initializeLock - enable the lock mechanism\n *   {bool} isLocked - are dimensions locked?\n *   {obj} lockDims - image dimensions ({ height, width })\n *   {func} lock - lock the dimensions\n *   {func} unlock - unlock the dimensions\n */\nexport const dimensionLockHooks = () => {\n  const [lockDims, setLockDims] = module.state.lockDims(null);\n  const [isLocked, setIsLocked] = module.state.isLocked(true);\n\n  const initializeLock = ({ width, height }) => {\n    // find minimum viable increment\n    let gcd = module.findGcd(width, height);\n    if ([width, height].some(v => !Number.isInteger(v / gcd))) {\n      gcd = 1;\n    }\n    setLockDims({ width: width / gcd, height: height / gcd });\n  };\n\n  return {\n    initializeLock,\n    isLocked,\n    lock: () => setIsLocked(true),\n    lockDims,\n    unlock: () => setIsLocked(false),\n  };\n};\n\n/**\n * dimensionHooks()\n * Returns an object of dimension-focused react hooks.\n * @return {obj} - dimension hooks\n *   {func} onImgLoad - initializes image dimension fields\n *     @param {object} selection - selected image object with possible override dimensions.\n *     @return {callback} - image load event callback that loads dimensions.\n *   {object} locked - current locked state\n *   {func} lock - lock current dimensions\n *   {func} unlock - unlock dimensions\n *   {object} value - current dimension values\n *   {func} setHeight - set height\n *     @param {string} - new height string\n *   {func} setWidth - set width\n *     @param {string} - new width string\n *   {func} updateDimensions - set dimensions based on state\n *   {obj} errorProps - props for user feedback error\n *     {bool} isError - true if dimensions are blank\n *     {func} setError - sets isError to true\n *     {func} dismissError - sets isError to false\n *     {bool} isHeightValid - true if height field is ready to save\n *     {func} setHeightValid - sets isHeightValid to true\n *     {func} setHeightNotValid - sets isHeightValid to false\n *     {bool} isWidthValid - true if width field is ready to save\n *     {func} setWidthValid - sets isWidthValid to true\n *     {func} setWidthNotValid - sets isWidthValid to false\n */\nexport const dimensionHooks = (altTextHook) => {\n  const [dimensions, setDimensions] = module.state.dimensions(null);\n  const [local, setLocal] = module.state.local(null);\n  const setAll = ({ height, width, altText }) => {\n    if (altText === '' || altText) {\n      if (altText === '') {\n        altTextHook.setIsDecorative(true);\n      }\n      altTextHook.setValue(altText);\n    }\n    setDimensions({ height, width });\n    setLocal({ height, width });\n  };\n  const {\n    initializeLock,\n    isLocked,\n    lock,\n    lockDims,\n    unlock,\n  } = module.dimensionLockHooks({ dimensions });\n\n  return {\n    onImgLoad: (selection) => ({ target: img }) => {\n      const imageDims = { height: img.naturalHeight, width: img.naturalWidth };\n      setAll(selection.height ? selection : imageDims);\n      initializeLock(imageDims);\n    },\n    isLocked,\n    lock,\n    unlock,\n    value: local,\n    setHeight: (height) => {\n      if (height.match(/[0-9]+[%]{1}/)) {\n        const heightPercent = height.match(/[0-9]+[%]{1}/)[0];\n        setLocal({ ...local, height: heightPercent });\n      } else if (height.match(/[0-9]/)) {\n        setLocal({ ...local, height: parseInt(height, 10) });\n      }\n    },\n    setWidth: (width) => {\n      if (width.match(/[0-9]+[%]{1}/)) {\n        const widthPercent = width.match(/[0-9]+[%]{1}/)[0];\n        setLocal({ ...local, width: widthPercent });\n      } else if (width.match(/[0-9]/)) {\n        setLocal({ ...local, width: parseInt(width, 10) });\n      }\n    },\n    updateDimensions: () => setAll(module.getValidDimensions({\n      dimensions,\n      local,\n      isLocked,\n      lockDims,\n    })),\n  };\n};\n\n/**\n * altTextHooks(savedText)\n * Returns a set of react hooks focused around alt text\n * @return {obj} - alt text hooks\n *   {string} value - alt text value\n *   {func} setValue - set alt test value\n *     @param {string} - new alt text\n *   {bool} isDecorative - is the image decorative?\n *   {func} setIsDecorative - set isDecorative field\n *   {obj} error - error at top of page\n *     {bool} show - is error being displayed?\n *     {func} set - set show to true\n *     {func} dismiss - set show to false\n *   {obj} validation - local alt text error\n *     {bool} show - is validation error being displayed?\n *     {func} set - set validation to true\n *     {func} dismiss - set validation to false\n */\nexport const altTextHooks = (savedText) => {\n  const [value, setValue] = module.state.altText(savedText || '');\n  const [isDecorative, setIsDecorative] = module.state.isDecorative(false);\n  const [showAltTextDismissibleError, setShowAltTextDismissibleError] = module.state.showAltTextDismissibleError(false);\n  const [showAltTextSubmissionError, setShowAltTextSubmissionError] = module.state.showAltTextSubmissionError(false);\n\n  const validateAltText = (newVal, newDecorative) => {\n    if (showAltTextSubmissionError) {\n      if (newVal || newDecorative) {\n        setShowAltTextSubmissionError(false);\n      }\n    }\n  };\n\n  return {\n    value,\n    setValue: (val) => {\n      setValue(val);\n      validateAltText(val, null);\n    },\n    isDecorative,\n    setIsDecorative: (decorative) => {\n      setIsDecorative(decorative);\n      validateAltText(null, decorative);\n    },\n    error: {\n      show: showAltTextDismissibleError,\n      set: () => setShowAltTextDismissibleError(true),\n      dismiss: () => setShowAltTextDismissibleError(false),\n    },\n    validation: {\n      show: showAltTextSubmissionError,\n      set: () => setShowAltTextSubmissionError(true),\n      dismiss: () => setShowAltTextSubmissionError(false),\n    },\n  };\n};\n\n/**\n * onInputChange(handleValue)\n * Simple event handler forwarding the event target value to a given callback\n * @param {func} handleValue - event value handler\n * @return {func} - evt callback that will call handleValue with the event target value.\n */\nexport const onInputChange = (handleValue) => (e) => handleValue(e.target.value);\n\n/**\n * onCheckboxChange(handleValue)\n * Simple event handler forwarding the event target checked prop to a given callback\n * @param {func} handleValue - event value handler\n * @return {func} - evt callback that will call handleValue with the event target checked prop.\n */\nexport const onCheckboxChange = (handleValue) => (e) => handleValue(e.target.checked);\n\n/**\n * checkFormValidation({ altText, isDecorative, onAltTextFail })\n * Handle saving the image context to the text editor\n * @param {string} altText - image alt text\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} onAltTextFail - called if alt text validation fails\n */\nexport const checkFormValidation = ({\n  altText,\n  isDecorative,\n  onAltTextFail,\n}) => {\n  if (!isDecorative && altText === '') {\n    onAltTextFail();\n    return false;\n  }\n  return true;\n};\n\n/**\n * onSave({ altText, dimensions, isDecorative, saveToEditor })\n * Handle saving the image context to the text editor\n * @param {string} altText - image alt text\n * @param {object} dimensions - image dimensions ({ width, height })\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} saveToEditor - save method for submitting image settings.\n */\nexport const onSaveClick = ({\n  altText,\n  dimensions,\n  isDecorative,\n  saveToEditor,\n}) => () => {\n  if (module.checkFormValidation({\n    altText: altText.value,\n    isDecorative,\n    onAltTextFail: () => {\n      altText.error.set();\n      altText.validation.set();\n    },\n  })) {\n    altText.error.dismiss();\n    altText.validation.dismiss();\n    saveToEditor({\n      altText: altText.value,\n      dimensions,\n      isDecorative,\n    });\n  }\n};\n\nexport default {\n  altText: altTextHooks,\n  dimensions: dimensionHooks,\n  onCheckboxChange,\n  onInputChange,\n  onSaveClick,\n  checkFormValidation,\n};\n"],"mappings":"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"}