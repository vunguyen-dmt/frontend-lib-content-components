{"version":3,"file":"selectors.test.js","names":["_requests","require","selectors","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","jest","mock","createSelector","fn","preSelectors","cb","testValue","testKey","describe","it","expect","requestStatus","requests","requestKey","toEqual","myMethod","_ref","data","myData","statusSelector","testStateSelector","selector","expected","status","RequestStates","inactive","pending","completed","failed","isFinished","error","errorStatus","undefined","response","errorCode","test","connectedSelectors","beforeEach","key","connectedStatusSelectors","afterEach","testStatusSelector","name","map"],"sources":["../../../../../src/editors/data/redux/requests/selectors.test.js"],"sourcesContent":["/* eslint-disable no-import-assign */\nimport { RequestStates } from '../../constants/requests';\n\n// import * in order to mock in-file references\nimport * as selectors from './selectors';\n\njest.mock('reselect', () => ({\n  createSelector: jest.fn((preSelectors, cb) => ({ preSelectors, cb })),\n}));\n\nconst testValue = 'my test VALUE';\nconst testKey = 'MY test key';\n\ndescribe('request selectors', () => {\n  describe('basic selectors', () => {\n    describe('requestStatus', () => {\n      it('returns the state associated with the given requestKey', () => {\n        expect(\n          selectors.requestStatus(\n            { requests: { [testKey]: testValue } },\n            { requestKey: testKey },\n          ),\n        ).toEqual(testValue);\n      });\n    });\n    describe('statusSelector', () => {\n      it('returns a state selector that applies a fn against request state by requestKey', () => {\n        const myMethod = ({ data }) => ({ myData: data });\n        expect(selectors.statusSelector(myMethod)(\n          { requests: { [testKey]: { data: testValue } } },\n          { requestKey: testKey },\n        )).toEqual({ myData: testValue });\n      });\n    });\n    describe('state selectors', () => {\n      const testStateSelector = (selector, expected) => {\n        describe(selector, () => {\n          it(`returns true iff the request status equals ${expected}`, () => {\n            expect(selectors[selector]({ status: expected })).toEqual(true);\n            expect(selectors[selector]({ status: 'other' })).toEqual(false);\n          });\n        });\n      };\n      testStateSelector('isInactive', RequestStates.inactive);\n      testStateSelector('isPending', RequestStates.pending);\n      testStateSelector('isCompleted', RequestStates.completed);\n      testStateSelector('isFailed', RequestStates.failed);\n      describe('isFinished', () => {\n        it('returns true iff the request is completed or failed', () => {\n          expect(selectors.isFinished({ status: RequestStates.completed })).toEqual(true);\n          expect(selectors.isFinished({ status: RequestStates.failed })).toEqual(true);\n          expect(selectors.isFinished({ status: 'other' })).toEqual(false);\n        });\n      });\n    });\n    describe('error selectors', () => {\n      describe('error', () => {\n        it('returns the error for the request', () => {\n          expect(selectors.error({ error: testValue })).toEqual(testValue);\n        });\n      });\n      describe('errorStatus', () => {\n        it('returns the status the error response iff one exists', () => {\n          expect(selectors.errorStatus({})).toEqual(undefined);\n          expect(selectors.errorStatus({ error: {} })).toEqual(undefined);\n          expect(selectors.errorStatus({ error: { response: {} } })).toEqual(undefined);\n          expect(selectors.errorStatus(\n            { error: { response: { status: testValue } } },\n          )).toEqual(testValue);\n        });\n      });\n      describe('errorCode', () => {\n        it('returns the status the error code iff one exists', () => {\n          expect(selectors.errorCode({})).toEqual(undefined);\n          expect(selectors.errorCode({ error: {} })).toEqual(undefined);\n          expect(selectors.errorCode({ error: { response: {} } })).toEqual(undefined);\n          expect(selectors.errorCode(\n            { error: { response: { data: testValue } } },\n          )).toEqual(testValue);\n        });\n      });\n    });\n    describe('data', () => {\n      it('returns the data from the request', () => {\n        expect(selectors.data({ data: testValue })).toEqual(testValue);\n      });\n    });\n  });\n  describe('exported selectors', () => {\n    test('requestStatus forwards basic selector', () => {\n      expect(selectors.default.requestStatus).toEqual(selectors.requestStatus);\n    });\n    describe('statusSelector selectors', () => {\n      let statusSelector;\n      let connectedSelectors;\n      beforeEach(() => {\n        statusSelector = selectors.statusSelector;\n        selectors.statusSelector = jest.fn(key => ({ statusSelector: key }));\n        connectedSelectors = selectors.connectedStatusSelectors();\n      });\n      afterEach(() => {\n        selectors.statusSelector = statusSelector;\n      });\n      const testStatusSelector = (name) => {\n        describe(name, () => {\n          it(`returns a status selector keyed to the ${name} selector`, () => {\n            expect(connectedSelectors[name].statusSelector).toEqual(selectors[name]);\n          });\n        });\n      };\n      [\n        'isInactive',\n        'isPending',\n        'isCompleted',\n        'isFailed',\n        'error',\n        'errorCode',\n        'errorStatus',\n        'data',\n      ].map(testStatusSelector);\n    });\n  });\n});\n"],"mappings":"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"}