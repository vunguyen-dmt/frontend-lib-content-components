{"version":3,"file":"SettingsOption.js","names":["_react","_interopRequireWildcard","require","_paragon","_icons","_propTypes","_hooks","_CardSection","_interopRequireDefault","_jsxRuntime","_excluded","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","SettingsOption","_ref","title","className","extraSections","children","summary","hasExpandableTextArea","passThroughProps","isCardCollapsibleOpen","toggleCardCollapse","showFullCard","jsxs","Card","jsx","Section","Collapsible","Advanced","open","onToggle","Trigger","Visible","whenClosed","Icon","src","KeyboardArrowDown","whenOpen","KeyboardArrowUp","createElement","map","section","index","Fragment","exports","propTypes","string","isRequired","node","arrayOf","shape","bool","defaultProps","_default"],"sources":["../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/SettingsOption.jsx"],"sourcesContent":["import React from 'react';\nimport { Collapsible, Icon, Card } from '@edx/paragon';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@edx/paragon/icons';\nimport {\n  arrayOf,\n  shape,\n  string,\n  node,\n  bool,\n} from 'prop-types';\nimport { showFullCard } from './hooks';\nimport CardSection from './CardSection';\n\nexport const SettingsOption = ({\n  title, className, extraSections, children, summary, hasExpandableTextArea, ...passThroughProps\n}) => {\n  const { isCardCollapsibleOpen, toggleCardCollapse } = showFullCard(hasExpandableTextArea);\n\n  return (\n    <Card className={`${className} settingsOption border border-light-700 shadow-none`}>\n      <Card.Section className=\"settingsCardTitleSection\" key={`settingsOption-${title}-header`}>\n        <Collapsible.Advanced\n          open={isCardCollapsibleOpen}\n          onToggle={toggleCardCollapse}\n        >\n          <Collapsible.Trigger className=\"collapsible-trigger d-flex\">\n            <span className=\"flex-grow-1 text-primary-500 x-small\">{title}</span>\n            <Collapsible.Visible whenClosed>\n              <Icon src={KeyboardArrowDown} />\n            </Collapsible.Visible>\n            <Collapsible.Visible whenOpen>\n              <Icon src={KeyboardArrowUp} />\n            </Collapsible.Visible>\n          </Collapsible.Trigger>\n        </Collapsible.Advanced>\n      </Card.Section>\n      <CardSection {...passThroughProps} isCardCollapsibleOpen={isCardCollapsibleOpen} summary={summary} key={`settingsOption-${title}-children`}>\n        {children}\n      </CardSection>\n      {extraSections.map((section, index) => (\n        <>\n          {isCardCollapsibleOpen && <hr />}\n          {/* eslint-disable-next-line react/no-array-index-key */}\n          <CardSection {...passThroughProps} isCardCollapsibleOpen={isCardCollapsibleOpen} key={`settingsOption-${title}-${index}`}>\n            {section.children}\n          </CardSection>\n        </>\n      ))}\n    </Card>\n  );\n};\nSettingsOption.propTypes = {\n  title: string.isRequired,\n  children: node.isRequired,\n  className: string,\n  summary: string.isRequired,\n  extraSections: arrayOf(shape({\n    children: node,\n  })),\n  hasExpandableTextArea: bool,\n};\nSettingsOption.defaultProps = {\n  className: '',\n  extraSections: [],\n  hasExpandableTextArea: false,\n};\n\nexport default SettingsOption;\n"],"mappings":"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"}