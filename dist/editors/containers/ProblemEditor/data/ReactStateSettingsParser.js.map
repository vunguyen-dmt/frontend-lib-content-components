{"version":3,"file":"ReactStateSettingsParser.js","names":["_fastXmlParser","require","_lodashEs","_interopRequireDefault","_problem","_SettingsParser","obj","__esModule","default","SETTING_KEYS","ReactStateSettingsParser","constructor","problemState","problem","rawOLX","getSettings","settings","defaultSettings","stateSettings","numberOfAttemptsChoice","ShowAnswerTypesKeys","AFTER_SOME_NUMBER_OF_ATTEMPTS","AFTER_ALL_ATTEMPTS","AFTER_ALL_ATTEMPTS_OR_CORRECT","popuplateItem","scoring","attempts","maxAttempts","showAnswer","showanswer","_","includes","on","showResetButton","rerandomize","parseRawOlxSettings","rawOlxSettings","parserOptions","ignoreAttributes","alwaysCreateTextNode","numberParseOptions","leadingZeros","hex","parser","XMLParser","olx","parse","settingAttributes","Object","keys","filter","tag","startsWith","forEach","attribute","attributeKey","substring","parseInt","_default","exports"],"sources":["../../../../../src/editors/containers/ProblemEditor/data/ReactStateSettingsParser.js"],"sourcesContent":["import { XMLParser } from 'fast-xml-parser';\nimport _ from 'lodash-es';\n\nimport {\n  ShowAnswerTypesKeys,\n} from '../../../data/constants/problem';\nimport { popuplateItem } from './SettingsParser';\n\nconst SETTING_KEYS = [\n  'max_attempts',\n  'weight',\n  'showanswer',\n  'show_reset_button',\n  'rerandomize',\n];\n\nclass ReactStateSettingsParser {\n  constructor(problemState) {\n    this.problem = problemState.problem;\n    this.rawOLX = problemState.rawOLX;\n  }\n\n  getSettings() {\n    let settings = {};\n    const { defaultSettings } = this.problem;\n    const stateSettings = this.problem.settings;\n\n    const numberOfAttemptsChoice = [\n      ShowAnswerTypesKeys.AFTER_SOME_NUMBER_OF_ATTEMPTS,\n      ShowAnswerTypesKeys.AFTER_ALL_ATTEMPTS,\n      ShowAnswerTypesKeys.AFTER_ALL_ATTEMPTS_OR_CORRECT,\n    ];\n\n    settings = popuplateItem(settings, 'number', 'max_attempts', stateSettings.scoring.attempts, defaultSettings?.maxAttempts, true);\n    settings = popuplateItem(settings, 'weight', 'weight', stateSettings.scoring);\n    settings = popuplateItem(settings, 'on', 'showanswer', stateSettings.showAnswer, defaultSettings?.showanswer);\n    if (_.includes(numberOfAttemptsChoice, stateSettings.showAnswer.on)) {\n      settings = popuplateItem(settings, 'afterAttempts', 'attempts_before_showanswer_button', stateSettings.showAnswer);\n    }\n    settings = popuplateItem(settings, 'showResetButton', 'show_reset_button', stateSettings, defaultSettings?.showResetButton);\n    settings = popuplateItem(settings, 'timeBetween', 'submission_wait_seconds', stateSettings);\n    settings = popuplateItem(settings, 'randomization', 'rerandomize', stateSettings, defaultSettings?.rerandomize);\n\n    return settings;\n  }\n\n  parseRawOlxSettings() {\n    const rawOlxSettings = this.getSettings();\n    const parserOptions = {\n      ignoreAttributes: false,\n      alwaysCreateTextNode: true,\n      numberParseOptions: {\n        leadingZeros: false,\n        hex: false,\n      },\n    };\n    const parser = new XMLParser(parserOptions);\n    const olx = parser.parse(this.rawOLX);\n    const settingAttributes = Object.keys(olx.problem).filter(tag => tag.startsWith('@_'));\n    settingAttributes.forEach(attribute => {\n      const attributeKey = attribute.substring(2);\n      if (SETTING_KEYS.includes(attributeKey)) {\n        if (attributeKey === 'max_attempts' || attributeKey === 'weight') {\n          rawOlxSettings[attributeKey] = parseInt(olx.problem[attribute]);\n        } else {\n          rawOlxSettings[attributeKey] = olx.problem[attribute];\n        }\n      }\n    });\n    return rawOlxSettings;\n  }\n}\n\nexport default ReactStateSettingsParser;\n"],"mappings":"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"}