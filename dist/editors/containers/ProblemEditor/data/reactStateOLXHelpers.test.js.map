{"version":3,"file":"reactStateOLXHelpers.test.js","names":["_reactStateOLXHelpers","require","describe","node","div","label","em","nodeWithNestedLabel","it","received","nodeContainsChildTags","expect","toEqual","recursive","exampleQuestionObject","p","questionObjectWithoutDiv","findNodesAndRemoveTheirParentNodes","arrayOfNodes","nodesToFind","parentsToRemove","tagName","toThrow","TypeError","undefined"],"sources":["../../../../../src/editors/containers/ProblemEditor/data/reactStateOLXHelpers.test.js"],"sourcesContent":["import { nodeContainsChildTags, findNodesAndRemoveTheirParentNodes, tagName } from './reactStateOLXHelpers';\n\ndescribe('reactStateOLXHelpers', () => {\n  describe('findNodesWithChildTags', () => {\n    const node = {\n      div:\n       [\n         {\n           label:\n           [\n             { '#text': 'def' },\n           ],\n         },\n         { '#text': ' ' },\n         {\n           em:\n           [\n             { '#text': 'ghi' },\n           ],\n           ':@': { '@_class': 'olx_description' },\n         },\n         {\n           em:\n           [\n             { '#text': 'jkl' },\n           ],\n         },\n       ],\n    };\n\n    const nodeWithNestedLabel = {\n      div:\n       [\n         {\n           div:\n           [{\n             label:\n            [\n              { '#text': 'def' },\n            ],\n           }],\n         },\n         { '#text': ' ' },\n         {\n           em:\n           [\n             { '#text': 'ghi' },\n           ],\n           ':@': { '@_class': 'olx_description' },\n         },\n         {\n           em:\n           [\n             { '#text': 'jkl' },\n           ],\n         },\n       ],\n    };\n\n    it('should return true if node contains specified child tags', () => {\n      const received = nodeContainsChildTags(node, ['p', 'label']);\n      expect(received).toEqual(true);\n    });\n\n    it('should return false if node does not contain child tags', () => {\n      const received = nodeContainsChildTags(node, ['p', 'span']);\n      expect(received).toEqual(false);\n    });\n\n    it('should return true if node contains specified nested child tags and recursive is true', () => {\n      const received = nodeContainsChildTags(nodeWithNestedLabel, ['p', 'label'], { recursive: true });\n      expect(received).toEqual(true);\n    });\n\n    it('should return false if node contains specified nested child tags and recursive is not set', () => {\n      const received = nodeContainsChildTags(nodeWithNestedLabel, ['p', 'label']);\n      expect(received).toEqual(false);\n    });\n\n    it('should handle arrays somehow, in case there is an edge case where it is passed', () => {\n      const received = nodeContainsChildTags([nodeWithNestedLabel, node], ['p', 'label'], { recursive: true });\n      expect(received).toEqual(true);\n    });\n  });\n\n  describe('findNodesAndRemoveTheirParentNodes', () => {\n    const exampleQuestionObject = [\n      {\n        p: [{\n          '#text': 'abc',\n        }],\n      },\n      {\n        div:\n        [\n          {\n            label:\n            [{ '#text': 'def' }],\n          },\n          { '#text': ' ' },\n          {\n            em:\n            [{\n              '#text': 'ghi',\n            }],\n            ':@': { '@_class': 'olx_description' },\n          },\n          { em: [{ '#text': 'Just a generic em tag' }] },\n        ],\n      },\n    ];\n\n    const questionObjectWithoutDiv = [\n      {\n        p: [{\n          '#text': 'abc',\n        }],\n      },\n      {\n        label: [{ '#text': 'def' }],\n      },\n      { '#text': ' ' },\n      {\n        em:\n            [{\n              '#text': 'ghi',\n            }],\n        ':@': { '@_class': 'olx_description' },\n      },\n      { em: [{ '#text': 'Just a generic em tag' }] },\n    ];\n\n    it('should remove parent nodes of specified child tags', () => {\n      expect(findNodesAndRemoveTheirParentNodes({\n        arrayOfNodes: exampleQuestionObject,\n        nodesToFind: ['label'],\n        parentsToRemove: ['div'],\n      })).toEqual(questionObjectWithoutDiv);\n    });\n\n    it('should not remove anything unless specified in \"parentsToRemove\"', () => {\n      expect(findNodesAndRemoveTheirParentNodes({\n        arrayOfNodes: exampleQuestionObject,\n        nodesToFind: ['label'],\n        parentsToRemove: ['span'],\n      })).toEqual(exampleQuestionObject);\n    });\n  });\n\n  describe('tagName', () => {\n    it('should return the tag name of the node', () => {\n      expect(tagName({\n        p: [{\n          '#text': 'abc',\n        }],\n      })).toEqual('p');\n    });\n\n    it('should throw an error if the node is an array', () => {\n      expect(() => tagName([])).toThrow(TypeError);\n    });\n\n    it('should return undefined if the node is text-only', () => {\n      expect(tagName({ '#text': 'abc' })).toEqual(undefined);\n    });\n\n    it('should return undefined if the node is an empty object', () => {\n      expect(tagName({})).toEqual(undefined);\n    });\n\n    it('should return correct tagName if the node has text and class properties as well', () => {\n      expect(tagName({\n        ':@': { '@_class': 'olx_description' },\n        '#text': 'abc',\n        em:\n            [{\n              '#text': 'ghi',\n            }],\n      })).toEqual('em');\n    });\n  });\n});\n"],"mappings":"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"}