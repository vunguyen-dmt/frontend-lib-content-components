{"version":3,"file":"mockApi.js","names":["urls","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","mockPromise","returnValue","Promise","resolve","fetchBlockById","_ref","blockId","studioEndpointUrl","data","display_name","metadata","download_track","download_video","edx_video_id","html5_sources","show_captions","sub","track","transcripts","en","filename","xml_attributes","source","youtube_id_1_0","markdown","attempts_before_showanswer_button","max_attempts","show_reset_button","showanswer","submission_wait_seconds","weight","exports","fetchByUnitId","_ref2","ancestors","id","fetchAssets","_ref3","learningContextId","assets","displayName","contentType","dateAdded","url","externalUrl","portableUrl","thumbnail","locked","fetchCourseDetails","_ref4","license","checkTranscripts","_ref5","youTubeId","videoId","command","importTranscript","_ref6","fetchAdvanceSettings","_ref7","allow_unsupported_xblocks","fetchVideoFeatures","_ref8","allowThumbnailUpload","videoSharingEnabledForCourse","normalizeContent","_ref9","blockType","content","title","response","category","couseKey","has_changes","olx","settings","saveBlock","_ref10","block","uploadAsset","_ref11","courseAssets","asset","content_type","date_added","external_url","portable_url","msg","fetchStudioView","_ref12","rerandomize","html","includes","emptyMock"],"sources":["../../../../../src/editors/data/services/cms/mockApi.js"],"sourcesContent":["/* istanbul ignore file */\nimport * as urls from './urls';\n\nconst mockPromise = (returnValue) => new Promise(resolve => resolve(returnValue));\n\n// TODO: update to return block data appropriate per block ID, which will equal block type\n// eslint-disable-next-line\nexport const fetchBlockById = ({ blockId, studioEndpointUrl }) => {\n  let data = {};\n  if (blockId === 'html-block-id') {\n    data = {\n      data: `<problem>\n      </problem>`,\n      display_name: 'My Text Prompt',\n      metadata: {\n        display_name: 'Welcome!',\n        download_track: true,\n        download_video: true,\n        edx_video_id: 'f36f06b5-92e5-47c7-bb26-bcf986799cb7',\n        html5_sources: [\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n        ],\n        show_captions: true,\n        sub: '',\n        track: '',\n        transcripts: {\n          en: { filename: 'my-transcript-url' },\n        },\n        xml_attributes: {\n          source: '',\n        },\n        youtube_id_1_0: 'dQw4w9WgXcQ',\n      },\n    };\n  } else if (blockId === 'problem-block-id') {\n    data = {\n      data: `<problem>\n    </problem>`,\n      display_name: 'Dropdown',\n      metadata: {\n        markdown: `You can use this template as a guide to the simple editor markdown and OLX markup to use for dropdown problems. Edit this component to replace this template with your own assessment.\n        >>Add the question text, or prompt, here. This text is required.||You can add an optional tip or note related to the prompt like this. <<\n        [[\n        an incorrect answer\n        (the correct answer)\n        an incorrect answer\n        ]]`,\n        attempts_before_showanswer_button: 7,\n        max_attempts: 5,\n        show_reset_button: true,\n        showanswer: 'after_attempts',\n        submission_wait_seconds: 15,\n        weight: 29,\n      },\n    };\n  } else if (blockId === 'game-block-id') {\n    data = {\n      display_name: 'Game Block',\n      // TODO: insert mock data from backend here\n    };\n  }\n  return mockPromise({ data: { ...data } });\n};\n\n// TODO: update to return block data appropriate per block ID, which will equal block type\n// eslint-disable-next-line\nexport const fetchByUnitId = ({ blockId, studioEndpointUrl }) => mockPromise({\n  data: { ancestors: [{ id: 'unitUrl' }] },\n});\n// eslint-disable-next-line\nexport const fetchAssets = ({ learningContextId, studioEndpointUrl }) => mockPromise({\n  data: {\n    assets: [\n      {\n        displayName: 'shahrukh.jpg',\n        contentType: 'image/jpeg',\n        dateAdded: 'Jan 05, 2022 at 17:38 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@shahrukh.jpg',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@shahrukh.jpg',\n        portableUrl: '/static/shahrukh.jpg',\n        thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@shahrukh.jpg',\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@shahrukh.jpg',\n      },\n      {\n        displayName: 'IMG_5899.jpg',\n        contentType: 'image/jpeg',\n        dateAdded: 'Nov 16, 2021 at 18:55 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@IMG_5899.jpg',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@IMG_5899.jpg',\n        portableUrl: '/static/IMG_5899.jpg',\n        thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@IMG_5899.jpg',\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@IMG_5899.jpg',\n      },\n      {\n        displayName: 'ccexample.srt',\n        contentType: 'application/octet-stream',\n        dateAdded: 'Nov 01, 2021 at 15:42 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@ccexample.srt',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@ccexample.srt',\n        portableUrl: '/static/ccexample.srt',\n        thumbnail: null,\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@ccexample.srt',\n      },\n      {\n        displayName: 'Tennis Ball.jpeg',\n        contentType: 'image/jpeg',\n        dateAdded: 'Aug 04, 2021 at 16:52 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@Tennis_Ball.jpeg',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@Tennis_Ball.jpeg',\n        portableUrl: '/static/Tennis_Ball.jpeg',\n        thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@Tennis_Ball-jpeg.jpg',\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@Tennis_Ball.jpeg',\n      },\n    ],\n  },\n});\n// eslint-disable-next-line\nexport const fetchCourseDetails = ({ studioEndpointUrl, learningContextId }) => mockPromise({\n  data: {\n    // license: \"creative-commons: ver=4.0 BY NC\",\n    license: 'all-rights-reserved',\n  },\n});\n// eslint-disable-next-line\nexport const checkTranscripts = ({youTubeId, studioEndpointUrl, blockId, videoId}) => mockPromise({\n  data: {\n    command: 'import',\n  },\n});\n// eslint-disable-next-line\nexport const importTranscript = ({youTubeId, studioEndpointUrl, blockId}) => mockPromise({\n  data: {\n    edx_video_id: 'f36f06b5-92e5-47c7-bb26-bcf986799cb7',\n  },\n});\n// eslint-disable-next-line\nexport const fetchAdvanceSettings = ({ studioEndpointUrl, learningContextId }) => mockPromise({\n  data: { allow_unsupported_xblocks: { value: true } },\n});\n// eslint-disable-next-line\nexport const fetchVideoFeatures = ({ studioEndpointUrl }) => mockPromise({\n  data: {\n    allowThumbnailUpload: true,\n    videoSharingEnabledForCourse: true,\n  },\n});\n\nexport const normalizeContent = ({\n  blockId,\n  blockType,\n  content,\n  learningContextId,\n  title,\n}) => {\n  let response = {};\n  if (blockType === 'html') {\n    response = {\n      category: blockType,\n      couseKey: learningContextId,\n      data: content,\n      has_changes: true,\n      id: blockId,\n      metadata: { display_name: title },\n    };\n  } else if (blockType === 'problem') {\n    response = {\n      data: content.olx,\n      category: blockType,\n      couseKey: learningContextId,\n      has_changes: true,\n      id: blockId,\n      metadata: { display_name: title, ...content.settings },\n    };\n  } else {\n    throw new TypeError(`No Block in V2 Editors named /\"${blockType}/\", Cannot Save Content.`);\n  }\n  return { ...response };\n};\n\nexport const saveBlock = ({\n  blockId,\n  blockType,\n  content,\n  learningContextId,\n  studioEndpointUrl,\n  title,\n}) => mockPromise({\n  url: urls.block({ studioEndpointUrl, blockId }),\n  content: normalizeContent({\n    blockType,\n    content,\n    blockId,\n    learningContextId,\n    title,\n  }),\n});\n\nexport const uploadAsset = ({\n  learningContextId,\n  studioEndpointUrl,\n  // image,\n}) => mockPromise({\n  url: urls.courseAssets({ studioEndpointUrl, learningContextId }),\n  asset: {\n    asset: {\n      display_name: 'journey_escape.jpg',\n      content_type: 'image/jpeg',\n      date_added: 'Jan 05, 2022 at 21:26 UTC',\n      url: '/asset-v1:edX+test101+2021_T1+type@asset+block@journey_escape.jpg',\n      external_url: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@journey_escape.jpg',\n      portable_url: '/static/journey_escape.jpg',\n      thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@journey_escape.jpg',\n      locked: false,\n      id: 'asset-v1:edX+test101+2021_T1+type@asset+block@journey_escape.jpg',\n    },\n    msg: 'Upload completed',\n  },\n});\n\n// TODO: update to return block data appropriate per block ID, which will equal block type\n// eslint-disable-next-line\nexport const fetchStudioView = ({ blockId, studioEndpointUrl }) => {\n  let data = {};\n  if (blockId === 'html-block-id') {\n    data = {\n      data: '<p>Test prompt content</p>',\n      display_name: 'My Text Prompt',\n      metadata: {\n        display_name: 'Welcome!',\n        download_track: true,\n        download_video: true,\n        edx_video_id: 'f36f06b5-92e5-47c7-bb26-bcf986799cb7',\n        html5_sources: [\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n        ],\n        show_captions: true,\n        sub: '',\n        track: '',\n        transcripts: {\n          en: { filename: 'my-transcript-url' },\n        },\n        xml_attributes: {\n          source: '',\n        },\n        youtube_id_1_0: 'dQw4w9WgXcQ',\n      },\n    };\n  } else if (blockId === 'problem-block-id') {\n    data = {\n      data: `<problem>\n      <optionresponse>\n          <p>You can use this template as a guide to the simple editor markdown and OLX markup to use for dropdown problems. Edit this component to replace this template with your own assessment.</p>\n          <label>Add the question text, or prompt, here. This text is required.</label>\n          <description>You can add an optional tip or note related to the prompt like this. </description>\n          <optioninput>\n              <option correct=\"False\">an incorrect answer</option>\n              <option correct=\"True\">the correct answer</option>\n              <option correct=\"False\">an incorrect answer</option>\n          </optioninput>\n      </optionresponse>\n  </problem>`,\n      display_name: 'Dropdown',\n      metadata: {\n        markdown: `You can use this template as a guide to the simple editor markdown and OLX markup to use for dropdown problems. Edit this component to replace this template with your own assessment.\n        >>Add the question text, or prompt, here. This text is required.||You can add an optional tip or note related to the prompt like this. <<\n        [[\n        an incorrect answer\n        (the correct answer)\n        an incorrect answer\n        ]]`,\n        attempts_before_showanswer_button: 7,\n        max_attempts: 5,\n        rerandomize: 'per_student',\n        show_reset_button: true,\n        showanswer: 'after_attempts',\n        submission_wait_seconds: 15,\n        weight: 29,\n      },\n    };\n  }\n\n  return mockPromise({\n    data: {\n      // The following is sent for 'raw' editors.\n      html: blockId.includes('mockRaw') ? 'data-editor=\"raw\"' : '',\n      ...data,\n    },\n  });\n};\n\nexport const emptyMock = () => mockPromise({});\n"],"mappings":"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"}