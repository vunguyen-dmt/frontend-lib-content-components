{"version":3,"file":"problem.js","names":["_utils","require","_singleSelect","_interopRequireDefault","_multiSelect","_dropdown","_numericalInput","_textInput","_advancedOlxTemplates","_basicOlxTemplates","obj","__esModule","default","ProblemTypeKeys","exports","StrictDict","SINGLESELECT","MULTISELECT","DROPDOWN","NUMERIC","TEXTINPUT","ADVANCED","ProblemTypes","title","preview","singleSelect","previewDescription","description","helpLink","prev","next","template","basicOlxTemplates","multiSelect","dropdown","numericalInput","numeric","textInput","AdvanceProblemKeys","BLANK","CIRCUITSCHEMATIC","JSINPUT","CUSTOMGRADER","IMAGE","FORMULA","PROBLEMWITHHINT","AdvanceProblems","status","advancedOlxTemplates","circuitSchematic","jsInputResponse","customGrader","imageResponse","formulaResponse","problemWithHint","ShowAnswerTypesKeys","ALWAYS","ANSWERED","ATTEMPTED","CLOSED","FINISHED","CORRECT_OR_PAST_DUE","PAST_DUE","NEVER","AFTER_SOME_NUMBER_OF_ATTEMPTS","AFTER_ALL_ATTEMPTS","AFTER_ALL_ATTEMPTS_OR_CORRECT","ATTEMPTED_NO_PAST_DUE","ShowAnswerTypes","id","defaultMessage","RandomizationTypesKeys","ONRESET","PERSTUDENT","RandomizationTypes","RichTextProblems","settingsOlxAttributes"],"sources":["../../../../src/editors/data/constants/problem.js"],"sourcesContent":["import { StrictDict } from '../../utils';\nimport singleSelect from '../images/singleSelect.png';\nimport multiSelect from '../images/multiSelect.png';\nimport dropdown from '../images/dropdown.png';\nimport numericalInput from '../images/numericalInput.png';\nimport textInput from '../images/textInput.png';\nimport advancedOlxTemplates from './advancedOlxTemplates';\nimport basicOlxTemplates from './basicOlxTemplates';\n\nexport const ProblemTypeKeys = StrictDict({\n  SINGLESELECT: 'multiplechoiceresponse',\n  MULTISELECT: 'choiceresponse',\n  DROPDOWN: 'optionresponse',\n  NUMERIC: 'numericalresponse',\n  TEXTINPUT: 'stringresponse',\n  ADVANCED: 'advanced',\n});\n\nexport const ProblemTypes = StrictDict({\n  [ProblemTypeKeys.SINGLESELECT]: {\n    title: 'Single select',\n    preview: singleSelect,\n    previewDescription: 'Learners must select the correct answer from a list of possible options.',\n    description: 'Enter your single select answers below and select which choices are correct. Learners must choose one correct answer.',\n    helpLink: 'https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/exercises_tools/multiple_choice.html',\n    prev: ProblemTypeKeys.TEXTINPUT,\n    next: ProblemTypeKeys.MULTISELECT,\n    template: basicOlxTemplates.singleSelect,\n\n  },\n  [ProblemTypeKeys.MULTISELECT]: {\n    title: 'Multi-select',\n    preview: multiSelect,\n    previewDescription: 'Learners must select all correct answers from a list of possible options.',\n    description: 'Enter your multi select answers below and select which choices are correct. Learners must choose all correct answers.',\n    helpLink: 'https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/exercises_tools/checkbox.html',\n    next: ProblemTypeKeys.DROPDOWN,\n    prev: ProblemTypeKeys.SINGLESELECT,\n    template: basicOlxTemplates.multiSelect,\n  },\n  [ProblemTypeKeys.DROPDOWN]: {\n    title: 'Dropdown',\n    preview: dropdown,\n    previewDescription: 'Learners must select the correct answer from a list of possible options',\n    description: 'Enter your dropdown answers below and select which choice is correct. Learners must select one correct answer.',\n    helpLink: 'https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/exercises_tools/dropdown.html',\n    next: ProblemTypeKeys.NUMERIC,\n    prev: ProblemTypeKeys.MULTISELECT,\n    template: basicOlxTemplates.dropdown,\n  },\n  [ProblemTypeKeys.NUMERIC]: {\n    title: 'Numerical input',\n    preview: numericalInput,\n    previewDescription: 'Specify one or more correct numeric answers, submitted in a response field.',\n    description: 'Enter correct numerical input answers below. Learners must enter one correct answer.',\n    helpLink: 'https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/exercises_tools/numerical_input.html',\n    next: ProblemTypeKeys.TEXTINPUT,\n    prev: ProblemTypeKeys.DROPDOWN,\n    template: basicOlxTemplates.numeric,\n  },\n  [ProblemTypeKeys.TEXTINPUT]: {\n    title: 'Text input',\n    preview: textInput,\n    previewDescription: 'Specify one or more correct text answers, including numbers and special characters, submitted in a response field.',\n    description: 'Enter your text input answers below and select which choices are correct. Learners must enter one correct answer.',\n    helpLink: 'https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/exercises_tools/text_input.html',\n    prev: ProblemTypeKeys.NUMERIC,\n    next: ProblemTypeKeys.SINGLESELECT,\n    template: basicOlxTemplates.textInput,\n  },\n  [ProblemTypeKeys.ADVANCED]: {\n    title: 'Advanced Problem',\n    preview: ('<div />'),\n    description: 'An Advanced Problem Type',\n    helpLink: 'something.com',\n  },\n});\n\nexport const AdvanceProblemKeys = StrictDict({\n  BLANK: 'blankadvanced',\n  CIRCUITSCHEMATIC: 'circuitschematic',\n  JSINPUT: 'jsinputresponse',\n  CUSTOMGRADER: 'customgrader',\n  IMAGE: 'imageresponse',\n  FORMULA: 'formularesponse',\n  PROBLEMWITHHINT: 'problemwithhint',\n});\n\nexport const AdvanceProblems = StrictDict({\n  [AdvanceProblemKeys.BLANK]: {\n    title: 'Blank problem',\n    status: '',\n    template: '<problem></problem>',\n  },\n  [AdvanceProblemKeys.CIRCUITSCHEMATIC]: {\n    title: 'Circuit schematic builder',\n    status: 'Not supported',\n    template: advancedOlxTemplates.circuitSchematic,\n  },\n  [AdvanceProblemKeys.JSINPUT]: {\n    title: 'Custom JavaScript display and grading',\n    status: '',\n    template: advancedOlxTemplates.jsInputResponse,\n  },\n  [AdvanceProblemKeys.CUSTOMGRADER]: {\n    title: 'Custom Python-evaluated input',\n    status: 'Provisional',\n    template: advancedOlxTemplates.customGrader,\n  },\n  [AdvanceProblemKeys.IMAGE]: {\n    title: 'Image mapped input',\n    status: 'Not supported',\n    template: advancedOlxTemplates.imageResponse,\n  },\n  [AdvanceProblemKeys.FORMULA]: {\n    title: 'Math expression input',\n    status: '',\n    template: advancedOlxTemplates.formulaResponse,\n  },\n  [AdvanceProblemKeys.PROBLEMWITHHINT]: {\n    title: 'Problem with adaptive hint',\n    status: 'Not supported',\n    template: advancedOlxTemplates.problemWithHint,\n  },\n});\n\nexport const ShowAnswerTypesKeys = StrictDict({\n  ALWAYS: 'always',\n  ANSWERED: 'answered',\n  ATTEMPTED: 'attempted',\n  CLOSED: 'closed',\n  FINISHED: 'finished',\n  CORRECT_OR_PAST_DUE: 'correct_or_past_due',\n  PAST_DUE: 'past_due',\n  NEVER: 'never',\n  AFTER_SOME_NUMBER_OF_ATTEMPTS: 'after_attempts',\n  AFTER_ALL_ATTEMPTS: 'after_all_attempts',\n  AFTER_ALL_ATTEMPTS_OR_CORRECT: 'after_all_attempts_or_correct',\n  ATTEMPTED_NO_PAST_DUE: 'attempted_no_past_due',\n});\n\nexport const ShowAnswerTypes = StrictDict({\n  [ShowAnswerTypesKeys.ALWAYS]: {\n    id: 'authoring.problemeditor.settings.showanswertype.always',\n    defaultMessage: 'Always',\n  },\n  [ShowAnswerTypesKeys.ANSWERED]: {\n    id: 'authoring.problemeditor.settings.showanswertype.answered',\n    defaultMessage: 'Answered',\n  },\n  [ShowAnswerTypesKeys.ATTEMPTED]: {\n    id: 'authoring.problemeditor.settings.showanswertype.attempted',\n    defaultMessage: 'Attempted or Past Due',\n  },\n  [ShowAnswerTypesKeys.CLOSED]: {\n    id: 'authoring.problemeditor.settings.showanswertype.closed',\n    defaultMessage: 'Closed',\n  },\n  [ShowAnswerTypesKeys.FINISHED]: {\n    id: 'authoring.problemeditor.settings.showanswertype.finished',\n    defaultMessage: 'Finished',\n  },\n  [ShowAnswerTypesKeys.CORRECT_OR_PAST_DUE]: {\n    id: 'authoring.problemeditor.settings.showanswertype.correct_or_past_due',\n    defaultMessage: 'Correct or Past Due',\n  },\n  [ShowAnswerTypesKeys.PAST_DUE]: {\n    id: 'authoring.problemeditor.settings.showanswertype.past_due',\n    defaultMessage: 'Past Due',\n  },\n  [ShowAnswerTypesKeys.NEVER]: {\n    id: 'authoring.problemeditor.settings.showanswertype.never',\n    defaultMessage: 'Never',\n  },\n  [ShowAnswerTypesKeys.AFTER_SOME_NUMBER_OF_ATTEMPTS]: {\n    id: 'authoring.problemeditor.settings.showanswertype.after_attempts',\n    defaultMessage: 'After Some Number of Attempts',\n  },\n  [ShowAnswerTypesKeys.AFTER_ALL_ATTEMPTS]: {\n    id: 'authoring.problemeditor.settings.showanswertype.after_all_attempts',\n    defaultMessage: 'After All Attempts',\n  },\n  [ShowAnswerTypesKeys.AFTER_ALL_ATTEMPTS_OR_CORRECT]: {\n    id: 'authoring.problemeditor.settings.showanswertype.after_all_attempts_or_correct',\n    defaultMessage: 'After All Attempts or Correct',\n  },\n  [ShowAnswerTypesKeys.ATTEMPTED_NO_PAST_DUE]: {\n    id: 'authoring.problemeditor.settings.showanswertype.attempted_no_past_due',\n    defaultMessage: 'Attempted',\n  },\n});\n\nexport const RandomizationTypesKeys = StrictDict({\n  NEVER: 'never',\n  ALWAYS: 'always',\n  ONRESET: 'onreset',\n  PERSTUDENT: 'per_student',\n});\n\nexport const RandomizationTypes = StrictDict({\n  [RandomizationTypesKeys.ALWAYS]: {\n    id: 'authoring.problemeditor.settings.RandomizationTypes.always',\n    defaultMessage: 'Always',\n  },\n  [RandomizationTypesKeys.NEVER]: {\n    id: 'authoring.problemeditor.settings.RandomizationTypes.never',\n    defaultMessage: 'Never',\n  },\n  [RandomizationTypesKeys.ONRESET]: {\n    id: 'authoring.problemeditor.settings.RandomizationTypes.onreset',\n    defaultMessage: 'On Reset',\n  },\n  [RandomizationTypesKeys.PERSTUDENT]: {\n    id: 'authoring.problemeditor.settings.RandomizationTypes.perstudent',\n    defaultMessage: 'Per Student',\n  },\n});\n\nexport const RichTextProblems = [ProblemTypeKeys.SINGLESELECT, ProblemTypeKeys.MULTISELECT];\n\nexport const settingsOlxAttributes = [\n  '@_display_name',\n  '@_weight',\n  '@_max_atempts',\n  '@_showanswer',\n  '@_show_reset_button',\n  '@_submission_wait_seconds',\n  '@_attempts_before_showanswer_button',\n];\n"],"mappings":"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"}