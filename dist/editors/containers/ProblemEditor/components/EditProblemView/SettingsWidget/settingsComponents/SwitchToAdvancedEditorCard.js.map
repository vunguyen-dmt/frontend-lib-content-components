{"version":3,"file":"SwitchToAdvancedEditorCard.js","names":["_react","_interopRequireDefault","require","_reactRedux","_i18n","_paragon","_propTypes","_messages","_redux","_BaseModal","_Button","_hooks","_problem","_jsxRuntime","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","SwitchToAdvancedEditorCard","_ref","problemType","switchToAdvancedEditor","isConfirmOpen","setConfirmOpen","React","useState","ProblemTypeKeys","ADVANCED","jsxs","Card","className","children","jsx","isOpen","close","title","FormattedMessage","messages","ConfirmSwitchMessageTitle","confirmAction","onClick","confirmSwitchToAdvancedEditor","variant","ConfirmSwitchButtonLabel","size","ConfirmSwitchMessage","SwitchButtonLabel","exports","propTypes","PropTypes","func","isRequired","string","mapStateToProps","mapDispatchToProps","thunkActions","problem","_default","injectIntl","connect"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/SwitchToAdvancedEditorCard.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { Card } from '@edx/paragon';\nimport PropTypes from 'prop-types';\nimport messages from '../messages';\nimport { thunkActions } from '../../../../../../data/redux';\nimport BaseModal from '../../../../../../sharedComponents/BaseModal';\nimport Button from '../../../../../../sharedComponents/Button';\nimport { confirmSwitchToAdvancedEditor } from '../hooks';\nimport { ProblemTypeKeys } from '../../../../../../data/constants/problem';\n\nexport const SwitchToAdvancedEditorCard = ({\n  problemType,\n  switchToAdvancedEditor,\n}) => {\n  const [isConfirmOpen, setConfirmOpen] = React.useState(false);\n\n  if (problemType === ProblemTypeKeys.ADVANCED) { return null; }\n\n  return (\n    <Card className=\"border border-light-700 shadow-none\">\n      <BaseModal\n        isOpen={isConfirmOpen}\n        close={() => { setConfirmOpen(false); }}\n        title={(<FormattedMessage {...messages.ConfirmSwitchMessageTitle} />)}\n        confirmAction={(\n          <Button\n            onClick={() => confirmSwitchToAdvancedEditor({ switchToAdvancedEditor, setConfirmOpen })}\n            variant=\"primary\"\n          >\n            <FormattedMessage {...messages.ConfirmSwitchButtonLabel} />\n          </Button>\n        )}\n        size=\"md\"\n      >\n        <FormattedMessage {...messages.ConfirmSwitchMessage} />\n      </BaseModal>\n      <Button\n        className=\"my-3 ml-2 py-0\"\n        variant=\"link\"\n        size=\"sm\"\n        onClick={() => { setConfirmOpen(true); }}\n      >\n        <FormattedMessage {...messages.SwitchButtonLabel} />\n      </Button>\n    </Card>\n  );\n};\n\nSwitchToAdvancedEditorCard.propTypes = {\n  switchToAdvancedEditor: PropTypes.func.isRequired,\n  problemType: PropTypes.string.isRequired,\n};\n\nexport const mapStateToProps = () => ({\n});\nexport const mapDispatchToProps = {\n  switchToAdvancedEditor: thunkActions.problem.switchToAdvancedEditor,\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(SwitchToAdvancedEditorCard));\n"],"mappings":"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"}