{"version":3,"file":"problem.js","names":["_lodashEs","_interopRequireDefault","require","_2","requests","_interopRequireWildcard","_OLXParser","_SettingsParser","_problem","_ReactStateOLXParser","_olxTestData","_utils","_hooks","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","switchToAdvancedEditor","dispatch","getState","state","editorObject","fetchEditorContent","format","reactOLXParser","ReactStateOLXParser","problem","rawOLX","buildOLX","actions","updateField","problemType","ProblemTypeKeys","ADVANCED","exports","isBlankProblem","_ref","replace","blankProblemOLX","getDataFromOlx","_ref2","rawSettings","olxParser","parsedProblem","OLXParser","getParsedOLXData","error","console","settings","parseSettings","data","parsedSettings","_","isEmpty","loadProblem","_ref3","defaultSettings","setEnableTypeSelection","camelizeKeys","load","fetchAdvancedSettings","_ref4","advancedProblemSettingKeys","onSuccess","response","entries","_ref5","includes","onFailure","initializeProblem","blockValue","_default"],"sources":["../../../../../src/editors/data/redux/thunkActions/problem.js"],"sourcesContent":["import _ from 'lodash-es';\n/* eslint-disable import/no-cycle */\nimport { actions } from '..';\nimport * as requests from './requests';\nimport { OLXParser } from '../../../containers/ProblemEditor/data/OLXParser';\nimport { parseSettings } from '../../../containers/ProblemEditor/data/SettingsParser';\nimport { ProblemTypeKeys } from '../../constants/problem';\nimport ReactStateOLXParser from '../../../containers/ProblemEditor/data/ReactStateOLXParser';\nimport { blankProblemOLX } from '../../../containers/ProblemEditor/data/mockData/olxTestData';\nimport { camelizeKeys } from '../../../utils';\nimport { fetchEditorContent } from '../../../containers/ProblemEditor/components/EditProblemView/hooks';\n\nexport const switchToAdvancedEditor = () => (dispatch, getState) => {\n  const state = getState();\n  const editorObject = fetchEditorContent({ format: '' });\n  const reactOLXParser = new ReactStateOLXParser({ problem: state.problem, editorObject });\n  const rawOLX = reactOLXParser.buildOLX();\n  dispatch(actions.problem.updateField({ problemType: ProblemTypeKeys.ADVANCED, rawOLX }));\n};\n\nexport const isBlankProblem = ({ rawOLX }) => {\n  if (rawOLX.replace(/\\s/g, '') === blankProblemOLX.rawOLX) {\n    return true;\n  }\n  return false;\n};\n\nexport const getDataFromOlx = ({ rawOLX, rawSettings }) => {\n  let olxParser;\n  let parsedProblem;\n  try {\n    olxParser = new OLXParser(rawOLX);\n    parsedProblem = olxParser.getParsedOLXData();\n  } catch (error) {\n    console.error('The Problem Could Not Be Parsed from OLX. redirecting to Advanced editor.', error);\n    return { problemType: ProblemTypeKeys.ADVANCED, rawOLX, settings: parseSettings(rawSettings) };\n  }\n  if (parsedProblem?.problemType === ProblemTypeKeys.ADVANCED) {\n    return { problemType: ProblemTypeKeys.ADVANCED, rawOLX, settings: parseSettings(rawSettings) };\n  }\n  const { settings, ...data } = parsedProblem;\n  const parsedSettings = { ...settings, ...parseSettings(rawSettings) };\n  if (!_.isEmpty(rawOLX) && !_.isEmpty(data)) {\n    return { ...data, rawOLX, settings: parsedSettings };\n  }\n  return { settings: parsedSettings };\n};\n\nexport const loadProblem = ({ rawOLX, rawSettings, defaultSettings }) => (dispatch) => {\n  if (isBlankProblem({ rawOLX })) {\n    dispatch(actions.problem.setEnableTypeSelection(camelizeKeys(defaultSettings)));\n  } else {\n    dispatch(actions.problem.load(getDataFromOlx({ rawOLX, rawSettings })));\n  }\n};\n\nexport const fetchAdvancedSettings = ({ rawOLX, rawSettings }) => (dispatch) => {\n  const advancedProblemSettingKeys = ['max_attempts', 'showanswer', 'show_reset_button'];\n  dispatch(requests.fetchAdvancedSettings({\n    onSuccess: (response) => {\n      const defaultSettings = {};\n      Object.entries(response.data).forEach(([key, value]) => {\n        if (advancedProblemSettingKeys.includes(key)) {\n          defaultSettings[key] = value.value;\n        }\n      });\n      dispatch(actions.problem.updateField({ defaultSettings: camelizeKeys(defaultSettings) }));\n      loadProblem({ rawOLX, rawSettings, defaultSettings })(dispatch);\n    },\n    onFailure: () => { loadProblem({ rawOLX, rawSettings, defaultSettings: {} })(dispatch); },\n  }));\n};\n\nexport const initializeProblem = (blockValue) => (dispatch) => {\n  const rawOLX = _.get(blockValue, 'data.data', {});\n  const rawSettings = _.get(blockValue, 'data.metadata', {});\n  dispatch(fetchAdvancedSettings({ rawOLX, rawSettings }));\n};\n\nexport default { initializeProblem, switchToAdvancedEditor, fetchAdvancedSettings };\n"],"mappings":"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"}