{"version":3,"file":"requests.js","names":["_utils","require","_requests","_","_api","_interopRequireWildcard","_module","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","_excluded9","_excluded10","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_objectDestructuringEmpty","networkRequest","_ref","requestKey","promise","onSuccess","onFailure","dispatch","actions","requests","startRequest","then","response","completeRequest","catch","error","failRequest","exports","fetchBlock","_ref2","rest","assign","getState","module","RequestKeys","api","fetchBlockById","studioEndpointUrl","selectors","app","blockId","fetchStudioView","_ref3","fetchUnit","_ref4","fetchByUnitId","saveBlock","_ref5","content","blockType","learningContextId","title","blockTitle","uploadAsset","_ref6","asset","fetchAssets","_ref7","loadImages","data","assets","fetchVideos","_ref8","allowThumbnailUpload","_ref9","uploadThumbnail","_ref10","thumbnail","videoId","checkTranscriptsForImport","_ref11","youTubeId","importTranscript","_ref12","deleteTranscript","_ref13","language","uploadTranscript","_ref14","transcript","updateTranscriptLanguage","_ref15","file","languageBeforeChange","newLanguageCode","newLanguage","getTranscriptFile","_ref16","getTranscript","fetchCourseDetails","_ref17","fetchAdvancedSettings","_ref18","fetchVideoFeatures","_ref19","uploadVideo","_ref20","_default","StrictDict"],"sources":["../../../../../src/editors/data/redux/thunkActions/requests.js"],"sourcesContent":["import { StrictDict } from '../../../utils';\n\nimport { RequestKeys } from '../../constants/requests';\n/* eslint-disable import/no-cycle */\nimport { actions, selectors } from '..';\nimport api, { loadImages } from '../../services/cms/api';\n\nimport * as module from './requests';\n\n/**\n * Wrapper around a network request promise, that sends actions to the redux store to\n * track the state of that promise.\n * Tracks the promise by requestKey, and sends an action when it is started, succeeds, or\n * fails.  It also accepts onSuccess and onFailure methods to be called with the output\n * of failure or success of the promise.\n * @param {string} requestKey - request tracking identifier\n * @param {Promise} promise - api event promise\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const networkRequest = ({\n  requestKey,\n  promise,\n  onSuccess,\n  onFailure,\n}) => (dispatch) => {\n  dispatch(actions.requests.startRequest(requestKey));\n  return promise\n    .then((response) => {\n      if (onSuccess) {\n        onSuccess(response);\n      }\n      dispatch(actions.requests.completeRequest({ requestKey, response }));\n    })\n    .catch((error) => {\n      if (onFailure) {\n        onFailure(error);\n      }\n      dispatch(actions.requests.failRequest({ requestKey, error }));\n    });\n};\n\n/**\n * Tracked fetchByBlockId api method.\n * Tracked to the `fetchBlock` request key.\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const fetchBlock = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchBlock,\n    promise: api.fetchBlockById({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      blockId: selectors.app.blockId(getState()),\n    }),\n    ...rest,\n  }));\n};\n\n/**\n\n * Tracked fetchStudioView api method.\n * Tracked to the `fetchBlock` request key.\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const fetchStudioView = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchStudioView,\n    promise: api.fetchStudioView({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      blockId: selectors.app.blockId(getState()),\n    }),\n    ...rest,\n  }));\n};\n\n/**\n * Tracked fetchByUnitId api method.\n * Tracked to the `fetchUnit` request key.\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const fetchUnit = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchUnit,\n    promise: api.fetchByUnitId({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      blockId: selectors.app.blockId(getState()),\n    }),\n    ...rest,\n  }));\n};\n\n/**\n * Tracked saveBlock api method.  Tracked to the `saveBlock` request key.\n * @param {string} content\n * @param {[func]} onSuccess - onSuccess method ((response) => { ... })\n * @param {[func]} onFailure - onFailure method ((error) => { ... })\n */\nexport const saveBlock = ({ content, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.saveBlock,\n    promise: api.saveBlock({\n      blockId: selectors.app.blockId(getState()),\n      blockType: selectors.app.blockType(getState()),\n      learningContextId: selectors.app.learningContextId(getState()),\n      content,\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      title: selectors.app.blockTitle(getState()),\n    }),\n    ...rest,\n  }));\n};\nexport const uploadAsset = ({ asset, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.uploadAsset,\n    promise: api.uploadAsset({\n      learningContextId: selectors.app.learningContextId(getState()),\n      asset,\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const fetchAssets = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchAssets,\n    promise: api\n      .fetchAssets({\n        studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n        learningContextId: selectors.app.learningContextId(getState()),\n      })\n      .then((response) => loadImages(response.data.assets)),\n    ...rest,\n  }));\n};\n\nexport const fetchVideos = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchVideos,\n    promise: api\n      .fetchVideos({\n        studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n        learningContextId: selectors.app.learningContextId(getState()),\n      }),\n    ...rest,\n  }));\n};\n\nexport const allowThumbnailUpload = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.allowThumbnailUpload,\n    promise: api.allowThumbnailUpload({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const uploadThumbnail = ({ thumbnail, videoId, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.uploadThumbnail,\n    promise: api.uploadThumbnail({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      learningContextId: selectors.app.learningContextId(getState()),\n      thumbnail,\n      videoId,\n    }),\n    ...rest,\n  }));\n};\n\nexport const checkTranscriptsForImport = ({ videoId, youTubeId, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.checkTranscriptsForImport,\n    promise: api.checkTranscriptsForImport({\n      blockId: selectors.app.blockId(getState()),\n      videoId,\n      youTubeId,\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const importTranscript = ({ youTubeId, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.importTranscript,\n    promise: api.importTranscript({\n      blockId: selectors.app.blockId(getState()),\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      youTubeId,\n    }),\n    ...rest,\n  }));\n};\n\nexport const deleteTranscript = ({ language, videoId, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.deleteTranscript,\n    promise: api.deleteTranscript({\n      blockId: selectors.app.blockId(getState()),\n      language,\n      videoId,\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const uploadTranscript = ({\n  transcript,\n  videoId,\n  language,\n  ...rest\n}) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.uploadTranscript,\n    promise: api.uploadTranscript({\n      blockId: selectors.app.blockId(getState()),\n      transcript,\n      videoId,\n      language,\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const updateTranscriptLanguage = ({\n  file,\n  languageBeforeChange,\n  newLanguageCode,\n  videoId,\n  ...rest\n}) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.updateTranscriptLanguage,\n    promise: api.uploadTranscript({\n      blockId: selectors.app.blockId(getState()),\n      transcript: file,\n      videoId,\n      language: languageBeforeChange,\n      newLanguage: newLanguageCode,\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const getTranscriptFile = ({ language, videoId, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.getTranscriptFile,\n    promise: api.getTranscript({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      blockId: selectors.app.blockId(getState()),\n      videoId,\n      language,\n    }),\n    ...rest,\n  }));\n};\n\nexport const fetchCourseDetails = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchCourseDetails,\n    promise: api.fetchCourseDetails({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      learningContextId: selectors.app.learningContextId(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const fetchAdvancedSettings = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchAdvancedSettings,\n    promise: api.fetchAdvancedSettings({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      learningContextId: selectors.app.learningContextId(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const fetchVideoFeatures = ({ ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.fetchVideoFeatures,\n    promise: api.fetchVideoFeatures({\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport const uploadVideo = ({ data, ...rest }) => (dispatch, getState) => {\n  dispatch(module.networkRequest({\n    requestKey: RequestKeys.uploadVideo,\n    promise: api.uploadVideo({\n      data,\n      studioEndpointUrl: selectors.app.studioEndpointUrl(getState()),\n      learningContextId: selectors.app.learningContextId(getState()),\n    }),\n    ...rest,\n  }));\n};\n\nexport default StrictDict({\n  fetchBlock,\n  fetchStudioView,\n  fetchUnit,\n  saveBlock,\n  fetchAssets,\n  fetchVideos,\n  uploadAsset,\n  allowThumbnailUpload,\n  uploadThumbnail,\n  deleteTranscript,\n  uploadTranscript,\n  updateTranscriptLanguage,\n  fetchCourseDetails,\n  getTranscriptFile,\n  checkTranscriptsForImport,\n  importTranscript,\n  fetchAdvancedSettings,\n  fetchVideoFeatures,\n  uploadVideo,\n});\n"],"mappings":"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"}