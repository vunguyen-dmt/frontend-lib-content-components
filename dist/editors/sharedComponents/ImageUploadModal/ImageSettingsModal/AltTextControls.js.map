{"version":3,"file":"AltTextControls.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_i18n","hooks","_interopRequireWildcard","_messages","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","value","_toPropertyKey","configurable","writable","_toPrimitive","String","Symbol","toPrimitive","TypeError","Number","AltTextControls","_ref","isDecorative","setIsDecorative","setValue","validation","intl","jsxs","Form","Group","className","children","jsx","Label","as","FormattedMessage","messages","accessibilityLabel","Control","disabled","floatingLabel","formatMessage","altTextFloatingLabel","isInvalid","show","onChange","onInputChange","type","Feedback","altTextLocalFeedback","Checkbox","checked","onCheckboxChange","decorativeAltTextCheckboxLabel","exports","propTypes","error","PropTypes","shape","bool","isRequired","func","string","intlShape","_default","injectIntl"],"sources":["../../../../../src/editors/sharedComponents/ImageUploadModal/ImageSettingsModal/AltTextControls.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form } from '@openedx/paragon';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport * as hooks from './hooks';\nimport messages from './messages';\n\n/**\n * Wrapper for alt-text input and isDecorative checkbox control\n * @param {obj} errorProps - props for error handling\n *   {bool} isValid - are alt-text fields valid for saving?\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} setIsDecorative - handle isDecorative change event\n * @param {func} setValue - update alt-text value\n * @param {string} value - current alt-text value\n */\nexport const AltTextControls = ({\n  isDecorative,\n  setIsDecorative,\n  setValue,\n  validation,\n  value,\n  // inject\n  intl,\n}) => (\n  <Form.Group className=\"mt-4.5\">\n    <Form.Label as=\"h4\">\n      <FormattedMessage {...messages.accessibilityLabel} />\n    </Form.Label>\n    <Form.Control\n      className=\"mt-4.5\"\n      disabled={isDecorative}\n      floatingLabel={intl.formatMessage(messages.altTextFloatingLabel)}\n      isInvalid={validation.show}\n      onChange={hooks.onInputChange(setValue)}\n      type=\"input\"\n      value={value}\n    />\n    {validation.show\n      && (\n        <Form.Control.Feedback type=\"invalid\">\n          <FormattedMessage {...messages.altTextLocalFeedback} />\n        </Form.Control.Feedback>\n      )}\n    <Form.Checkbox\n      checked={isDecorative}\n      className=\"mt-4.5 decorative-control-label\"\n      onChange={hooks.onCheckboxChange(setIsDecorative)}\n    >\n      <Form.Label>\n        <FormattedMessage {...messages.decorativeAltTextCheckboxLabel} />\n      </Form.Label>\n    </Form.Checkbox>\n  </Form.Group>\n);\nAltTextControls.propTypes = {\n  error: PropTypes.shape({\n    show: PropTypes.bool,\n  }).isRequired,\n  isDecorative: PropTypes.bool.isRequired,\n  setValue: PropTypes.func.isRequired,\n  setIsDecorative: PropTypes.func.isRequired,\n  validation: PropTypes.shape({\n    show: PropTypes.bool,\n  }).isRequired,\n  value: PropTypes.string.isRequired,\n  // inject\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(AltTextControls);\n"],"mappings":"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"}