{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_reactRedux","_propTypes","_paragon","_i18n","_EditorContainer","_module","_interopRequireWildcard","_redux","_requests","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","hooks","exports","getContent","some","thumbEditor","_ref","onClose","blockValue","lmsEndpointUrl","blockFailed","blockFinished","initializeEditor","exampleValue","intl","jsxs","module","children","jsx","className","Spinner","animation","screenreadertext","formatMessage","JSON","stringify","defaultProps","propTypes","PropTypes","func","isRequired","shape","data","string","bool","intlShape","mapStateToProps","state","selectors","app","requests","isFailed","requestKey","RequestKeys","fetchBlock","isFinished","game","mapDispatchToProps","actions","_default","injectIntl","connect"],"sources":["../../../../src/editors/containers/GameEditor/index.jsx"],"sourcesContent":["/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\n/**\n * This is an example component for an xblock Editor\n * It uses pre-existing components to handle the saving of a the result of a function into the xblock's data.\n * To use run npm run-script addXblock <your>\n */\n\n/* eslint-disable no-unused-vars */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Spinner } from '@openedx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport EditorContainer from '../EditorContainer';\nimport * as module from '.';\nimport { actions, selectors } from '../../data/redux';\nimport { RequestKeys } from '../../data/constants/requests';\n\nexport const hooks = {\n  getContent: () => ({\n    some: 'content',\n  }),\n};\n\nexport const thumbEditor = ({\n  onClose,\n  // redux\n  blockValue,\n  lmsEndpointUrl,\n  blockFailed,\n  blockFinished,\n  initializeEditor,\n  exampleValue,\n  // inject\n  intl,\n}) => (\n  <EditorContainer\n    getContent={module.hooks.getContent}\n    onClose={onClose}\n  >\n    <div>\n      {exampleValue}\n    </div>\n    <div className=\"editor-body h-75 overflow-auto\">\n      {!blockFinished\n        ? (\n          <div className=\"text-center p-6\">\n            <Spinner\n              animation=\"border\"\n              className=\"m-3\"\n              // Use a messages.js file for intl messages.\n              screenreadertext={intl.formatMessage('Loading Spinner')}\n            />\n          </div>\n        )\n        : (\n          <p>\n            Your Editor Goes here.\n            You can get at the xblock data with the blockValue field.\n            here is what is in your xblock:  {JSON.stringify(blockValue)}\n          </p>\n        )}\n    </div>\n  </EditorContainer>\n);\nthumbEditor.defaultProps = {\n  blockValue: null,\n  lmsEndpointUrl: null,\n};\nthumbEditor.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  // redux\n  blockValue: PropTypes.shape({\n    data: PropTypes.shape({ data: PropTypes.string }),\n  }),\n  lmsEndpointUrl: PropTypes.string,\n  blockFailed: PropTypes.bool.isRequired,\n  blockFinished: PropTypes.bool.isRequired,\n  initializeEditor: PropTypes.func.isRequired,\n  // inject\n  intl: intlShape.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  blockValue: selectors.app.blockValue(state),\n  lmsEndpointUrl: selectors.app.lmsEndpointUrl(state),\n  blockFailed: selectors.requests.isFailed(state, { requestKey: RequestKeys.fetchBlock }),\n  blockFinished: selectors.requests.isFinished(state, { requestKey: RequestKeys.fetchBlock }),\n  // TODO fill with redux state here if needed\n  exampleValue: selectors.game.exampleValue(state),\n});\n\nexport const mapDispatchToProps = {\n  initializeEditor: actions.app.initializeEditor,\n  // TODO fill with dispatches here if needed\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(thumbEditor));\n"],"mappings":"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"}