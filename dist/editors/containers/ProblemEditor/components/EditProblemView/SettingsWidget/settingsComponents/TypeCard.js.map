{"version":3,"file":"TypeCard.js","names":["_react","_interopRequireDefault","require","_propTypes","_i18n","_SettingsOption","_problem","_messages","_TypeRow","_jsxRuntime","obj","__esModule","default","TypeCard","_ref","answers","blockTitle","correctAnswerCount","problemType","setBlockTitle","updateField","updateAnswer","intl","problemTypeKeysArray","Object","values","ProblemTypeKeys","filter","key","ADVANCED","jsx","title","formatMessage","messages","typeSettingTitle","summary","ProblemTypes","children","map","typeKey","i","label","selected","lastRow","length","exports","propTypes","PropTypes","arrayOf","shape","correct","bool","id","string","selectedFeedback","unselectedFeedback","isRequired","number","func","intlShape","_default","injectIntl"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/TypeCard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport SettingsOption from '../SettingsOption';\nimport { ProblemTypeKeys, ProblemTypes } from '../../../../../../data/constants/problem';\nimport messages from '../messages';\nimport TypeRow from './TypeRow';\n\nexport const TypeCard = ({\n  answers,\n  blockTitle,\n  correctAnswerCount,\n  problemType,\n  setBlockTitle,\n  updateField,\n  updateAnswer,\n  // inject\n  intl,\n}) => {\n  const problemTypeKeysArray = Object.values(ProblemTypeKeys).filter(key => key !== ProblemTypeKeys.ADVANCED);\n\n  if (problemType === ProblemTypeKeys.ADVANCED) { return null; }\n\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.typeSettingTitle)}\n      summary={ProblemTypes[problemType].title}\n    >\n      {problemTypeKeysArray.map((typeKey, i) => (\n        <TypeRow\n          answers={answers}\n          blockTitle={blockTitle}\n          correctAnswerCount={correctAnswerCount}\n          key={typeKey}\n          typeKey={typeKey}\n          label={ProblemTypes[typeKey].title}\n          selected={typeKey !== problemType}\n          problemType={problemType}\n          lastRow={(i + 1) === problemTypeKeysArray.length}\n          setBlockTitle={setBlockTitle}\n          updateField={updateField}\n          updateAnswer={updateAnswer}\n        />\n      ))}\n    </SettingsOption>\n  );\n};\n\nTypeCard.propTypes = {\n  answers: PropTypes.arrayOf(PropTypes.shape({\n    correct: PropTypes.bool,\n    id: PropTypes.string,\n    selectedFeedback: PropTypes.string,\n    title: PropTypes.string,\n    unselectedFeedback: PropTypes.string,\n  })).isRequired,\n  blockTitle: PropTypes.string.isRequired,\n  correctAnswerCount: PropTypes.number.isRequired,\n  problemType: PropTypes.string.isRequired,\n  setBlockTitle: PropTypes.func.isRequired,\n  updateField: PropTypes.func.isRequired,\n  updateAnswer: PropTypes.func.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(TypeCard);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,QAAA,GAAAJ,OAAA;AACA,IAAAK,SAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,QAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAgC,IAAAO,WAAA,GAAAP,OAAA;AAAA,SAAAD,uBAAAS,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEzB,MAAMG,QAAQ,GAAGC,IAAA,IAUlB;EAAA,IAVmB;IACvBC,OAAO;IACPC,UAAU;IACVC,kBAAkB;IAClBC,WAAW;IACXC,aAAa;IACbC,WAAW;IACXC,YAAY;IACZ;IACAC;EACF,CAAC,GAAAR,IAAA;EACC,MAAMS,oBAAoB,GAAGC,MAAM,CAACC,MAAM,CAACC,wBAAe,CAAC,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKF,wBAAe,CAACG,QAAQ,CAAC;EAE3G,IAAIX,WAAW,KAAKQ,wBAAe,CAACG,QAAQ,EAAE;IAAE,OAAO,IAAI;EAAE;EAE7D,oBACE,IAAApB,WAAA,CAAAqB,GAAA,EAACzB,eAAA,CAAAO,OAAc;IACbmB,KAAK,EAAET,IAAI,CAACU,aAAa,CAACC,iBAAQ,CAACC,gBAAgB,CAAE;IACrDC,OAAO,EAAEC,qBAAY,CAAClB,WAAW,CAAC,CAACa,KAAM;IAAAM,QAAA,EAExCd,oBAAoB,CAACe,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,kBACnC,IAAA/B,WAAA,CAAAqB,GAAA,EAACtB,QAAA,CAAAI,OAAO;MACNG,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBC,kBAAkB,EAAEA,kBAAmB;MAEvCsB,OAAO,EAAEA,OAAQ;MACjBE,KAAK,EAAEL,qBAAY,CAACG,OAAO,CAAC,CAACR,KAAM;MACnCW,QAAQ,EAAEH,OAAO,KAAKrB,WAAY;MAClCA,WAAW,EAAEA,WAAY;MACzByB,OAAO,EAAGH,CAAC,GAAG,CAAC,KAAMjB,oBAAoB,CAACqB,MAAO;MACjDzB,aAAa,EAAEA,aAAc;MAC7BC,WAAW,EAAEA,WAAY;MACzBC,YAAY,EAAEA;IAAa,GARtBkB,OASN,CACF;EAAC,CACY,CAAC;AAErB,CAAC;AAACM,OAAA,CAAAhC,QAAA,GAAAA,QAAA;AAEFA,QAAQ,CAACiC,SAAS,GAAG;EACnB/B,OAAO,EAAEgC,kBAAS,CAACC,OAAO,CAACD,kBAAS,CAACE,KAAK,CAAC;IACzCC,OAAO,EAAEH,kBAAS,CAACI,IAAI;IACvBC,EAAE,EAAEL,kBAAS,CAACM,MAAM;IACpBC,gBAAgB,EAAEP,kBAAS,CAACM,MAAM;IAClCtB,KAAK,EAAEgB,kBAAS,CAACM,MAAM;IACvBE,kBAAkB,EAAER,kBAAS,CAACM;EAChC,CAAC,CAAC,CAAC,CAACG,UAAU;EACdxC,UAAU,EAAE+B,kBAAS,CAACM,MAAM,CAACG,UAAU;EACvCvC,kBAAkB,EAAE8B,kBAAS,CAACU,MAAM,CAACD,UAAU;EAC/CtC,WAAW,EAAE6B,kBAAS,CAACM,MAAM,CAACG,UAAU;EACxCrC,aAAa,EAAE4B,kBAAS,CAACW,IAAI,CAACF,UAAU;EACxCpC,WAAW,EAAE2B,kBAAS,CAACW,IAAI,CAACF,UAAU;EACtCnC,YAAY,EAAE0B,kBAAS,CAACW,IAAI,CAACF,UAAU;EACvC;EACAlC,IAAI,EAAEqC,eAAS,CAACH;AAClB,CAAC;AAAC,IAAAI,QAAA,GAAAf,OAAA,CAAAjC,OAAA,GAEa,IAAAiD,gBAAU,EAAChD,QAAQ,CAAC"}